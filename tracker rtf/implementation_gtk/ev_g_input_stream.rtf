{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "[{\line}
{\tab}{\tab}Wrapper class for GInputStream{\line}
{\tab}{\tab}http://developer.gnome.org/gio/unstable/GInputStream.html{\line}
{\tab}]"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2014-09-22 06:12:29 -0700 (Mon, 22 Sep 2014) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 95779 $"{\line}
{\line}
{\b\cf6 class} {\line}
{\tab}{\cf4 EV_G_INPUT_STREAM}{\line}
{\line}
{\b\cf6 inherit}{\line}
{\tab}{\cf4 DISPOSABLE}{\line}
{\line}
{\b\cf6 create} {\line}
{\tab}{\cf5 new_from_data}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3 Initilization}{\line}
{\line}
{\tab}{\cf5 {\cf5 new_from_data} {\cf1 (}{\cf5 a_data}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_size}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Creation method}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_pixel_buffer}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_pixel_buffer} {\cf1 :=} {\cf5 c_g_memory_input_stream_new_from_data}{\cf1  }{\cf1 (}{\cf5 a_data}{\cf1 ,} {\cf5 a_size}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 check}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf1 created}{\cf1 :} {\cf5 l_pixel_buffer} {\cf1 /=} {\cf5 default_pointer}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 internal_item}{\b\cf1 .}{\cf5 share_from_pointer}{\cf1  }{\cf1 (}{\cf5 l_pixel_buffer}{\cf1 ,} {\cf5 c_size}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Query}{\line}
{\line}
{\tab}{\cf5 {\cf5 item}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  C item}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 internal_item}{\b\cf1 .}{\cf5 item}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_closed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Checks if an input stream is closed.}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_result}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_item}{\cf1 :} {\b\cf6 like} {\cf5 item}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_item} {\cf1 :=} {\cf5 item}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_item} {\cf1 /=} {\cf5 default_pointer} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_result} {\cf1 :=} {\cf5 c_g_input_stream_is_closed}{\cf1  }{\cf1 (}{\cf5 l_item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 check}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf1 should_not_happen}{\cf1 :} {\b\cf6 False}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 (}{\cf5 l_result} {\cf1 /=} 0{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Command}{\line}
{\line}
{\tab}{\cf5 {\cf5 dispose}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Action to be executed just before garbage collection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  reclaims an object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Effect it in descendants to perform specific dispose}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  actions. Those actions should only take care of freeing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  external resources; they should not perform remote calls}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on other objects since these may also be dead and reclaimed.}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_item}{\cf1 :} {\b\cf6 like} {\cf5 item}{\line}
{\tab}{\tab}{\tab}{\cf5 l_error}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 l_result}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_item} {\cf1 :=} {\cf5 item}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_item} {\cf1 /=} {\cf5 default_pointer} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_result} {\cf1 :=} {\cf5 c_g_input_stream_close}{\cf1  }{\cf1 (}{\cf5 l_item}{\cf1 ,} {\cf5 default_pointer}{\cf1 ,} {\cf1 $}{\cf5 l_error}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 check}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf1 should_not_happen}{\cf1 :} {\b\cf6 False}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 check}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf1 success}{\cf1 :} {\cf5 l_result} {\cf1 /=} 0{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Implementation}{\line}
{\line}
{\tab}{\cf5 {\cf5 internal_item}{\cf1 :} {\cf4 MANAGED_POINTER}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  C item}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Externals}{\line}
{\line}
{\tab}{\cf5 {\cf5 c_size}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Size of G_INPUT_STREAM}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	#if GTK_MAJOR_VERSION > 1 && GTK_MINOR_VERSION > 13{\line}
{\tab}{\tab}{\tab}{\tab}		return sizeof (GInputStream);{\line}
{\tab}{\tab}{\tab}{\tab}	#endif{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 c_g_memory_input_stream_new_from_data} {\cf1 (}{\cf5 a_data}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_size}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Creates a new GMemoryInputStream with data in memory of a given size.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_data: input data. [array length=len][element-type guint8]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_len:	length of the data, may be -1 if data is a nul-terminated string}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	#if GTK_MAJOR_VERSION > 1 && GTK_MINOR_VERSION > 13{\line}
{\tab}{\tab}{\tab}{\tab}		return g_memory_input_stream_new_from_data ((const void *)$a_data, (gssize)$a_size, NULL);{\line}
{\tab}{\tab}{\tab}{\tab}	#endif					{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 c_g_input_stream_close} {\cf1 (}{\cf5 a_input_stream}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_cancellable}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_error}{\cf1 :} {\cf4 TYPED_POINTER} {\cf1 [}{\cf4 POINTER}{\cf1 ]}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Closes the stream, releasing resources related to it.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_stream :	A GInputStream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_cancellable :	optional GCancellable object, NULL to ignore. }{\cf3 [allow-none]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a_error:	location to store the error occurring, or NULL to ignore}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns:	TRUE on success, FALSE (0) on failure}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	#if GTK_MAJOR_VERSION > 1 && GTK_MINOR_VERSION > 13{\line}
{\tab}{\tab}{\tab}{\tab}		return g_input_stream_close ((GInputStream *)$a_input_stream, (GCancellable *)$a_cancellable, (GError **)$a_error);{\line}
{\tab}{\tab}{\tab}{\tab}	#endif{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 c_g_input_stream_is_closed} {\cf1 (}{\cf5 a_input_stream}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Checks if an input stream is closed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  stream:	input stream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns: TRUE if the stream is closed.}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	#if GTK_MAJOR_VERSION > 1 && GTK_MINOR_VERSION > 13{\line}
{\tab}{\tab}{\tab}{\tab}		return g_input_stream_is_closed ((GInputStream *)$a_input_stream);{\line}
{\tab}{\tab}{\tab}{\tab}	#endif{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 note}{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 1984-2014, Eiffel Software and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"{\line}
{\tab}{\cf1 source}{\cf1 :} "[{\line}
{\tab}{\tab}Eiffel Software{\line}
{\tab}{\tab}5949 Hollister Ave., Goleta, CA 93117 USA{\line}
{\tab}{\tab}Telephone 805-685-1006, Fax 805-685-6869{\line}
{\tab}{\tab}Website http://www.eiffel.com{\line}
{\tab}{\tab}Customer support http://support.eiffel.com{\line}
{\tab}]"{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 EV_G_INPUT_STREAM}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
