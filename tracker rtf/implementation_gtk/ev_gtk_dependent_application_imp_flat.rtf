{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "EiffelVision application, GTK+ implementation."{\line}
{\tab}{\cf1 legal}{\cf1 :} "See notice at end of class."{\line}
{\tab}{\cf1 status}{\cf1 :} "See notice at end of class."{\line}
{\tab}{\cf1 keywords}{\cf1 :} "application"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-09-28 11:45:08 -0700 (Wed, 28 Sep 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 99198 $"{\line}
{\line}
{\b\cf6 deferred} {\b\cf6 class} {\line}
{\tab}{\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_create}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process instances of classes with no creation clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 Arguments}{\cf1 :} {\cf4 ARGUMENTS_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Arguments that were used to start current execution.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Command_line}{\cf1 :} {\cf4 ARGUMENTS}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `arguments' instead for handling Unicode command lines. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Command line that was used to start current execution}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 current_working_directory}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `current_working_path' instead to support Unicode path. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory of current execution.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execution of this query on concurrent threads will result in}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  an unspecified behavior.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count}{\cf1 ,} {\cf5 l_nbytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_managed}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} 50{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_managed}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_dir_current}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 =} -1 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "."{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} {\cf5 l_nbytes}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 l_managed}{\b\cf1 .}{\cf5 resize}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_dir_current}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} 0 {\b\cf6 and} {\cf5 l_nbytes} {\cf1 <=} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 File_info}{\b\cf1 .}{\cf5 pointer_to_file_name_8}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "."{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 check}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 False}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 current_working_path}{\cf1 :} {\cf4 PATH}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory of current execution.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count}{\cf1 ,} {\cf5 l_nbytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_managed}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} 50{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_managed}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_dir_current}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 =} -1 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_string}{\cf1  }{\cf1 (}"."{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} {\cf5 l_nbytes}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 l_managed}{\b\cf1 .}{\cf5 resize}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_dir_current}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} 0 {\b\cf6 and} {\cf5 l_nbytes} {\cf1 <=} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_pointer}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_string}{\cf1  }{\cf1 (}"."{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Default_shell}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default shell}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf5 item}{\cf1  }{\cf1 (}"SHELL"{\cf1 )} {\b\cf6 as} l_shell {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_shell}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_empty}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 generating_type}{\cf1 :} {\cf4 TYPE} {\cf1 [}{\b\cf6 detachable} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generating_type_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 generator}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of current object's generating class}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (base class of the type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 get} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `item' instead to retrieve Unicode environment variables. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Value of }{\cf5 s}{\cf3  if it is an environment variable and has been set;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  void otherwise.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 s_exists}{\cf1 :} {\cf5 s} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 not_has_null_character}{\cf1 :} {\b\cf6 not} {\cf5 s}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'%U'{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf5 item}{\cf1  }{\cf1 (}{\cf5 s}{\cf1 )} {\b\cf6 as} l_val {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_val}{\b\cf1 .}{\cf5 as_string_8}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Home_directory_name}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `home_directory_path' instead to support Unicode path. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory name corresponding to the home directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 home_directory_supported}{\cf1 :} {\cf5 Operating_environment}{\b\cf1 .}{\cf5 home_directory_supported}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count}{\cf1 ,} {\cf5 l_nbytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_managed}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} 50{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_managed}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_home_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} {\cf5 l_nbytes}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_managed}{\b\cf1 .}{\cf5 resize}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_home_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} 0 {\b\cf6 and} {\cf5 l_nbytes} {\cf1 <=} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 File_info}{\b\cf1 .}{\cf5 pointer_to_file_name_8}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Home_directory_path}{\cf1 :} {\b\cf6 detachable} {\cf4 PATH}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory name corresponding to the home directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 home_directory_supported}{\cf1 :} {\cf5 Operating_environment}{\b\cf1 .}{\cf5 home_directory_supported}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count}{\cf1 ,} {\cf5 l_nbytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_managed}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} 50{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_managed}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_home_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} {\cf5 l_nbytes}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_managed}{\b\cf1 .}{\cf5 resize}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_home_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} 0 {\b\cf6 and} {\cf5 l_nbytes} {\cf1 <=} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_pointer}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 id_object} {\cf1 (}{\cf5 an_id}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\b\cf6 detachable} {\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Object associated with }{\cf5 an_id}{\cf3  (void if no such object)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 an_id} {\cf1 >} 0 {\b\cf6 and then} {\b\cf6 attached} {\cf1 \{}{\cf4 IDENTIFIED}{\cf1 \}} {\cf5 eif_id_object}{\cf1  }{\cf1 (}{\cf5 an_id}{\cf1 )} {\b\cf6 as} l_result {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_result}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\b\cf6 Void} {\b\cf6 or else} {\b\cf6 Result}{\b\cf1 .}{\cf5 object_id} {\cf1 =} {\cf5 an_id}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 item} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Value of }{\cf5 s}{\cf3  if it is an environment variable and has been set;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  void otherwise.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 s_exists}{\cf1 :} {\cf5 s} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 not_has_null_character}{\cf1 :} {\b\cf6 not} {\cf5 s}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'%U'{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_key}{\cf1 ,} {\cf5 l_value}{\cf1 :} {\cf4 NATIVE_STRING}{\line}
{\tab}{\tab}{\tab}{\cf5 c_string}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_key}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 s}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 c_string} {\cf1 :=} {\cf5 eif_getenv}{\cf1  }{\cf1 (}{\cf5 l_key}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 not} {\cf5 c_string}{\b\cf1 .}{\cf5 is_default_pointer} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_value}{\b\cf1 .}{\cf5 make_from_pointer}{\cf1  }{\cf1 (}{\cf5 c_string}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_value}{\b\cf1 .}{\cf5 string}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 object_id}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Unique for current object in any given session}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 internal_id} {\cf1 =} 0 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 internal_id} {\cf1 :=} {\cf5 eif_object_id}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 internal_id}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_id}{\cf1 :} {\b\cf6 Result} {\cf1 >} 0 {\b\cf6 implies} {\cf5 id_object}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )} {\cf1 =} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 pixbuf_formats} {\cf1 (}{\cf5 a_writeable}{\cf1 :} {\cf4 BOOLEAN}{\cf1 )}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  List of the readable formats available with current Gtk 2.0 library}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GTK_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 formats}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 format_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 format_name}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf5 pixbuf_format}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 a_cs}{\cf1 :} {\cf4 EV_GTK_C_STRING}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 formats} {\cf1 :=} {\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 gdk_pixbuf_get_formats}{\line}
{\tab}{\tab}{\tab}{\cf5 format_count} {\cf1 :=} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 g_slist_length} {\cf1 (}{\cf5 formats}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 0{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}0{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 a_cs}{\b\cf1 .}{\cf5 set_with_eiffel_string}{\cf1  }{\cf1 (}""{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 =} {\cf5 format_count}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 pixbuf_format} {\cf1 :=} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 g_slist_nth_data} {\cf1 (}{\cf5 formats}{\cf1 ,} {\cf5 i}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 a_cs}{\b\cf1 .}{\cf5 share_from_pointer}{\cf1  }{\cf1 (}{\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 gdk_pixbuf_format_get_name} {\cf1 (}{\cf5 pixbuf_format}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 format_name} {\cf1 :=} {\cf5 a_cs}{\b\cf1 .}{\cf5 string}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 format_name}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"jpeg"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 format_name} {\cf1 :=} {\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"jpg"{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a_writeable} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 gdk_pixbuf_format_is_writable} {\cf1 (}{\cf5 pixbuf_format}{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 extend}{\cf1  }{\cf1 (}{\cf5 format_name}{\b\cf1 .}{\cf5 as_upper}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 extend}{\cf1  }{\cf1 (}{\cf5 format_name}{\b\cf1 .}{\cf5 as_upper}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 g_slist_free} {\cf1 (}{\cf5 formats}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Readable_pixbuf_formats}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Array of GdkPixbuf formats that Vision2 can load to on the gtk2.4.x platform}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GTK_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 pixbuf_formats}{\cf1  }{\cf1 (}{\b\cf6 False}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 compare_objects}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Root_directory_name}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory name corresponding to the root directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 root_directory_supported}{\cf1 :} {\cf5 Operating_environment}{\b\cf1 .}{\cf5 root_directory_supported}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf1 \{}{\cf4 PLATFORM}{\cf1 \}}{\b\cf1 .}{\cf5 is_windows} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "\\"{\line}
{\tab}{\tab}{\tab}{\b\cf6 elseif} {\cf1 \{}{\cf4 PLATFORM}{\cf1 \}}{\b\cf1 .}{\cf5 is_vms} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "[000000]"{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "/"{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 starting_environment}{\cf1 :} {\cf4 HASH_TABLE} {\cf1 [}{\cf4 STRING_32}{\cf1 ,} {\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Table of environment variables when current process starts,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  indexed by variable name}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_ptr}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 ns}{\cf1 :} {\cf4 NATIVE_STRING}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}40{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 0{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_ptr} {\cf1 :=} {\cf5 i_th_environ}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 ns}{\b\cf1 .}{\cf5 make_empty}{\cf1  }{\cf1 (}0{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_ptr}{\b\cf1 .}{\cf5 is_default_pointer}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 ns}{\b\cf1 .}{\cf5 set_shared_from_pointer}{\cf1  }{\cf1 (}{\cf5 l_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf5 separated_variables}{\cf1  }{\cf1 (}{\cf5 ns}{\b\cf1 .}{\cf5 string}{\cf1 )} {\b\cf6 as} l_curr_var {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 force}{\cf1  }{\cf1 (}{\cf5 l_curr_var}{\b\cf1 .}{\cf5 value}{\cf1 ,} {\cf5 l_curr_var}{\b\cf1 .}{\cf5 key}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_ptr} {\cf1 :=} {\cf5 i_th_environ}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 result_attached}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 starting_environment_variables}{\cf1 :} {\cf4 HASH_TABLE} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use starting_environment which support unicode. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Table of environment variables when current process starts,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  indexed by variable name}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_ptr}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 ns}{\cf1 :} {\cf4 NATIVE_STRING}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}40{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 0{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_ptr} {\cf1 :=} {\cf5 i_th_environ}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 ns}{\b\cf1 .}{\cf5 make_empty}{\cf1  }{\cf1 (}0{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_ptr}{\b\cf1 .}{\cf5 is_default_pointer}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 ns}{\b\cf1 .}{\cf5 set_shared_from_pointer}{\cf1  }{\cf1 (}{\cf5 l_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf5 separated_variables}{\cf1  }{\cf1 (}{\cf5 ns}{\b\cf1 .}{\cf5 string}{\cf1 )} {\b\cf6 as} l_curr_var {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 force}{\cf1  }{\cf1 (}{\cf5 l_curr_var}{\b\cf1 .}{\cf5 value}{\b\cf1 .}{\cf5 as_string_8}{\cf1 ,} {\cf5 l_curr_var}{\b\cf1 .}{\cf5 key}{\b\cf1 .}{\cf5 as_string_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_ptr} {\cf1 :=} {\cf5 i_th_environ}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 result_attached}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 User_directory_name}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `user_directory_path' instead to support Unicode paths. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory name corresponding to the user directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  On Windows: C:\\Users\\manus\\Documents}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  On Unix & Mac: $HOME}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Otherwise Void}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count}{\cf1 ,} {\cf5 l_nbytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_managed}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} 50{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_managed}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}50{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_user_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} {\cf5 l_nbytes}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_managed}{\b\cf1 .}{\cf5 resize}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_user_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} 0 {\b\cf6 and} {\cf5 l_nbytes} {\cf1 <=} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 File_info}{\b\cf1 .}{\cf5 pointer_to_file_name_8}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\b\cf6 elseif} {\cf5 Operating_environment}{\b\cf1 .}{\cf5 home_directory_supported} {\b\cf6 and then} {\b\cf6 attached} {\cf5 Home_directory_name} {\b\cf6 as} l_home {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_home}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 User_directory_path}{\cf1 :} {\b\cf6 detachable} {\cf4 PATH}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory name corresponding to the user directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  On Windows: C:\\Users\\manus\\Documents}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  On Unix & Mac: $HOME}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Otherwise Void}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count}{\cf1 ,} {\cf5 l_nbytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_managed}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} 50{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_managed}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}50{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_user_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_count} {\cf1 :=} {\cf5 l_nbytes}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_managed}{\b\cf1 .}{\cf5 resize}{\cf1  }{\cf1 (}{\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_nbytes} {\cf1 :=} {\cf5 eif_user_directory_name_ptr}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf5 l_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_nbytes} {\cf1 >} 0 {\b\cf6 and} {\cf5 l_nbytes} {\cf1 <=} {\cf5 l_count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_pointer}{\cf1  }{\cf1 (}{\cf5 l_managed}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\b\cf6 elseif} {\cf5 Operating_environment}{\b\cf1 .}{\cf5 home_directory_supported} {\b\cf6 and then} {\b\cf6 attached} {\cf5 Home_directory_path} {\b\cf6 as} l_home {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_home}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Writeable_pixbuf_formats}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Array of GdkPixbuf formats that Vision2 can save to on the gtk2.4.x platform}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EV_GTK_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 pixbuf_formats}{\cf1  }{\cf1 (}{\b\cf6 True}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 compare_objects}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}{\cf4 NATIVE_STRING_HANDLER}{\cf1 \}} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 pointer_length_in_bytes} {\cf1 (}{\cf5 a_ptr}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Length in bytes of a platform specific file name pointer, not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  including the null-terminating character. If size is too large}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to fit into an }{\cf3 \{}{\cf3 INTEGER}{\cf3 \}}{\cf3  instance, the size is truncated to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 \{INTEGER_32\}.max_value}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 NATIVE_STRING_HANDLER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 NATIVE_STRING_HANDLER}{\line}
{\tab}{\tab}{\tab}{\cf1 a_ptr_not_null}{\cf1 :} {\cf5 a_ptr} {\cf1 /=} {\cf5 default_pointer}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_length}{\cf1 :} {\cf4 NATURAL_64}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_length} {\cf1 :=} {\cf5 c_pointer_length_in_bytes}{\cf1  }{\cf1 (}{\cf5 a_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_length} {\cf1 <=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\b\cf1 .}{\cf5 to_natural_64} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_length}{\b\cf1 .}{\cf5 to_integer_32}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Comparison}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  or attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\cf5 a}{\cf1 ,} {\cf5 b}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 both_or_none_void}{\cf1 :} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\cf1 (}{\b\cf6 Result} {\b\cf6 and} {\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void}{\cf1 )}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 ,} {\cf5 a}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to objects considered equal?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 is_deep_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 Current}{\cf3  and }{\cf5 other}{\cf3  attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object considered}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to current object?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical objects of the same type?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default object comparison criterion.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object of the same type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as current object, and field-by-field identical to it?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 conforms_to} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does type of current object conform to type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of }{\cf5 other}{\cf3  (as per Eiffel: The Language, chapter 13)?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 id_freed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has }{\cf5 Current}{\cf3  been removed from the table?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 id_object}{\cf1  }{\cf1 (}{\cf5 internal_id}{\cf1 )} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 same_type} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is type of current object identical to type of }{\cf5 other}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 and} {\cf5 other}{\b\cf1 .}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_in_final_collect}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is GC currently performing final collection}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  after execution of current program?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Safe to use in }{\cf5 dispose}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 DISPOSABLE}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use %"eif_memory.h%""{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"return eif_is_in_final_collect;"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status setting}{\line}
{\line}
{\tab}{\cf5 {\cf5 change_working_directory} {\cf1 (}{\cf5 path}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `change_working_path' instead to support Unicode path. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the current directory to }{\cf5 path}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_ptr}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_ptr} {\cf1 :=} {\cf5 File_info}{\b\cf1 .}{\cf5 file_name_to_pointer}{\cf1  }{\cf1 (}{\cf5 path}{\cf1 ,} {\b\cf6 Void}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 return_code} {\cf1 :=} {\cf5 eif_chdir}{\cf1  }{\cf1 (}{\cf5 l_ptr}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 change_working_path} {\cf1 (}{\cf5 path}{\cf1 :} {\cf4 PATH}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the current directory to }{\cf5 path}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_ptr}{\cf1 :} {\cf4 MANAGED_POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_ptr} {\cf1 :=} {\cf5 path}{\b\cf1 .}{\cf5 to_pointer}{\line}
{\tab}{\tab}{\tab}{\cf5 return_code} {\cf1 :=} {\cf5 eif_chdir}{\cf1  }{\cf1 (}{\cf5 l_ptr}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 ee_launch} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pass to the operating system an asynchronous request to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  execute }{\cf5 s}{\cf3  interpreted as a Unicode string.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 s}{\cf3  is empty, use the default shell as command.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 s_not_void}{\cf1 :} {\cf5 s} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_cstr}{\cf1 :} {\cf4 NATIVE_STRING}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 s}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_cstr}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 Default_shell}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_cstr}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 s}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\cf5 asynchronous_system_call}{\cf1  }{\cf1 (}{\cf5 l_cstr}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 put} {\cf1 (}{\cf5 value}{\cf1 ,} {\cf5 key}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the environment variable }{\cf5 key}{\cf3  to }{\cf5 value}{\cf3  treating both}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 value}{\cf3  and }{\cf5 key}{\cf3  as Unicode characters.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 key_exists}{\cf1 :} {\cf5 key} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 key_meaningful}{\cf1 :} {\b\cf6 not} {\cf5 key}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\tab}{\cf1 not_key_has_null_character}{\cf1 :} {\b\cf6 not} {\cf5 key}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'%U'{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 value_exists}{\cf1 :} {\cf5 value} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 not_value_has_null_character}{\cf1 :} {\b\cf6 not} {\cf5 value}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}'%U'{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_env}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_c_env}{\cf1 :} {\cf4 NATIVE_STRING}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_env}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 value}{\b\cf1 .}{\cf5 count} {\cf1 +} {\cf5 key}{\b\cf1 .}{\cf5 count} {\cf1 +} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_env}{\b\cf1 .}{\cf5 append_string_general}{\cf1  }{\cf1 (}{\cf5 key}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_env}{\b\cf1 .}{\cf5 append_character}{\cf1  }{\cf1 (}'='{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_env}{\b\cf1 .}{\cf5 append_string_general}{\cf1  }{\cf1 (}{\cf5 value}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_c_env}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 l_env}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 Environ}{\b\cf1 .}{\cf5 force}{\cf1  }{\cf1 (}{\cf5 l_c_env}{\cf1 ,} {\b\cf6 create}{\cf1  }{\cf1 \{}{\cf4 IMMUTABLE_STRING_32}{\cf1 \}}{\b\cf1 .}{\cf5 make_from_string_general}{\cf1  }{\cf1 (}{\cf5 key}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 return_code} {\cf1 :=} {\cf5 eif_putenv}{\cf1  }{\cf1 (}{\cf5 l_c_env}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 variable_set}{\cf1 :} {\cf5 return_code} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf1 (}{\cf5 value}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 and then} {\cf5 item}{\cf1  }{\cf1 (}{\cf5 key}{\cf1 )} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\b\cf6 not} {\cf5 value}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 and then} {\b\cf6 attached} {\cf5 item}{\cf1  }{\cf1 (}{\cf5 key}{\cf1 )} {\b\cf6 as} k {\b\cf6 and then} {\cf5 k}{\b\cf1 .}{\cf5 same_string_general}{\cf1  }{\cf1 (}{\cf5 value}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 sleep} {\cf1 (}{\cf5 nanoseconds}{\cf1 :} {\cf4 INTEGER_64}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Suspend thread execution for interval specified in}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 nanoseconds}{\cf3  (1 nanosecond = 10^(-9) second).}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 non_negative_nanoseconds}{\cf1 :} {\cf5 nanoseconds} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 eif_sleep}{\cf1  }{\cf1 (}{\cf5 nanoseconds}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 system} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 READABLE_STRING_GENERAL}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pass to the operating system a request to execute }{\cf5 s}{\cf3  interpreted as a Unicode string.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 s}{\cf3  is empty, use the default shell as command.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 s_exists}{\cf1 :} {\cf5 s} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_cstr}{\cf1 :} {\cf4 NATIVE_STRING}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 s}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_cstr}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 Default_shell}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_cstr}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 s}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\cf5 return_code} {\cf1 :=} {\cf5 system_call}{\cf1  }{\cf1 (}{\cf5 l_cstr}{\b\cf1 .}{\cf5 item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Removal}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 free_id}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Free the entry associated with }{\cf5 object_id}{\cf3  if any.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 internal_id} {\cf1 >} 0 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 eif_object_id_free}{\cf1  }{\cf1 (}{\cf5 internal_id}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 internal_id} {\cf1 :=} -1{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 object_freed}{\cf1 :} {\cf5 id_freed}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Removal}{\line}
{\line}
{\tab}{\cf5 {\cf5 dispose}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Free the entry associated with }{\cf5 object_id}{\cf3  if any}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 DISPOSABLE}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 free_id}{\line}
{\tab}{\tab}{\b\cf6 ensure then} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED}{\line}
{\tab}{\tab}{\tab}{\cf1 object_freed}{\cf1 :} {\cf5 id_freed}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Duplication}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  For non-void }{\cf5 other}{\cf3 , }{\cf5 clone}{\cf3  calls }{\cf5 copy}{\cf3 ;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to change copying/cloning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Update current object using fields of object attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 other}{\cf3 , so as to yield equal objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Current} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `deep_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void: otherwise, new object structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  recursively duplicated from the one attached to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Effect equivalent to that of:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		}{\cf5 copy}{\cf3  (}{\cf5 other}{\cf3  . }{\cf5 deep_twin}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 copy}{\cf1  }{\cf1 (}{\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_twin}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object structure recursively duplicated from Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `standard_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 standard_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy every field of }{\cf5 other}{\cf3  onto corresponding field}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_standard_equal}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_twin}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 standard_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 twin}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object equal to }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 twin}{\cf3  calls }{\cf5 copy}{\cf3 ; to change copying/twinning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 as_attached}{\cf1 :} {\b\cf6 attached} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Remove calls to this feature. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Attached version of Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Can be used during transitional period to convert}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  non-void-safe classes to void-safe ones.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default}{\cf1 :} {\b\cf6 detachable} {\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of object's type}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default_pointer}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Avoid the need to write }{\cf5 p}{\cf3 .}{\cf5 default}{\cf3  for}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  some }{\cf5 p}{\cf3  of type }{\cf5 POINTER}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_rescue}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process exception for routines with no Rescue clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 do_nothing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execute a null action.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_id_object} {\cf1 (}{\cf5 an_id}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Object associated with }{\cf5 an_id}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 an_id_non_negative}{\cf1 :} {\cf5 an_id} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C use %"eif_object_id.h%""{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_object_id} {\cf1 (}{\cf5 an_object}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New identifier for }{\cf5 an_object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C use %"eif_object_id.h%""{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 eif_object_id_positive}{\cf1 :} {\b\cf6 Result} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 inserted}{\cf1 :} {\cf5 eif_id_object}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )} {\cf1 =} {\cf5 an_object}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_object_id_free} {\cf1 (}{\cf5 an_id}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Free the entry }{\cf5 an_id}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 an_id_non_negative}{\cf1 :} {\cf5 an_id} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C use %"eif_object_id.h%""{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 IDENTIFIED_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 removed}{\cf1 :} {\cf5 eif_id_object}{\cf1  }{\cf1 (}{\cf5 an_id}{\cf1 )} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Implementation}{\line}
{\line}
{\tab}{\cf5 {\cf5 c_strcmp} {\cf1 (}{\cf5 ptr1}{\cf1 ,} {\cf5 ptr2}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <string.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"return strcmp ((const char*) $ptr1, (const char*) $ptr2);"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_description}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Description string of the current font used}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 font_name_ptr}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 a_cs}{\cf1 :} {\cf4 EV_GTK_C_STRING}{\line}
{\tab}{\tab}{\tab}{\cf5 l_result}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 g_object_get_string} {\cf1 (}{\cf5 Default_gtk_settings}{\cf1 ,} {\cf5 Gtk_font_name_setting}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf1 $}{\cf5 font_name_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_name_ptr} {\cf1 /=} {\cf5 default_pointer} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 a_cs}{\b\cf1 .}{\cf5 make_from_pointer}{\cf1  }{\cf1 (}{\cf5 font_name_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_result} {\cf1 :=} {\cf5 a_cs}{\b\cf1 .}{\cf5 string}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 l_result} {\cf1 =} {\b\cf6 Void} {\b\cf6 or else} {\cf5 l_result}{\b\cf1 .}{\cf5 is_empty} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"Sans 10"{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_result}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_name}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Face name of the default font}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_settings_changed} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 initialize_default_font_values}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 default_font_name_internal}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_name_internal}{\cf1 :} {\cf4 STRING_32}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_point_height}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Size of the default font in points}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_settings_changed} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 initialize_default_font_values}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 default_font_point_height_internal}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_point_height_internal}{\cf1 :} {\cf4 INTEGER_32}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_style}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Style of the default font}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_settings_changed} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 initialize_default_font_values}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 default_font_style_internal}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_style_internal}{\cf1 :} {\cf4 INTEGER_32}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_weight}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Weight of the default font}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_settings_changed} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 initialize_default_font_values}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 default_font_weight_internal}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_font_weight_internal}{\cf1 :} {\cf4 INTEGER_32}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Default_gtk_settings}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default GtkSettings}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 gtk_settings_get_default}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_gtk_window}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Font_names_on_system}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Retrieve a list of all the font names available on the system}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 a_name_array}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 n_array_elements}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 utf8_string}{\cf1 :} {\cf4 EV_GTK_C_STRING}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 retrieve_available_fonts}{\cf1  }{\cf1 (}{\cf5 default_gtk_window}{\cf1 ,} {\cf1 $}{\cf5 a_name_array}{\cf1 ,} {\cf1 $}{\cf5 n_array_elements}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 n_array_elements}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 utf8_string}{\b\cf1 .}{\cf5 set_with_eiffel_string}{\cf1  }{\cf1 (}""{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 >} {\cf5 n_array_elements}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 utf8_string}{\b\cf1 .}{\cf5 share_from_pointer}{\cf1  }{\cf1 (}{\cf5 gchar_array_i_th}{\cf1  }{\cf1 (}{\cf5 a_name_array}{\cf1 ,} {\cf5 i}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 extend}{\cf1  }{\cf1 (}{\cf5 utf8_string}{\b\cf1 .}{\cf5 string}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 compare_objects}{\line}
{\tab}{\tab}{\tab}{\cf5 a_name_array}{\b\cf1 .}{\cf5 memory_free}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Font_names_on_system_as_lower}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Retrieve a list of all the font names available on the system in lower case}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  This is needed for easy case insensitive lookup in EV_FONT_IMP.}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 l_font_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_font_names}{\cf1 :} {\b\cf6 like} {\cf5 Font_names_on_system}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_font_names} {\cf1 :=} {\cf5 Font_names_on_system}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_font_count} {\cf1 :=} {\cf5 l_font_names}{\b\cf1 .}{\cf5 count}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 l_font_count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 >} {\cf5 l_font_count}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 extend}{\cf1  }{\cf1 (}{\cf1 (}{\cf5 l_font_names} {\cf1 [}{\cf5 i}{\cf1 ]}{\cf1 )}{\b\cf1 .}{\cf5 as_lower}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 compare_objects}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 font_settings_changed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Have the default font settings been changed by the user}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 font_name_ptr}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 g_object_get_string} {\cf1 (}{\cf5 Default_gtk_settings}{\cf1 ,} {\cf5 Gtk_font_name_setting}{\b\cf1 .}{\cf5 item}{\cf1 ,} {\cf1 $}{\cf5 font_name_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_name_ptr} {\cf1 /=} {\cf5 default_pointer} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 previous_font_settings} {\cf1 /=} {\cf5 default_pointer} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 c_strcmp}{\cf1  }{\cf1 (}{\cf5 previous_font_settings}{\cf1 ,} {\cf5 font_name_ptr}{\cf1 )} {\cf1 /=} 0{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 Result} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 g_free} {\cf1 (}{\cf5 previous_font_settings}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 previous_font_settings} {\cf1 :=} {\cf5 font_name_ptr}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 g_free} {\cf1 (}{\cf5 font_name_ptr}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 previous_font_settings} {\cf1 :=} {\cf5 font_name_ptr}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Gtk_font_name_setting}{\cf1 :} {\cf4 EV_GTK_C_STRING}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  String optimization for gtk-font-name property string}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 create} {\cf1 \{}{\b\cf6 attached} {\cf4 EV_GTK_C_STRING}{\cf1 \}}{\b\cf1 .}{\cf5 set_with_eiffel_string}{\cf1  }{\cf1 (}"gtk-font-name"{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 initialize_default_font_values}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Initialize values use for creating our default font}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 font_desc}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf5 font_names}{\cf1 ,} {\cf5 font_names_as_lower}{\cf1 :} {\cf4 ARRAYED_LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf5 exit_loop}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf5 split_values}{\cf1 :} {\cf4 LIST} {\cf1 [}{\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 l_font_names_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_font_item}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\tab}{\cf5 l_sans}{\cf1 :} {\cf4 STRING_32}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 font_desc} {\cf1 :=} {\cf5 default_font_description}{\b\cf1 .}{\cf5 as_lower}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 font_names_as_lower} {\cf1 :=} {\cf5 Font_names_on_system_as_lower}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 font_names} {\cf1 :=} {\cf5 Font_names_on_system}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_font_names_count} {\cf1 :=} {\cf5 font_names}{\b\cf1 .}{\cf5 count}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_sans} {\cf1 :=} {\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"Sans"{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_name_internal} {\cf1 :=} {\cf5 l_sans}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 exit_loop} {\b\cf6 or else} {\cf5 i} {\cf1 >} {\cf5 l_font_names_count}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_font_item} {\cf1 :=} {\cf5 font_names_as_lower} {\cf1 [}{\cf5 i}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 font_desc}{\b\cf1 .}{\cf5 substring_index}{\cf1  }{\cf1 (}{\cf5 l_font_item}{\cf1 ,} 1{\cf1 )} {\cf1 =} 1 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 default_font_name_internal} {\cf1 =} {\cf5 l_sans} {\b\cf6 or else} {\cf5 l_font_item}{\b\cf1 .}{\cf5 count} {\cf1 >} {\cf5 default_font_name_internal}{\b\cf1 .}{\cf5 count} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_name_internal} {\cf1 :=} {\cf5 font_names} {\cf1 [}{\cf5 i}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 exit_loop} {\cf1 :=} {\cf5 default_font_name_internal}{\b\cf1 .}{\cf5 count} {\cf1 =} {\cf5 font_desc}{\b\cf1 .}{\cf5 count}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\cf5 split_values} {\cf1 :=} {\cf5 font_desc}{\b\cf1 .}{\cf5 split}{\cf1  }{\cf1 (}' '{\b\cf1 .}{\cf5 to_character_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 split_values}{\b\cf1 .}{\cf5 compare_objects}{\line}
{\tab}{\tab}{\tab}{\cf5 default_font_point_height_internal} {\cf1 :=} {\cf5 split_values}{\b\cf1 .}{\cf5 last}{\b\cf1 .}{\cf5 to_integer}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 split_values}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"italic"{\cf1 )} {\b\cf6 or else} {\cf5 split_values}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"oblique"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_style_internal} {\cf1 :=} {\cf1 \{}{\cf4 EV_FONT_CONSTANTS}{\cf1 \}}{\b\cf1 .}{\cf5 shape_italic}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_style_internal} {\cf1 :=} {\cf1 \{}{\cf4 EV_FONT_CONSTANTS}{\cf1 \}}{\b\cf1 .}{\cf5 shape_regular}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 split_values}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"bold"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_weight_internal} {\cf1 :=} {\cf1 \{}{\cf4 EV_FONT_CONSTANTS}{\cf1 \}}{\b\cf1 .}{\cf5 weight_bold}{\line}
{\tab}{\tab}{\tab}{\b\cf6 elseif} {\cf5 split_values}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"light"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_weight_internal} {\cf1 :=} {\cf1 \{}{\cf4 EV_FONT_CONSTANTS}{\cf1 \}}{\b\cf1 .}{\cf5 weight_thin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 elseif} {\cf5 split_values}{\b\cf1 .}{\cf5 has}{\cf1  }{\cf1 (}{\b\cf6 once} {\cf1 \{}{\cf4 STRING_32}{\cf1 \}}"superbold"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_weight_internal} {\cf1 :=} {\cf1 \{}{\cf4 EV_FONT_CONSTANTS}{\cf1 \}}{\b\cf1 .}{\cf5 weight_black}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 default_font_weight_internal} {\cf1 :=} {\cf1 \{}{\cf4 EV_FONT_CONSTANTS}{\cf1 \}}{\b\cf1 .}{\cf5 weight_regular}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 pango_iter}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Retrieve PangoLayoutIter from our default layout object, Result must be freed when not needed}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 pango_layout_get_iter} {\cf1 (}{\cf5 Pango_layout}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Pango_layout}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  PangoLayout structure used for rendering fonts}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 gtk_widget_create_pango_layout} {\cf1 (}{\cf5 default_gtk_window}{\cf1 ,} {\cf5 default_pointer}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 pixel_value_from_point_value} {\cf1 (}{\cf5 a_point_value}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns the number of screen pixels represented by }{\cf5 a_point_value}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 (}{\cf1 (}{\cf5 a_point_value} {\cf1 /} 3 {\cf1 *} 4{\b\cf1 .}{\cf5 to_double}{\cf1 )} {\cf1 +} 0.5{\cf1 )}{\b\cf1 .}{\cf5 truncated_to_integer}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 point_value_from_pixel_value} {\cf1 (}{\cf5 a_pixel_value}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns the number of points represented by }{\cf5 a_pixel_value}{\cf3  screen pixels value}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 (}{\cf1 (}{\cf5 a_pixel_value} {\cf1 /} 4 {\cf1 *} 3{\b\cf1 .}{\cf5 to_double}{\cf1 )} {\cf1 +} 0.5{\cf1 )}{\b\cf1 .}{\cf5 truncated_to_integer}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 previous_font_settings}{\cf1 :} {\cf4 POINTER}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pointer to the previous gtk-settings font value.}{\line}
{\line}
{\tab}{\cf5 {\cf5 window_manager_name}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of Window Manager currently running.}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_display}{\cf1 ,} {\cf5 l_screen}{\cf1 ,} {\cf5 l_wm_name}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 l_display} {\cf1 :=} {\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 gdk_display_get_default}{\line}
{\tab}{\tab}{\tab}{\cf5 l_screen} {\cf1 :=} {\cf1 \{}{\cf4 GTK2}{\cf1 \}}{\b\cf1 .}{\cf5 gdk_display_get_default_screen} {\cf1 (}{\cf5 l_display}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf5 l_wm_name} {\cf1 :=} {\cf5 gdk_x11_screen_get_window_manager_name}{\cf1  }{\cf1 (}{\cf5 l_screen}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_c}{\cf1  }{\cf1 (}{\cf5 l_wm_name}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}{\cf4 IDENTIFIED}{\cf1 \}} {\cf3 --}{\cf3  Implementation}{\line}
{\line}
{\tab}{\cf5 {\cf5 internal_id}{\cf1 :} {\cf4 INTEGER_32}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Internal representation of }{\cf5 object_id}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 IDENTIFIED}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Implementation}{\line}
{\line}
{\tab}{\cf5 {\cf5 c_pointer_length_in_bytes} {\cf1 (}{\cf5 a_ptr}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 NATURAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Length in bytes of a platform specific file name pointer, not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  including the null-terminating character.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 NATIVE_STRING_HANDLER}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 NATIVE_STRING_HANDLER}{\line}
{\tab}{\tab}{\tab}{\cf1 a_ptr_not_null}{\cf1 :} {\cf5 a_ptr} {\cf1 /=} {\cf5 default_pointer}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use %"eif_eiffel.h%""{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"\{{\line}
			#ifdef EIF_WINDOWS{\line}
				return (EIF_NATURAL_64) wcslen($a_ptr) * sizeof(wchar_t);{\line}
			#else{\line}
				return (EIF_NATURAL_64) strlen($a_ptr) * sizeof(char);{\line}
			#endif{\line}
{\tab}{\tab}{\tab}\}"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Environ}{\cf1 :} {\cf4 HASH_TABLE} {\cf1 [}{\cf4 NATIVE_STRING}{\cf1 ,} {\cf4 IMMUTABLE_STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Environment variable memory set by current execution,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  indexed by environment variable name. Needed otherwise}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  we would corrupt memory after freeing memory used by}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  NATIVE_STRING instance since not referenced anywhere else.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}10{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 File_info}{\cf1 :} {\cf4 FILE_INFO}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Remove when all obsolete routines using it will be removed.  [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Platform specific helper of filenames.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 i_th_environ} {\cf1 (}{\cf5 i}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Environment variable at }{\cf5 i}{\cf3 -th position of }{\cf5 eif_environ}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 i_valid}{\cf1 :} {\cf5 i} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <string.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}if (eif_environ) \{{\line}
{\tab}{\tab}{\tab}{\tab}	#ifdef EIF_WINDOWS{\line}
{\tab}{\tab}{\tab}{\tab}		EIF_NATIVE_CHAR *vars = (EIF_NATIVE_CHAR *) eif_environ;{\line}
{\tab}{\tab}{\tab}{\tab}		int cnt = 0;{\line}
{\tab}{\tab}{\tab}{\tab}		for (; *vars; vars++) \{{\line}
{\tab}{\tab}{\tab}{\tab}		   if ($i==cnt) return vars;{\line}
{\tab}{\tab}{\tab}{\tab}		   while (*vars) \{ vars++; \}{\line}
{\tab}{\tab}{\tab}{\tab}		   cnt++;{\line}
{\tab}{\tab}{\tab}{\tab}		\}{\line}
{\tab}{\tab}{\tab}{\tab}		return NULL;{\line}
{\tab}{\tab}{\tab}{\tab}	#else{\line}
{\tab}{\tab}{\tab}{\tab}		return ((EIF_NATIVE_CHAR **)eif_environ)[$i];{\line}
{\tab}{\tab}{\tab}{\tab}	#endif{\line}
{\tab}{\tab}{\tab}{\tab}\} else \{{\line}
{\tab}{\tab}{\tab}{\tab}	return NULL;{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 separated_variables} {\cf1 (}{\cf5 a_var}{\cf1 :} {\cf4 STRING_32}{\cf1 )}{\cf1 :} {\b\cf6 detachable} {\cf4 TUPLE} {\cf1 [}{\cf5 value}{\cf1 :} {\cf4 STRING_32}{\cf1 ;} {\cf5 key}{\cf1 :} {\cf4 STRING_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Given an environment variable }{\cf5 a_var}{\cf3  in form of "key=value",}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  return separated key and value.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return Void if }{\cf5 a_var}{\cf3  is in incorrect format.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 a_var_attached}{\cf1 :} {\cf5 a_var} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 j}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 done}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 j} {\cf1 :=} {\cf5 a_var}{\b\cf1 .}{\cf5 count}{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 1{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 >} {\cf5 j} {\b\cf6 or} {\cf5 done}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a_var}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )} {\cf1 =} '='{\b\cf1 .}{\cf5 to_character_32} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 done} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 i} {\cf1 >} 1 {\b\cf6 and then} {\cf5 i} {\cf1 <} {\cf5 j} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 [}{\cf5 a_var}{\b\cf1 .}{\cf5 substring}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} 1{\cf1 ,} {\cf5 j}{\cf1 )}{\cf1 ,} {\cf5 a_var}{\b\cf1 .}{\cf5 substring}{\cf1  }{\cf1 (}1{\cf1 ,} {\cf5 i} {\cf1 -} 1{\cf1 )}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access bits size}{\line}
{\line}
{\tab}{\cf5 {\cf5 boolean_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 boolean_bytes} {\cf1 *} 8{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_32_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 CHARACTER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_8_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_16_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_32_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_64_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_8_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_16_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_32_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_64_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_8_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 pointer_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 pointer_bytes} {\cf1 *} 8{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Real_32_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Real_64_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access bytes size}{\line}
{\line}
{\tab}{\cf5 {\cf5 boolean_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_32_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_8_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_16_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 2}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_32_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_64_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_8_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_16_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 2}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_32_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_64_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_8_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 pointer_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Real_32_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Real_64_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  External}{\line}
{\line}
{\tab}{\cf5 {\cf5 asynchronous_system_call} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pass to the operating system an asynchronous request to execute }{\cf5 s}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C blocking use %"eif_misc.h%""{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"eif_system_asynchronous"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_chdir} {\cf1 (}{\cf5 path}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the current directory to }{\cf5 path}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C signature (EIF_FILENAME): EIF_INTEGER use %"eif_dir.h%""{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_dir_current} {\cf1 (}{\cf5 a_ptr}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_count}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Store platform specific path of current working directory in }{\cf5 a_ptr}{\cf3  with }{\cf5 a_count}{\cf3  bytes. If}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  there is a need for more bytes than }{\cf5 a_count}{\cf3 , or if }{\cf5 a_ptr}{\cf3  is the default_pointer, nothing is done with }{\cf5 a_ptr}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  We always return the number of bytes required including the null-terminating character, or -1 on error.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C signature (EIF_FILENAME, EIF_INTEGER): EIF_INTEGER use %"eif_dir.h%""{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_getenv} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Value of environment variable }{\cf5 s}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <stdlib.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}#ifdef EIF_WINDOWS{\line}
{\tab}{\tab}{\tab}{\tab}	return _wgetenv ((EIF_NATIVE_CHAR *) $s);{\line}
{\tab}{\tab}{\tab}{\tab}#else{\line}
{\tab}{\tab}{\tab}{\tab}	return getenv ((EIF_NATIVE_CHAR *) $s);{\line}
{\tab}{\tab}{\tab}{\tab}#endif{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_home_directory_name_ptr} {\cf1 (}{\cf5 a_ptr}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_count}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Stored directory name corresponding to the home directory in }{\cf5 a_ptr}{\cf3  with }{\cf5 a_count}{\cf3  bytes. If}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  there is a need for more bytes than }{\cf5 a_count}{\cf3 , or if }{\cf5 a_ptr}{\cf3  is the default_pointer, nothing is done with }{\cf5 a_ptr}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  We always return the number of bytes required including the null-terminating character.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C signature (EIF_FILENAME, EIF_INTEGER): EIF_INTEGER use %"eif_path_name.h%""{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_putenv} {\cf1 (}{\cf5 v}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 v}{\cf3  in environment.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <stdlib.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}#ifdef EIF_WINDOWS{\line}
{\tab}{\tab}{\tab}{\tab}	return _wputenv ((EIF_NATIVE_CHAR *) $v);{\line}
{\tab}{\tab}{\tab}{\tab}#else{\line}
{\tab}{\tab}{\tab}{\tab}	return putenv ((EIF_NATIVE_CHAR *) $v);{\line}
{\tab}{\tab}{\tab}{\tab}#endif{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_sleep} {\cf1 (}{\cf5 nanoseconds}{\cf1 :} {\cf4 INTEGER_64}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Suspend thread execution for interval specified in}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 nanoseconds}{\cf3  (1 nanosecond = 10^(-9) second).}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf1 non_negative_nanoseconds}{\cf1 :} {\cf5 nanoseconds} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C blocking use %"eif_misc.h%""{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 eif_user_directory_name_ptr} {\cf1 (}{\cf5 a_buffer}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 a_count}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Directory name corresponding to the user directory that will be stored in buffer }{\cf5 a_buffer}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of size }{\cf5 a_count}{\cf3  bytes. Returns the number of bytes necessary in }{\cf5 a_buffer}{\cf3  to get the full copy.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C signature (EIF_FILENAME, EIF_INTEGER): EIF_INTEGER use %"eif_path_name.h%""{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 system_call} {\cf1 (}{\cf5 s}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Pass to the operating system a request to execute }{\cf5 s}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C blocking use %"eif_misc.h%""{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"eif_system"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Externals}{\line}
{\line}
{\tab}{\cf5 {\cf5 gchar_array_i_th} {\cf1 (}{\cf5 a_gchar_array}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 an_index}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Returns }{\cf5 an_index}{\cf3  i_th value from gchar** }{\cf5 a_gchar_array}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 an_index_valid}{\cf1 :} {\cf5 an_index} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 array_valid}{\cf1 :} {\cf5 a_gchar_array} {\cf1 /=} {\cf5 default_pointer}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"(EIF_POINTER) *((gchar**) $a_gchar_array + (int) ($an_index - 1))"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 gdk_x11_screen_get_window_manager_name} {\cf1 (}{\cf5 a_screen}{\cf1 :} {\cf4 POINTER}{\cf1 )}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use %"ev_c_util.h%""{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}#ifdef GDK_WINDOWING_X11{\line}
{\tab}{\tab}{\tab}{\tab}	return (EIF_POINTER) gdk_x11_screen_get_window_manager_name ((GdkScreen*) $a_screen);{\line}
{\tab}{\tab}{\tab}{\tab}#else{\line}
{\tab}{\tab}{\tab}{\tab}	return "unknown";{\line}
{\tab}{\tab}{\tab}{\tab}#endif{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 initialize_combo_box_style}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the combo box style so that they appear as lists and not menus.}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	gtk_rc_parse_string ("style \\"v2-combo-style\\" \{\\n GtkComboBox::appears-as-list = 1\\n \}\\n  widget \\"*.v2combobox\\" style : highest  \\"v2-combo-style\\" " );{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 initialize_tool_bar_style}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Remove the default shadow from the toolbar.}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	gtk_rc_parse_string ("style \\"v2-toolbar-style\\" \{\\n GtkToolbar::shadow-type = none\\n \}\\n  widget \\"*.v2toolbar\\" style : highest  \\"v2-toolbar-style\\" " );{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 initialize_window_style}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the window style to remove any resize grip.}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}\{{\line}
{\tab}{\tab}{\tab}{\tab}	gtk_rc_parse_string ("style \\"default-style\\" \{\\n GtkWindow::resize-grip-height = 0\\n GtkWindow::resize-grip-width = 0\\n\}\\n  class \\"GtkWidget\\" style  \\"default-style\\" ");{\line}
{\tab}{\tab}{\tab}{\tab}\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 retrieve_available_fonts} {\cf1 (}{\cf5 a_widget}{\cf1 :} {\cf4 POINTER}{\cf1 ;} {\cf5 name_array}{\cf1 :} {\cf4 TYPED_POINTER} {\cf1 [}{\cf4 POINTER}{\cf1 ]}{\cf1 ;} {\cf5 number_elements}{\cf1 :} {\cf4 TYPED_POINTER} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Retrieve all available fonts present on the system}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"C inline use <ev_gtk.h>"{\line}
{\tab}{\tab}{\b\cf6 alias}{\line}
{\tab}{\tab}{\tab}"[{\line}
{\tab}{\tab}{\tab}{\tab}			\{{\line}
{\tab}{\tab}{\tab}{\tab}				PangoFontFamily **families;{\line}
{\tab}{\tab}{\tab}{\tab}				gchar **l_name_array = NULL;{\line}
{\tab}{\tab}{\tab}{\tab}				gint i;{\line}
{\tab}{\tab}{\tab}{\tab}				pango_context_list_families (gtk_widget_get_pango_context ((GtkWidget*) $a_widget), &families, $number_elements);{\line}
{\tab}{\tab}{\tab}{\tab}{\line}
{\tab}{\tab}{\tab}{\tab}				{\line}
{\tab}{\tab}{\tab}{\tab}				l_name_array = malloc (*$number_elements * sizeof (gchar*));{\line}
{\tab}{\tab}{\tab}{\tab}				{\line}
{\tab}{\tab}{\tab}{\tab}				for (i=0; i < *$number_elements; i++){\line}
{\tab}{\tab}{\tab}{\tab}				\{{\line}
{\tab}{\tab}{\tab}{\tab}					 l_name_array [i] = (gchar *) pango_font_family_get_name (families[i]);{\line}
{\tab}{\tab}{\tab}{\tab}				\}{\line}
{\tab}{\tab}{\tab}{\tab}				{\line}
{\tab}{\tab}{\tab}{\tab}				g_free (families);{\line}
{\tab}{\tab}{\tab}{\tab}				{\line}
{\tab}{\tab}{\tab}{\tab}				*(EIF_POINTER *) $name_array = (EIF_POINTER *) l_name_array;{\line}
{\tab}{\tab}{\tab}{\tab}			\}{\line}
{\tab}{\tab}{\tab}]"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Initialize}{\line}
{\line}
{\tab}{\cf5 {\cf5 gtk_dependent_initialize}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Gtk dependent code for }{\cf5 initialize}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 initialize_window_style}{\line}
{\tab}{\tab}{\tab}{\cf5 initialize_combo_box_style}{\line}
{\tab}{\tab}{\tab}{\cf5 initialize_tool_bar_style}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 gtk_dependent_launch_initialize}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Gtk dependent code for }{\cf5 launch}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 gtk_maj_ver} {\cf1 =} 1 {\b\cf6 and then} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 gtk_min_ver} {\cf1 <=} 2 {\b\cf6 and then} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 gtk_mic_ver} {\cf1 <} 8 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 print}{\cf1  }{\cf1 (}"This application is designed for Gtk 1.2.8 and above, your current version is 1.2." {\cf1 +} {\cf1 \{}{\cf4 GTK}{\cf1 \}}{\b\cf1 .}{\cf5 gtk_mic_ver}{\b\cf1 .}{\cf5 out} {\cf1 +} " and may cause some unexpected behavior%N"{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Obsoletes}{\line}
{\line}
{\tab}{\cf5 {\cf5 character_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `character_8_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 8{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 character_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `character_8_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 double_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_64_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 64{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 double_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_64_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 integer_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `integer_32_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 32{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 integer_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `integer_32_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 maximum_character_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{CHARACTER\}.max_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported code for CHARACTER_8 values}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 CHARACTER_8}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 127{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 maximum_integer}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{INTEGER\}.max_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported value of type INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 minimum_character_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{CHARACTER\}.min_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported code for CHARACTER_8 values}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 CHARACTER_8}{\cf1 \}}{\b\cf1 .}{\cf5 min_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 <=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 minimum_integer}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{INTEGER\}.min_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported value of type INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 min_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 <=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 real_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_32_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 32{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 real_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_32_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 wide_character_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `character_32_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Output}{\line}
{\line}
{\tab}{\cf5 {\cf5 Io}{\cf1 :} {\cf4 STD_FILES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Handle to standard file setup}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 set_output_default}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 io_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 tagged_out}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 print} {\cf1 (}{\cf5 o}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Write terse external representation of }{\cf5 o}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on standard output.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 o} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 Io}{\b\cf1 .}{\cf5 put_string}{\cf1  }{\cf1 (}{\cf5 o}{\b\cf1 .}{\cf5 out}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 tagged_out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 tagged_out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Platform}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_64_bits}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the current process runing in 64-bit mode}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_dotnet}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we targetting .NET?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Is_little_endian}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current platform a little endian one?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat16}{\cf1 :} {\cf4 NATURAL_16}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat8}{\cf1 :} {\cf4 NATURAL_8}{\line}
{\tab}{\tab}{\tab}{\cf5 l_first}{\cf1 :} {\cf4 NATURAL_8}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat16} {\cf1 :=} 17185{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat8} {\cf1 :=} 33{\cf1 ;}{\line}
{\tab}{\tab}{\tab}{\cf1 (}{\cf1 $}{\cf5 l_first}{\cf1 )}{\b\cf1 .}{\cf5 memory_copy}{\cf1  }{\cf1 (}{\cf1 $}{\cf5 l_nat16}{\b\cf1 .}{\cf5 to_pointer}{\cf1 ,} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_first} {\cf1 =} {\cf5 l_nat8}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_mac}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on Mac OS?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_scoop_capable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current platform capable of SCOOP?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_thread_capable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current platform capable of multi-threading?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_unix}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on a Unix like platform?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_vms}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on VMS?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_vxworks}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on VxWorks?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_windows}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on Windows platform?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Operating_environment}{\cf1 :} {\cf4 OPERATING_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Objects available from the operating system}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 operating_environment_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Retrieval}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 internal_correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Called from runtime to perform a proper dynamic dispatch on }{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from MISMATCH_CORRECTOR.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_msg}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf5 l_exc}{\cf1 :} {\cf4 EXCEPTIONS}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf1 \{}{\cf4 MISMATCH_CORRECTOR}{\cf1 \}} {\b\cf6 Current} {\b\cf6 as} l_corrector {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_corrector}{\b\cf1 .}{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_msg}{\b\cf1 .}{\cf5 make_from_string}{\cf1  }{\cf1 (}"Mismatch: "{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_exc}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_msg}{\b\cf1 .}{\cf5 append}{\cf1  }{\cf1 (}{\cf5 generating_type}{\b\cf1 .}{\cf5 name}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_exc}{\b\cf1 .}{\cf5 raise_retrieval_exception}{\cf1  }{\cf1 (}{\cf5 l_msg}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status}{\line}
{\line}
{\tab}{\cf5 {\cf5 return_code}{\cf1 :} {\cf4 INTEGER_32}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Status code set by last call to }{\cf5 system}{\cf3  or }{\cf5 put}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 EXECUTION_ENVIRONMENT}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\cf1 reflexive_equality}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\cf1 reflexive_conformance}{\cf1 :} {\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\line}
{\b\cf6 note}{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 1984-2016, Eiffel Software and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"{\line}
{\tab}{\cf1 source}{\cf1 :} "[{\line}
{\tab}{\tab}Eiffel Software{\line}
{\tab}{\tab}5949 Hollister Ave., Goleta, CA 93117 USA{\line}
{\tab}{\tab}Telephone 805-685-1006, Fax 805-685-6869{\line}
{\tab}{\tab}Website http://www.eiffel.com{\line}
{\tab}{\tab}Customer support http://support.eiffel.com{\line}
{\tab}]"{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 EV_GTK_DEPENDENT_APPLICATION_IMP}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
