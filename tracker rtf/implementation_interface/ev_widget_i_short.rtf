{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Eiffel Vision widget, implementation interface.%NSee bridge pattern notes in ev_any.e"{\line}
{\tab}{\cf1 legal}{\cf1 :} "See notice at end of class."{\line}
{\tab}{\cf1 status}{\cf1 :} "See notice at end of class."{\line}
{\tab}{\cf1 keywords}{\cf1 :} "widget, component, control"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2015-12-17 05:34:17 -0800 (Thu, 17 Dec 2015) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 98279 $"{\line}
{\line}
{\b\cf6 deferred} {\b\cf6 class} {\b\cf6 interface}{\line}
{\tab}{\cf4 EV_WIDGET_I}{\line}
{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\cf5 refresh_now}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Force an immediate redraw of }{\cf5 Current}{\cf3 .}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 parent}{\cf1 :} {\b\cf6 detachable} {\cf4 EV_CONTAINER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Container widget that contains }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Void if }{\cf5 Current}{\cf3  is not in a container)}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_position}{\cf1 :} {\cf4 EV_COORDINATE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Position of the screen pointer relative to }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 result_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 pointer_style}{\cf1 :} {\b\cf6 detachable} {\cf4 EV_POINTER_STYLE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Cursor displayed when screen pointer is over current widget.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if none has been set using }{\cf5 set_pointer_position}{\cf3 .}{\line}
}{\line}
{\tab}{\cf5 {\cf5 internal_pointer_style}{\cf1 :} {\cf4 EV_POINTER_STYLE}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Cursor displayed when screen pointer is over current widget,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as seen from interface.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 actual_drop_target_agent}{\cf1 :} {\b\cf6 detachable} {\cf4 FUNCTION} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ,} {\cf4 INTEGER_32}{\cf1 ,} {\b\cf6 detachable} {\cf4 EV_ABSTRACT_PICK_AND_DROPABLE}{\cf1 ]}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Overrides default drop target on a certain position.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If }{\cf5 Void}{\cf3 , will use the default drop target.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always void if }{\cf5 Current}{\cf3  is not a widget.}{\line}
{\line}
{\tab}{\cf5 {\cf5 real_target}{\cf1 :} {\b\cf6 detachable} {\cf4 EV_DOCKABLE_TARGET}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 Result}{\cf3  is target used during a dockable transport if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  mouse pointer is above }{\cf5 Current}{\cf3 .}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_key_processing_handler}{\cf1 :} {\b\cf6 detachable} {\cf4 PREDICATE} {\cf1 [}{\cf4 EV_KEY}{\cf1 ]}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Agent used to determine whether the default key processing should occur for }{\cf5 Current}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  If agent returns }{\cf5 True}{\cf3  then default key processing continues as normal, False prevents}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  default key processing from occurring.}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status Report}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_show_requested}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Will }{\cf5 Current}{\cf3  be displayed when its parent is?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  See also }{\cf5 is_displayed}{\cf3 .}{\line}
}{\line}
{\tab}{\cf5 {\cf5 is_displayed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 Current}{\cf3  visible on the screen?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  False if }{\cf5 Current}{\cf3  is entirely obscured by another window.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_focus}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does widget have the keyboard focus?}{\line}
}{\line}
{\tab}{\cf5 {\cf5 has_capture}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does widget have capture?}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status setting}{\line}
{\line}
{\tab}{\cf5 {\cf5 hide}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Request that }{\cf5 Current}{\cf3  not be displayed when its parent is.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 show}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Request that }{\cf5 Current}{\cf3  be displayed when its parent is.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_focus}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Grab keyboard focus.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_actual_drop_target_agent} {\cf1 (}{\cf5 an_agent}{\cf1 :} {\b\cf6 like} {\cf5 actual_drop_target_agent}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 an_agent}{\cf3  to }{\cf5 actual_drop_target_agent}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 an_agent_not_void}{\cf1 :} {\cf5 an_agent} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 assigned}{\cf1 :} {\cf5 actual_drop_target_agent} {\cf1 =} {\cf5 an_agent}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_real_target} {\cf1 (}{\cf5 a_target}{\cf1 :} {\cf4 EV_DOCKABLE_TARGET}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 a_target}{\cf3  to }{\cf5 real_target}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 target_not_void}{\cf1 :} {\cf5 a_target} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 assigned}{\cf1 :} {\cf5 real_target} {\cf1 =} {\cf5 a_target}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_real_target}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 real_target}{\cf3  is }{\cf5 Void}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 real_target_void}{\cf1 :} {\cf5 real_target} {\cf1 =} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_default_key_processing_handler} {\cf1 (}{\cf5 a_handler}{\cf1 :} {\b\cf6 like} {\cf5 default_key_processing_handler}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Assign }{\cf5 default_key_processing_handler}{\cf3  to }{\cf5 a_handler}{\cf3 .}{\line}
}{\line}
{\tab}{\cf5 {\cf5 remove_default_key_processing_handler}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Ensure }{\cf5 default_key_processing_handler}{\cf3  is Void.}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 default_key_processing_handler_removed}{\cf1 :} {\cf5 default_key_processing_handler} {\cf1 =} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Element change}{\line}
{\line}
{\tab}{\cf5 {\cf5 set_minimum_width} {\cf1 (}{\cf5 a_minimum_width}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the minimum horizontal size to }{\cf5 a_minimum_width}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_width_positive}{\cf1 :} {\cf5 a_minimum_width} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_width_assigned}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf1 (}{\cf1 (}{\cf5 a_minimum_width} {\cf1 >} 0 {\b\cf6 implies} {\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_width} {\cf1 =} {\cf5 a_minimum_width}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_width} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_width} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_minimum_height} {\cf1 (}{\cf5 a_minimum_height}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the minimum vertical size to }{\cf5 a_minimum_height}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_height_positive}{\cf1 :} {\cf5 a_minimum_height} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_height_assigned}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf1 (}{\cf1 (}{\cf5 a_minimum_height} {\cf1 >} 0 {\b\cf6 implies} {\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_height} {\cf1 =} {\cf5 a_minimum_height}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_height} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_height} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 set_minimum_size} {\cf1 (}{\cf5 a_minimum_width}{\cf1 ,} {\cf5 a_minimum_height}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the minimum horizontal size to }{\cf5 a_minimum_width}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set the minimum vertical size to }{\cf5 a_minimum_height}{\cf3  in pixels.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_width_positive}{\cf1 :} {\cf5 a_minimum_width} {\cf1 >=} 0{\line}
{\tab}{\tab}{\tab}{\cf1 a_minimum_height_positive}{\cf1 :} {\cf5 a_minimum_height} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_width_assigned}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf1 (}{\cf1 (}{\cf5 a_minimum_width} {\cf1 >} 0 {\b\cf6 implies} {\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_width} {\cf1 =} {\cf5 a_minimum_width}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_width} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_width} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 minimum_height_assigned}{\cf1 :} {\cf5 is_usable} {\b\cf6 implies} {\cf1 (}{\cf1 (}{\cf5 a_minimum_height} {\cf1 >} 0 {\b\cf6 implies} {\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_height} {\cf1 =} {\cf5 a_minimum_height}{\cf1 )} {\b\cf6 or} {\cf1 (}{\cf5 a_minimum_height} {\cf1 =} 0 {\b\cf6 implies} {\cf1 (}{\cf5 attached_interface}{\b\cf1 .}{\cf5 minimum_height} {\cf1 <=} 1{\cf1 )}{\cf1 )}{\cf1 )}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Measurement}{\line}
{\line}
{\tab}{\cf5 {\cf5 screen_x}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Horizontal offset relative to screen.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 screen_y}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Vertical offset relative to screen.}{\line}
}{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\cf1 is_displayed_implies_show_requested}{\cf1 :} {\cf5 is_usable} {\b\cf6 and} {\cf5 is_displayed} {\b\cf6 implies} {\cf5 is_show_requested}{\line}
{\line}
{\b\cf6 note}{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 1984-2006, Eiffel Software and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "Eiffel Forum License v2 (see http://www.eiffel.com/licensing/forum.txt)"{\line}
{\tab}{\cf1 source}{\cf1 :} "[{\line}
{\tab}{\tab}Eiffel Software{\line}
{\tab}{\tab}356 Storke Road, Goleta, CA 93117 USA{\line}
{\tab}{\tab}Telephone 805-685-1006, Fax 805-685-6869{\line}
{\tab}{\tab}Website http://www.eiffel.com{\line}
{\tab}{\tab}Customer support http://support.eiffel.com{\line}
{\tab}]"{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 EV_WIDGET_I}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
