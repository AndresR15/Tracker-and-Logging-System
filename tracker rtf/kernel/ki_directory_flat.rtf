{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Interface for directories"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 2001-2016, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2017-04-11 11:34:55 -0700 (Tue, 11 Apr 2017) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 100137 $"{\line}
{\line}
{\b\cf6 deferred} {\b\cf6 class} {\line}
{\tab}{\cf4 KI_DIRECTORY}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_create}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process instances of classes with no creation clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 make} {\cf1 (}{\cf5 a_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create a new file system entry object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 a_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 a_name_not_void}{\cf1 :} {\cf5 a_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 name_set}{\cf1 :} {\cf5 name} {\cf1 =} {\cf5 a_name}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 reset} {\cf1 (}{\cf5 a_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Reuse current Eiffel object memory to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  represent a new file system entry.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 a_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 a_name_not_void}{\cf1 :} {\cf5 a_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 make}{\cf1  }{\cf1 (}{\cf5 a_name}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 name_set}{\cf1 :} {\cf5 name} {\cf1 =} {\cf5 a_name}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 directory_names}{\cf1 :} {\b\cf6 detachable} {\cf4 ARRAY} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Names of readable subdirectories in current directory;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if current directory could not be searched}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Do not include parent and current directory names.)}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 no_void_filename}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 implies} {\b\cf6 not} {\cf5 String_array_}{\b\cf1 .}{\cf5 has_void}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 filenames}{\cf1 :} {\b\cf6 detachable} {\cf4 ARRAY} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Names of readable files in current directory;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if current directory could not be searched}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 no_void_filename}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 implies} {\b\cf6 not} {\cf5 String_array_}{\b\cf1 .}{\cf5 has_void}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 generating_type}{\cf1 :} {\cf4 TYPE} {\cf1 [}{\b\cf6 detachable} {\cf4 KI_DIRECTORY}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generating_type_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 generator}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of current object's generating class}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (base class of the type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 last_entry}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Last entry (file or subdirectory name) read}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Note: this query returns the new object after}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  each call to }{\cf5 read_entry}{\cf3 .)}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_open_read}{\cf1 :} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 last_entry_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 name}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  File system entry name}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 name_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 name_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 Any_array_}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\b\cf6 detachable} {\cf4 ANY}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 any_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Array_special_integer_}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\b\cf6 detachable} {\cf4 SPECIAL} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ]}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 special_integer_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Boolean_array_}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\cf4 BOOLEAN}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 boolean_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Detachable_string_array_routines}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\b\cf6 detachable} {\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 detachable_string_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_array_}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\cf4 INTEGER_32}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 integer_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 String_array_}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\b\cf6 detachable} {\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 string_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 String_array_routines}{\cf1 :} {\cf4 KL_ARRAY_ROUTINES} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ARRAY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ARRAY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 string_array_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Comparison}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  or attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\cf5 a}{\cf1 ,} {\cf5 b}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 both_or_none_void}{\cf1 :} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\cf1 (}{\b\cf6 Result} {\b\cf6 and} {\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void}{\cf1 )}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 ,} {\cf5 a}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to objects considered equal?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 is_deep_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 Current}{\cf3  and }{\cf5 other}{\cf3  attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object considered}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to current object?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical objects of the same type?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default object comparison criterion.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object of the same type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as current object, and field-by-field identical to it?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 conforms_to} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does type of current object conform to type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of }{\cf5 other}{\cf3  (as per Eiffel: The Language, chapter 13)?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 end_of_input}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has the end of input stream been reached?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_INPUT_STREAM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_open_read}{\cf1 :} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 exists}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does file system entry physically exist on disk?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Note that with SmartEiffel this routine actually}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  returns }{\cf5 is_readable}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_closable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Can current file system entry be closed?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_open}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_closed}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is file system entry closed?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\b\cf6 not} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_empty}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does current directory contain no entry apart from}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the parent and current directory entries?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return False if not able to open current directory.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_open_read}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Can items be read from input stream?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_INPUT_STREAM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_readable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Can file system entry be opened in read mode?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 exists}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 exists}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_rewindable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Can current input stream be rewound to return input from}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the beginning of the stream?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_INPUT_STREAM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 False}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 rewind_implies_open}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 same_type} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is type of current object identical to type of }{\cf5 other}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 and} {\cf5 other}{\b\cf1 .}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 valid_unread_entry} {\cf1 (}{\cf5 an_entry}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Can }{\cf5 an_entry}{\cf3  be put back in input stream?}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from } {\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\b\cf6 True}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 an_entry} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 an_entry}{\b\cf1 .}{\cf5 count} {\cf1 >} 0{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 an_entry_not_void}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 an_entry} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 an_entry_not_empty}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 an_entry}{\b\cf1 .}{\cf5 count} {\cf1 >} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Duplication}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  For non-void }{\cf5 other}{\cf3 , }{\cf5 clone}{\cf3  calls }{\cf5 copy}{\cf3 ;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to change copying/cloning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Update current object using fields of object attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 other}{\cf3 , so as to yield equal objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Current} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `deep_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void: otherwise, new object structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  recursively duplicated from the one attached to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Effect equivalent to that of:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		}{\cf5 copy}{\cf3  (}{\cf5 other}{\cf3  . }{\cf5 deep_twin}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 copy}{\cf1  }{\cf1 (}{\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_twin}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object structure recursively duplicated from Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `standard_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 standard_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy every field of }{\cf5 other}{\cf3  onto corresponding field}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_standard_equal}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_twin}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 standard_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 twin}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object equal to }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 twin}{\cf3  calls }{\cf5 copy}{\cf3 ; to change copying/twinning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 as_attached}{\cf1 :} {\b\cf6 attached} {\cf4 KI_DIRECTORY}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Remove calls to this feature. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Attached version of Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Can be used during transitional period to convert}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  non-void-safe classes to void-safe ones.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 close}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Try to close file system entry. Set }{\cf5 is_closed}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to true if operation was successful.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closable}{\cf1 :} {\cf5 is_closable}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closable}{\cf1 :} {\cf5 is_closable}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 create_directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create current directory on disk.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  be created, if it already existed or if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 name}{\cf3  is a nested directory name and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the parent directory does not exist.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default}{\cf1 :} {\b\cf6 detachable} {\cf4 KI_DIRECTORY}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of object's type}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default_pointer}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Avoid the need to write }{\cf5 p}{\cf3 .}{\cf5 default}{\cf3  for}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  some }{\cf5 p}{\cf3  of type }{\cf5 POINTER}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_rescue}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process exception for routines with no Rescue clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 delete}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Delete current file system entry.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the entry could not be deleted}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (for example if the entry does not exist or}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if a directory is not empty).}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 do_nothing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execute a null action.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 open_read}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Try to open directory in read mode.  Set }{\cf5 is_open_read}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to true and is ready to read first entry in directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if operation was successful.}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_FILE_SYSTEM_ENTRY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\cf5 is_open_read} {\b\cf6 implies} {\b\cf6 not} {\cf5 end_of_input}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 recursive_copy_directory} {\cf1 (}{\cf5 new_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy recursively current directory to }{\cf5 new_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not be copied,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if it did not exist, or if }{\cf5 new_name}{\cf3  already existed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 new_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 new_name_not_void}{\cf1 :} {\cf5 new_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 recursive_create_directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create current directory on disk.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create its parent directories if they do not exist yet.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not be created,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if it already existed or }{\cf5 name}{\cf3  is a nested directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  name and its parent directory does not exist and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  could not be created.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 recursive_delete}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Delete current directory, its files}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and its subdirectories recursively.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  be deleted, if it did not exist.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 rewind}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Move input position to the beginning of stream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_INPUT_STREAM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 can_rewind}{\cf1 :} {\cf5 is_rewindable}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Input}{\line}
{\line}
{\tab}{\cf5 {\cf5 read_entry}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Read next entry in directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make result available in }{\cf5 last_entry}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_open_read}{\cf1 :} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 last_entry_not_empty}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input} {\b\cf6 implies} {\cf5 last_entry}{\b\cf1 .}{\cf5 count} {\cf1 >} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 read_to_buffer} {\cf1 (}{\cf5 a_buffer}{\cf1 :} {\cf4 KI_BUFFER} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\cf1 ;} {\cf5 pos}{\cf1 ,} {\cf5 nb}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Fill }{\cf5 a_buffer}{\cf3 , starting at position }{\cf5 pos}{\cf3 , with}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  at most }{\cf5 nb}{\cf3  items read from input stream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return the number of items actually read.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Note that even if at least }{\cf5 nb}{\cf3  items are available}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  in the input stream, there is no guarantee that they}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  will all be read.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_INPUT_STREAM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_open_read}{\cf1 :} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input}{\line}
{\tab}{\tab}{\tab}{\cf1 a_buffer_not_void}{\cf1 :} {\cf5 a_buffer} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 pos_large_enough}{\cf1 :} {\cf5 pos} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 nb_large_enough}{\cf1 :} {\cf5 nb} {\cf1 >} 0{\line}
{\tab}{\tab}{\tab}{\cf1 enough_space}{\cf1 :} {\cf1 (}{\cf5 pos} {\cf1 +} {\cf5 nb} {\cf1 -} 1{\cf1 )} {\cf1 <=} {\cf5 a_buffer}{\b\cf1 .}{\cf5 count}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 end_pos}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 end_pos} {\cf1 :=} {\cf5 pos} {\cf1 +} {\cf5 nb} {\cf1 -} 1{\line}
{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 pos}{\line}
{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 >} {\cf5 end_pos}{\line}
{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 read_entry}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 not} {\cf5 end_of_input} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 a_buffer}{\b\cf1 .}{\cf5 put}{\cf1  }{\cf1 (}{\cf5 last_entry}{\cf1 ,} {\cf5 i}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 i} {\cf1 -} {\cf5 pos} {\cf1 -} {\cf5 nb}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 end_pos} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Result} {\cf1 +} {\cf5 i} {\cf1 -} {\cf5 pos}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 nb_item_read_large_enough}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
{\tab}{\tab}{\tab}{\cf1 nb_item_read_small_enough}{\cf1 :} {\b\cf6 Result} {\cf1 <=} {\cf5 nb}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input} {\b\cf6 implies} {\b\cf6 Result} {\cf1 >} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 unread_entry} {\cf1 (}{\cf5 an_item}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Put }{\cf5 an_item}{\cf3  back in input stream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  This item will be read first by the next}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  call to a read routine.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_INPUT_STREAM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 is_open_read}{\cf1 :} {\cf5 is_open_read}{\line}
{\tab}{\tab}{\tab}{\cf1 an_item_valid}{\cf1 :} {\cf5 valid_unread_entry}{\cf1  }{\cf1 (}{\cf5 an_item}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_INPUT_STREAM}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input}{\line}
{\tab}{\tab}{\tab}{\cf1 last_item_set}{\cf1 :} {\cf5 last_entry} {\cf1 =} {\cf5 an_item}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Iteration}{\line}
{\line}
{\tab}{\cf5 {\cf5 do_all} {\cf1 (}{\cf5 an_action}{\cf1 :} {\cf4 PROCEDURE} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Apply }{\cf5 an_action}{\cf3  to every entry in the directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 an_action_not_void}{\cf1 :} {\cf5 an_action} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 do_if} {\cf1 (}{\cf5 an_action}{\cf1 :} {\cf4 PROCEDURE} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\cf1 ;} {\cf5 a_test}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Apply }{\cf5 an_action}{\cf3  to every entry in the directory that satisfies }{\cf5 a_test}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 an_action_not_void}{\cf1 :} {\cf5 an_action} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_test_not_void}{\cf1 :} {\cf5 a_test} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 for_all} {\cf1 (}{\cf5 a_test}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 a_test}{\cf3  true for all entries in the directory?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  False if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_test_not_void}{\cf1 :} {\cf5 a_test} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 there_exists} {\cf1 (}{\cf5 a_test}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 a_test}{\cf3  true for at least one entry in the directory?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  False if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_test_not_void}{\cf1 :} {\cf5 a_test} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Output}{\line}
{\line}
{\tab}{\cf5 {\cf5 Io}{\cf1 :} {\cf4 STD_FILES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Handle to standard file setup}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 set_output_default}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 io_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 tagged_out}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 print} {\cf1 (}{\cf5 o}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Write terse external representation of }{\cf5 o}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on standard output.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 o} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 Io}{\b\cf1 .}{\cf5 put_string}{\cf1  }{\cf1 (}{\cf5 o}{\b\cf1 .}{\cf5 out}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 tagged_out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 tagged_out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Platform}{\line}
{\line}
{\tab}{\cf5 {\cf5 Operating_environment}{\cf1 :} {\cf4 OPERATING_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Objects available from the operating system}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 operating_environment_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Retrieval}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 internal_correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Called from runtime to perform a proper dynamic dispatch on }{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from MISMATCH_CORRECTOR.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_msg}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf5 l_exc}{\cf1 :} {\cf4 EXCEPTIONS}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf1 \{}{\cf4 MISMATCH_CORRECTOR}{\cf1 \}} {\b\cf6 Current} {\b\cf6 as} l_corrector {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_corrector}{\b\cf1 .}{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_msg}{\b\cf1 .}{\cf5 make_from_string}{\cf1  }{\cf1 (}"Mismatch: "{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_exc}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_msg}{\b\cf1 .}{\cf5 append}{\cf1  }{\cf1 (}{\cf5 generating_type}{\b\cf1 .}{\cf5 name}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_exc}{\b\cf1 .}{\cf5 raise_retrieval_exception}{\cf1  }{\cf1 (}{\cf5 l_msg}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\cf1 reflexive_equality}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\cf1 reflexive_conformance}{\cf1 :} {\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 KI_DIRECTORY}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
