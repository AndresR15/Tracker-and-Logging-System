{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Interface for directories"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 2001-2016, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2017-04-11 11:34:55 -0700 (Tue, 11 Apr 2017) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 100137 $"{\line}
{\line}
{\b\cf6 deferred} {\b\cf6 class} {\b\cf6 interface}{\line}
{\tab}{\cf4 KI_DIRECTORY}{\line}
{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 last_entry}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Last entry (file or subdirectory name) read}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Note: this query returns the new object after}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  each call to }{\cf5 read_entry}{\cf3 .)}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 last_entry_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 filenames}{\cf1 :} {\b\cf6 detachable} {\cf4 ARRAY} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Names of readable files in current directory;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if current directory could not be searched}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 no_void_filename}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 implies} {\b\cf6 not} {\cf5 String_array_}{\b\cf1 .}{\cf5 has_void}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )}{\line}
}{\line}
{\tab}{\cf5 {\cf5 directory_names}{\cf1 :} {\b\cf6 detachable} {\cf4 ARRAY} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Names of readable subdirectories in current directory;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if current directory could not be searched}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Do not include parent and current directory names.)}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 no_void_filename}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void} {\b\cf6 implies} {\b\cf6 not} {\cf5 String_array_}{\b\cf1 .}{\cf5 has_void}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 )}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_empty}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does current directory contain no entry apart from}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the parent and current directory entries?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return False if not able to open current directory.}{\line}
}{\line}
{\tab}{\cf5 {\cf5 valid_unread_entry} {\cf1 (}{\cf5 an_entry}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Can }{\cf5 an_entry}{\cf3  be put back in input stream?}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 an_entry_not_void}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 an_entry} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 an_entry_not_empty}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 an_entry}{\b\cf1 .}{\cf5 count} {\cf1 >} 0{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\cf5 open_read}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Try to open directory in read mode.  Set }{\cf5 is_open_read}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to true and is ready to read first entry in directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if operation was successful.}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 not_end_of_input}{\cf1 :} {\cf5 is_open_read} {\b\cf6 implies} {\b\cf6 not} {\cf5 end_of_input}{\line}
}{\line}
{\tab}{\cf5 {\cf5 create_directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create current directory on disk.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  be created, if it already existed or if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 name}{\cf3  is a nested directory name and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the parent directory does not exist.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 recursive_create_directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create current directory on disk.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create its parent directories if they do not exist yet.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not be created,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if it already existed or }{\cf5 name}{\cf3  is a nested directory}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  name and its parent directory does not exist and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  could not be created.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 recursive_delete}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Delete current directory, its files}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  and its subdirectories recursively.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  be deleted, if it did not exist.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 recursive_copy_directory} {\cf1 (}{\cf5 new_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy recursively current directory to }{\cf5 new_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the directory could not be copied,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if it did not exist, or if }{\cf5 new_name}{\cf3  already existed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 new_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 new_name_not_void}{\cf1 :} {\cf5 new_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Iteration}{\line}
{\line}
{\tab}{\cf5 {\cf5 do_all} {\cf1 (}{\cf5 an_action}{\cf1 :} {\cf4 PROCEDURE} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Apply }{\cf5 an_action}{\cf3  to every entry in the directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 an_action_not_void}{\cf1 :} {\cf5 an_action} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 do_if} {\cf1 (}{\cf5 an_action}{\cf1 :} {\cf4 PROCEDURE} {\cf1 [}{\cf4 STRING_8}{\cf1 ]}{\cf1 ;} {\cf5 a_test}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Apply }{\cf5 an_action}{\cf3  to every entry in the directory that satisfies }{\cf5 a_test}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 an_action_not_void}{\cf1 :} {\cf5 an_action} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_test_not_void}{\cf1 :} {\cf5 a_test} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 there_exists} {\cf1 (}{\cf5 a_test}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 a_test}{\cf3  true for at least one entry in the directory?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  False if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_test_not_void}{\cf1 :} {\cf5 a_test} {\cf1 /=} {\b\cf6 Void}{\line}
}{\line}
{\tab}{\cf5 {\cf5 for_all} {\cf1 (}{\cf5 a_test}{\cf1 :} {\cf4 FUNCTION} {\cf1 [}{\cf4 STRING_8}{\cf1 ,} {\cf4 BOOLEAN}{\cf1 ]}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 a_test}{\cf3  true for all entries in the directory?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  False if current directory could not be searched.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Semantics not guaranteed if }{\cf5 an_action}{\cf3  changes the contents of the directory.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_test_not_void}{\cf1 :} {\cf5 a_test} {\cf1 /=} {\b\cf6 Void}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Input}{\line}
{\line}
{\tab}{\cf5 {\cf5 read_entry}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Read next entry in directory.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make result available in }{\cf5 last_entry}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 ensure then}{\line}
{\tab}{\tab}{\tab}{\cf1 last_entry_not_empty}{\cf1 :} {\b\cf6 not} {\cf5 end_of_input} {\b\cf6 implies} {\cf5 last_entry}{\b\cf1 .}{\cf5 count} {\cf1 >} 0{\line}
}{\tab}{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 KI_DIRECTORY}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
