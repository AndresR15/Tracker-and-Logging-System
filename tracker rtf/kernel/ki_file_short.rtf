{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Interface for files"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 2001, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-05-06 12:15:38 -0700 (Fri, 06 May 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 98678 $"{\line}
{\line}
{\b\cf6 deferred} {\b\cf6 class} {\b\cf6 interface}{\line}
{\tab}{\cf4 KI_FILE}{\line}
{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 time_stamp}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Time stamp (number of seconds since 1 January 1970}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  at 00:00:00 UTC) of last modification to current file;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return -1 if the time stamp was not available, if the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  file did not exist for example, or if the time stamp}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  didn't fit into an INTEGER. (Use DT_DATE_TIME.make_from_epoch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to convert this time stamp to a human readable format.)}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_values}{\cf1 :} {\b\cf6 Result} {\cf1 =} -1 {\b\cf6 or} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Measurement}{\line}
{\line}
{\tab}{\cf5 {\cf5 count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in current file;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return -1 if the number of bytes was not available,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if the file did not exist for example.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_values}{\cf1 :} {\b\cf6 Result} {\cf1 =} -1 {\b\cf6 or} {\b\cf6 Result} {\cf1 >=} 0{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 same_physical_file} {\cf1 (}{\cf5 other_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are current file and file named }{\cf5 other_name}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the same physical file? Return False if one}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  or both files don't exist. (Return True if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  it was impossible to determine whether the}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  files were physically the same files.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 other_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 other_name_not_void}{\cf1 :} {\cf5 other_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\cf5 change_name} {\cf1 (}{\cf5 new_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Rename current file as }{\cf5 new_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the file could not be renamed, if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  it did not exist or if }{\cf5 new_name}{\cf3  is physically}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the same file as current file. Overwrite }{\cf5 new_name}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if it already existed. If renaming was successful,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  then }{\cf5 name}{\cf3  is set to }{\cf5 new_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 new_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 new_name_not_void}{\cf1 :} {\cf5 new_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 copy_file} {\cf1 (}{\cf5 new_name}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy current file to }{\cf5 new_name}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if the file could not be copied, if it}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  did not exist or if }{\cf5 new_name}{\cf3  is physically}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the same file as current file. Overwrite }{\cf5 new_name}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  if it already existed.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 new_name}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 new_name_not_void}{\cf1 :} {\cf5 new_name} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 concat} {\cf1 (}{\cf5 a_filename}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy content of file }{\cf5 a_filename}{\cf3  to the end of current file.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do nothing if file }{\cf5 a_filename}{\cf3  does not exist. Create}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  current file if it does not exist yet. If file }{\cf5 a_filename}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  is physically the same as current file, then a copy of}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  the file is appended to itself. Do nothing if current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  file could not be open in append mode or if file }{\cf5 a_filename}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  could not be opened in read mode.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 a_filename}{\cf3  should follow the pathname convention}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of the underlying platform. For pathname conversion}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  use KI_FILE_SYSTEM.pathname_from_file_system.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_filename_not_void}{\cf1 :} {\cf5 a_filename} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_closed}{\cf1 :} {\cf5 is_closed}{\line}
}{\line}
{\tab}{\cf5 {\cf5 change_mode} {\cf1 (}{\cf5 a_mask}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Replace mode by }{\cf5 a_mask}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 file_exists}{\cf1 :} {\cf5 exists}{\line}
}{\tab}{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 KI_FILE}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
