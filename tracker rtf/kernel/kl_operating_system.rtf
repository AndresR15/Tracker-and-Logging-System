{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Underlying operating systems"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 2001-2016, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2017-04-11 11:34:55 -0700 (Tue, 11 Apr 2017) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 100137 $"{\line}
{\line}
{\b\cf6 class} {\line}
{\tab}{\cf4 KL_OPERATING_SYSTEM}{\line}
{\line}
{\b\cf6 create} {\line}
{\tab}{\cf5 default_create}{\line}
{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 Is_windows}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is underlying operating system Windows-like?}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 cwd}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf5 gobo_os}{\cf1 ,} {\cf5 os}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 gobo_os} {\cf1 :=} {\cf5 variable_value}{\cf1  }{\cf1 (}"GOBO_OS"{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 gobo_os} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 gobo_os}{\b\cf1 .}{\cf5 count} {\cf1 >} 0 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 gobo_os}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}"windows"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 os} {\cf1 :=} {\cf5 variable_value}{\cf1  }{\cf1 (}"OS"{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 os} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 os}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}"Windows_NT"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 cwd} {\cf1 :=} {\cf5 current_working_directory}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 cwd}{\b\cf1 .}{\cf5 count} {\cf1 >=} 3 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf1 (}{\cf5 cwd}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}2{\cf1 )} {\cf1 =} ':' {\b\cf6 and} {\cf5 cwd}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}3{\cf1 )} {\cf1 =} '\\'{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 elseif} {\cf1 (}{\cf5 cwd}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}1{\cf1 )} {\cf1 =} '\\' {\b\cf6 and} {\cf5 cwd}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}2{\cf1 )} {\cf1 =} '\\'{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Is_unix}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is underlying operating system Unix-like?}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 cwd}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf5 gobo_os}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 gobo_os} {\cf1 :=} {\cf5 variable_value}{\cf1  }{\cf1 (}"GOBO_OS"{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 gobo_os} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 gobo_os}{\b\cf1 .}{\cf5 count} {\cf1 >} 0 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 gobo_os}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}"unix"{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 cwd} {\cf1 :=} {\cf5 current_working_directory}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 cwd}{\b\cf1 .}{\cf5 count} {\cf1 >} 0 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 cwd}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}1{\cf1 )} {\cf1 =} '/'{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Is_dotnet}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has this application been compiled with Eiffel for .NET?}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 p}{\cf1 :} {\cf4 PLATFORM}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 p}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 p}{\b\cf1 .}{\cf5 is_dotnet}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Implementation}{\line}
{\line}
{\tab}{\cf5 {\cf5 current_working_directory}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of current working directory;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Return absolute pathname with the naming}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  convention of the underlying file system}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Return a new object at each call.)}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Execution_environment}{\b\cf1 .}{\cf5 current_working_path}{\b\cf1 .}{\cf5 utf_8_name}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 current_working_directory_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 variable_value} {\cf1 (}{\cf5 a_variable}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\b\cf6 detachable} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Value of environment variable }{\cf5 a_variable}{\cf3 ,}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 a_variable}{\cf3  has not been set}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_variable_not_void}{\cf1 :} {\cf5 a_variable} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf5 Execution_environment}{\b\cf1 .}{\cf5 item}{\cf1  }{\cf1 (}{\cf5 a_variable}{\cf1 )} {\b\cf6 as} l_item {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_item}{\b\cf1 .}{\cf5 as_string_8}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Execution_environment}{\cf1 :} {\cf4 EXECUTION_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execution environment implementation}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 execution_environment_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 KL_OPERATING_SYSTEM}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
