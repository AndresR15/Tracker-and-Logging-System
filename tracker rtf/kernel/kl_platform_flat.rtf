{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Platform-dependent properties"{\line}
{\tab}{\cf1 usage}{\cf1 :} "[{\line}
{\tab}{\tab}This class should not be used directly through{\line}
{\tab}{\tab}inheritance and client/supplier relationship.{\line}
{\tab}{\tab}Inherit from KL_SHARED_PLATFORM instead.{\line}
{\tab}]"{\line}
{\tab}{\cf1 pattern}{\cf1 :} "Singleton"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 1999-2008, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-05-06 12:15:38 -0700 (Fri, 06 May 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 98678 $"{\line}
{\line}
{\b\cf6 class} {\line}
{\tab}{\cf4 KL_PLATFORM}{\line}
{\line}
{\b\cf6 create} {\line}
{\tab}{\cf5 default_create}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_create}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process instances of classes with no creation clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 generating_type}{\cf1 :} {\cf4 TYPE} {\cf1 [}{\b\cf6 detachable} {\cf4 KL_PLATFORM}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generating_type_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 generator}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of current object's generating class}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (base class of the type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Comparison}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  or attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\cf5 a}{\cf1 ,} {\cf5 b}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 both_or_none_void}{\cf1 :} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\cf1 (}{\b\cf6 Result} {\b\cf6 and} {\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void}{\cf1 )}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 ,} {\cf5 a}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to objects considered equal?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 is_deep_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 Current}{\cf3  and }{\cf5 other}{\cf3  attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object considered}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to current object?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical objects of the same type?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default object comparison criterion.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object of the same type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as current object, and field-by-field identical to it?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 conforms_to} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does type of current object conform to type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of }{\cf5 other}{\cf3  (as per Eiffel: The Language, chapter 13)?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 same_type} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is type of current object identical to type of }{\cf5 other}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 and} {\cf5 other}{\b\cf1 .}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Duplication}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  For non-void }{\cf5 other}{\cf3 , }{\cf5 clone}{\cf3  calls }{\cf5 copy}{\cf3 ;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to change copying/cloning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Update current object using fields of object attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 other}{\cf3 , so as to yield equal objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Current} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `deep_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void: otherwise, new object structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  recursively duplicated from the one attached to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Effect equivalent to that of:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		}{\cf5 copy}{\cf3  (}{\cf5 other}{\cf3  . }{\cf5 deep_twin}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 copy}{\cf1  }{\cf1 (}{\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_twin}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object structure recursively duplicated from Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `standard_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 standard_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy every field of }{\cf5 other}{\cf3  onto corresponding field}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_standard_equal}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_twin}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 standard_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 twin}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object equal to }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 twin}{\cf3  calls }{\cf5 copy}{\cf3 ; to change copying/twinning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 as_attached}{\cf1 :} {\b\cf6 attached} {\cf4 KL_PLATFORM}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Remove calls to this feature. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Attached version of Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Can be used during transitional period to convert}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  non-void-safe classes to void-safe ones.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default}{\cf1 :} {\b\cf6 detachable} {\cf4 KL_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of object's type}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default_pointer}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Avoid the need to write }{\cf5 p}{\cf3 .}{\cf5 default}{\cf3  for}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  some }{\cf5 p}{\cf3  of type }{\cf5 POINTER}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_rescue}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process exception for routines with no Rescue clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 do_nothing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execute a null action.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Access bits size}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_boolean_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 old_boolean_bytes} {\cf1 *} 8{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_32_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 CHARACTER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_8_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_16_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Old_integer_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_64_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_8_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_16_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_32_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_64_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_8_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 NATURAL_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_pointer_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 old_pointer_bytes} {\cf1 *} 8{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Old_real_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Old_double_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Access bytes size}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_boolean_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_32_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_8_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_16_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 2}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Old_integer_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_64_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_8_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_16_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 2}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_16}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_32_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_64_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Natural_8_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 NATURAL_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_pointer_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Old_real_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Old_double_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Bits}{\line}
{\line}
{\tab}{\cf5 {\cf5 Boolean_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type BOOLEAN}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 old_boolean_bits}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 large_enough}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Byte_bits}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a byte}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type CHARACTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 8{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 more_than_byte}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Byte_bits}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Double_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type DOUBLE}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Old_double_bits}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 more_than_real}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Real_bits}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type INTEGER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Old_integer_bits}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 more_than_character}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Character_bits}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Pointer_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type POINTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 old_pointer_bits}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Real_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type REAL}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Old_real_bits}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Bytes}{\line}
{\line}
{\tab}{\cf5 {\cf5 Boolean_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type BOOLEAN}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 old_boolean_bytes}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Byte_bytes}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a byte}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Character_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type CHARACTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 1{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 more_than_byte}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Byte_bytes}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Double_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type DOUBLE}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Old_double_bytes}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 more_than_real}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Real_bytes}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type INTEGER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Old_integer_bytes}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\tab}{\cf1 more_than_character}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Character_bytes}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Pointer_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type POINTER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 old_pointer_bytes}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Real_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type REAL}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Old_real_bytes}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 1{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Obsoletes}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_character_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `character_8_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 8{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_character_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `character_8_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_obsolete_double_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_64_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 64{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_obsolete_double_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_64_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_obsolete_integer_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `integer_32_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 32{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_obsolete_integer_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `integer_32_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_maximum_character_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{CHARACTER\}.max_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported code for CHARACTER_8 values}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 CHARACTER_8}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 127{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_maximum_integer}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{INTEGER\}.max_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported value of type INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_minimum_character_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{CHARACTER\}.min_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported code for CHARACTER_8 values}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 CHARACTER_8}{\cf1 \}}{\b\cf1 .}{\cf5 min_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 <=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_minimum_integer}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `\{INTEGER\}.min_value' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported value of type INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 min_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 <=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_obsolete_real_bits}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_32_bits' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bits in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 32{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 old_obsolete_real_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `real_32_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 REAL_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 wide_character_bytes}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `character_32_bytes' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of bytes in a value of type }{\cf5 CHARACTER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Output}{\line}
{\line}
{\tab}{\cf5 {\cf5 Io}{\cf1 :} {\cf4 STD_FILES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Handle to standard file setup}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 set_output_default}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 io_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 tagged_out}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 print} {\cf1 (}{\cf5 o}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Write terse external representation of }{\cf5 o}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on standard output.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 o} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 Io}{\b\cf1 .}{\cf5 put_string}{\cf1  }{\cf1 (}{\cf5 o}{\b\cf1 .}{\cf5 out}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 tagged_out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 tagged_out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Platform}{\line}
{\line}
{\tab}{\cf5 {\cf5 Operating_environment}{\cf1 :} {\cf4 OPERATING_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Objects available from the operating system}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 operating_environment_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Platform}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_64_bits}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is the current process runing in 64-bit mode}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_dotnet}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we targetting .NET?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Is_little_endian}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current platform a little endian one?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat16}{\cf1 :} {\cf4 NATURAL_16}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat8}{\cf1 :} {\cf4 NATURAL_8}{\line}
{\tab}{\tab}{\tab}{\cf5 l_first}{\cf1 :} {\cf4 NATURAL_8}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat16} {\cf1 :=} 17185{\line}
{\tab}{\tab}{\tab}{\cf5 l_nat8} {\cf1 :=} 33{\cf1 ;}{\line}
{\tab}{\tab}{\tab}{\cf1 (}{\cf1 $}{\cf5 l_first}{\cf1 )}{\b\cf1 .}{\cf5 memory_copy}{\cf1  }{\cf1 (}{\cf1 $}{\cf5 l_nat16}{\b\cf1 .}{\cf5 to_pointer}{\cf1 ,} 1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 l_first} {\cf1 =} {\cf5 l_nat8}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_mac}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on Mac OS?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_scoop_capable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current platform capable of SCOOP?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_thread_capable}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current platform capable of multi-threading?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_unix}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on a Unix like platform?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_vms}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on VMS?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_vxworks}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on VxWorks?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_windows}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are we running on Windows platform?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in static"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Retrieval}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 internal_correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Called from runtime to perform a proper dynamic dispatch on }{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from MISMATCH_CORRECTOR.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_msg}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf5 l_exc}{\cf1 :} {\cf4 EXCEPTIONS}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf1 \{}{\cf4 MISMATCH_CORRECTOR}{\cf1 \}} {\b\cf6 Current} {\b\cf6 as} l_corrector {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_corrector}{\b\cf1 .}{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_msg}{\b\cf1 .}{\cf5 make_from_string}{\cf1  }{\cf1 (}"Mismatch: "{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_exc}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_msg}{\b\cf1 .}{\cf5 append}{\cf1  }{\cf1 (}{\cf5 generating_type}{\b\cf1 .}{\cf5 name}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_exc}{\b\cf1 .}{\cf5 raise_retrieval_exception}{\cf1  }{\cf1 (}{\cf5 l_msg}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Values}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_byte_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 255}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported code for a byte}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_character_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported code for CHARACTER values}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 CHARACTER_8}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} {\cf5 Maximum_byte_code}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_integer}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported value of type INTEGER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 max_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 -} {\cf1 (}{\cf5 Minimum_integer} {\cf1 +} 1{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_integer_64}{\cf1 :} {\cf4 INTEGER_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest supported value of type INTEGER_64}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} 9223372036854775807{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_byte_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported code for a byte}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KI_PLATFORM}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_character_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported code for CHARACTER values}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 CHARACTER_8}{\cf1 \}}{\b\cf1 .}{\cf5 min_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 =} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_integer}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported value of type INTEGER}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 \{}{\cf4 INTEGER_32}{\cf1 \}}{\b\cf1 .}{\cf5 min_value}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KI_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 meaningful}{\cf1 :} {\b\cf6 Result} {\cf1 <=} 0{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 to_double} {\cf1 =} {\cf1 (}2 {\cf1 ^} {\cf1 (}{\cf5 Integer_bits} {\cf1 -} 2{\cf1 )}{\b\cf1 .}{\cf5 to_double}{\cf1 )} {\cf1 *} -2{\b\cf1 .}{\cf5 to_double}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_integer_64}{\cf1 :} {\cf4 INTEGER_64}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest supported value of type INTEGER_64}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} -9223372036854775808{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\cf1 reflexive_equality}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\cf1 reflexive_conformance}{\cf1 :} {\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 KL_PLATFORM}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
