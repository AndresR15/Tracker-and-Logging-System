{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "Unicode characters"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 2001, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-05-06 12:15:38 -0700 (Fri, 06 May 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 98678 $"{\line}
{\line}
{\b\cf6 class} {\line}
{\tab}{\cf4 UC_CHARACTER}{\line}
{\line}
{\b\cf6 inherit}{\line}
{\tab}{\cf4 KL_COMPARABLE}{\line}
{\tab}{\tab}{\b\cf6 redefine}{\line}
{\tab}{\tab}{\tab}{\cf5 out}{\line}
{\tab}{\tab}{\b\cf6 end}{\line}
{\line}
{\tab}{\cf4 HASHABLE}{\line}
{\tab}{\tab}{\b\cf6 undefine}{\line}
{\tab}{\tab}{\tab}{\cf5 is_equal}{\cf1 ,}{\line}
{\tab}{\tab}{\tab}{\cf5 out}{\line}
{\tab}{\tab}{\b\cf6 end}{\line}
{\line}
{\tab}{\cf4 KL_SHARED_PLATFORM}{\line}
{\tab}{\tab}{\b\cf6 undefine}{\line}
{\tab}{\tab}{\tab}{\cf5 is_equal}{\cf1 ,}{\line}
{\tab}{\tab}{\tab}{\cf5 out}{\line}
{\tab}{\tab}{\b\cf6 end}{\line}
{\line}
{\tab}{\cf4 UC_IMPORTED_UNICODE_ROUTINES}{\line}
{\tab}{\tab}{\b\cf6 undefine}{\line}
{\tab}{\tab}{\tab}{\cf5 is_equal}{\cf1 ,}{\line}
{\tab}{\tab}{\tab}{\cf5 out}{\line}
{\tab}{\tab}{\b\cf6 end}{\line}
{\line}
{\tab}{\cf4 KL_IMPORTED_INTEGER_ROUTINES}{\line}
{\tab}{\tab}{\b\cf6 undefine}{\line}
{\tab}{\tab}{\tab}{\cf5 is_equal}{\cf1 ,}{\line}
{\tab}{\tab}{\tab}{\cf5 out}{\line}
{\tab}{\tab}{\b\cf6 end}{\line}
{\line}
{\tab}{\cf4 KL_IMPORTED_STRING_ROUTINES}{\line}
{\tab}{\tab}{\b\cf6 undefine}{\line}
{\tab}{\tab}{\tab}{\cf5 is_equal}{\cf1 ,}{\line}
{\tab}{\tab}{\tab}{\cf5 out}{\line}
{\tab}{\tab}{\b\cf6 end}{\line}
{\line}
{\b\cf6 create} {\line}
{\tab}{\cf5 make_from_character}{\cf1 ,}{\line}
{\tab}{\cf5 make_from_code}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 make_from_character} {\cf1 (}{\cf5 c}{\cf1 :} {\cf4 CHARACTER_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create a new unicode character from Latin-1 character }{\cf5 c}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 code} {\cf1 :=} {\cf5 c}{\b\cf1 .}{\cf5 code}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 code_set}{\cf1 :} {\cf5 code} {\cf1 =} {\cf5 c}{\b\cf1 .}{\cf5 code}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 make_from_code} {\cf1 (}{\cf5 a_code}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create a new unicode character with code }{\cf5 a_code}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_code}{\cf1 :} {\cf5 Unicode}{\b\cf1 .}{\cf5 valid_code}{\cf1  }{\cf1 (}{\cf5 a_code}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 code} {\cf1 :=} {\cf5 a_code}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 code_set}{\cf1 :} {\cf5 code} {\cf1 =} {\cf5 a_code}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 code}{\cf1 :} {\cf4 INTEGER_32}}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Code of unicode character}{\line}
{\line}
{\tab}{\cf5 {\cf5 hash_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Hash code value}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 code}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_ascii}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current character an ASCII character?}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 (}{\cf5 code} {\cf1 <=} {\cf5 Unicode}{\b\cf1 .}{\cf5 Maximum_ascii_character_code}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf5 Unicode}{\b\cf1 .}{\cf5 valid_ascii_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Comparison}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_less} {\b\cf6 alias} {\cf1 "}{\cf1 <}{\cf1 "} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 like} {\b\cf6 Current}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current object less than other?}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 (}{\cf5 code} {\cf1 <} {\cf5 other}{\b\cf1 .}{\cf5 code}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Conversion}{\line}
{\line}
{\tab}{\cf5 {\cf5 as_lower}{\cf1 :} {\b\cf6 like} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Lowercase value of current character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Create a new object at each call.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 UC_CHARACTER}{\cf3  as synonym of }{\cf5 to_lower}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_code}{\cf1  }{\cf1 (}{\cf5 Unicode}{\b\cf1 .}{\cf5 lower_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 to_lower_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 to_lower}{\cf1 :} {\b\cf6 like} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Lowercase value of current character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Create a new object at each call.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 UC_CHARACTER}{\cf3  as synonym of }{\cf5 as_lower}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_code}{\cf1  }{\cf1 (}{\cf5 Unicode}{\b\cf1 .}{\cf5 lower_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 to_lower_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 as_upper}{\cf1 :} {\b\cf6 like} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Uppercase value of current character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Create a new object at each call.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 UC_CHARACTER}{\cf3  as synonym of }{\cf5 to_upper}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_code}{\cf1  }{\cf1 (}{\cf5 Unicode}{\b\cf1 .}{\cf5 upper_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 to_upper_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 to_upper}{\cf1 :} {\b\cf6 like} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Uppercase value of current character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Create a new object at each call.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Was declared in }{\cf4 UC_CHARACTER}{\cf3  as synonym of }{\cf5 as_upper}{\cf3 .}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make_from_code}{\cf1  }{\cf1 (}{\cf5 Unicode}{\b\cf1 .}{\cf5 upper_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 to_upper_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 to_character}{\cf1 :} {\cf4 CHARACTER_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Character with code }{\cf5 code}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 valid_code}{\cf1 :} {\cf5 code} {\cf1 <=} {\cf5 Platform}{\b\cf1 .}{\cf5 Maximum_character_code}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Integer_}{\b\cf1 .}{\cf5 to_character}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 code_set}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 code} {\cf1 =} {\cf5 code}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Output}{\line}
{\line}
{\tab}{\cf5 {\cf5 out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New STRING containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current character; Non-ascii characters are represented}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  with the %/code/ convention.}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 max_ascii_code}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 code_out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 max_ascii_code} {\cf1 :=} {\cf5 Unicode}{\b\cf1 .}{\cf5 Maximum_ascii_character_code}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 code} {\cf1 <=} {\cf5 max_ascii_code} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}1{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 append_character}{\cf1  }{\cf1 (}{\cf5 Integer_}{\b\cf1 .}{\cf5 to_character}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 code_out} {\cf1 :=} {\cf5 code}{\b\cf1 .}{\cf5 out}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\b\cf1 .}{\cf5 make}{\cf1  }{\cf1 (}3 {\cf1 +} {\cf5 code_out}{\b\cf1 .}{\cf5 count}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 append_character}{\cf1  }{\cf1 (}'%%'{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 append_character}{\cf1  }{\cf1 (}'/'{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 append_string}{\cf1  }{\cf1 (}{\cf5 code_out}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 append_character}{\cf1  }{\cf1 (}'/'{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\cf1 valid_code}{\cf1 :} {\cf5 Unicode}{\b\cf1 .}{\cf5 valid_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1 )}{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 UC_CHARACTER}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
