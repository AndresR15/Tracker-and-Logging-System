{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "UTF-32 encoding routines"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Kernel Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 2005, Colin Adams and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-05-06 12:15:38 -0700 (Fri, 06 May 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 98678 $"{\line}
{\line}
{\b\cf6 class} {\line}
{\tab}{\cf4 UC_UTF32_ROUTINES}{\line}
{\line}
{\b\cf6 create} {\line}
{\tab}{\cf5 default_create}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_create}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process instances of classes with no creation clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 Any_}{\cf1 :} {\cf4 KL_ANY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class ANY}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_ANY_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_ANY_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 any_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Canonical_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping is canonical}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Close_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 15}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Close punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 code} {\cf1 (}{\cf5 first}{\cf1 ,} {\cf5 second}{\cf1 ,} {\cf5 third}{\cf1 ,} {\cf5 fourth}{\cf1 :} {\cf4 INTEGER_32}{\cf1 ;} {\cf5 least_endian}{\cf1 :} {\cf4 BOOLEAN}{\cf1 )}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Code point represented by four bytes}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 first_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 first}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 second_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 second}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 third_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 third}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 fourth_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 fourth}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 least_endian} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 first} {\cf1 +} {\cf5 second} {\cf1 *} 256 {\cf1 +} {\cf5 third} {\cf1 *} {\cf5 Two_byte_offset} {\cf1 +} {\cf5 fourth} {\cf1 *} {\cf5 Three_byte_offset}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 fourth} {\cf1 +} {\cf5 third} {\cf1 *} 256 {\cf1 +} {\cf5 second} {\cf1 *} {\cf5 Two_byte_offset} {\cf1 +} {\cf5 first} {\cf1 *} {\cf5 Three_byte_offset}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 code_not_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Compatibility_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for unspecified compatibility character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Connector_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 12}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Connector punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Control_other_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 26}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Control character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Currency_symbol_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 20}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Currency symbol}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Dash_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 13}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Dash punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Decimal_digit_number_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 9}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decimal digit number}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Encircled_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 7}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for encircled form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Enclosing_mark_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Enclosing mark}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Final_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 5}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for Arabic final presentation form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Final_quote_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 17}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Final_quote punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Font_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for font variant}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Format_other_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 27}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Format character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Fraction_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 15}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for vulgar fraction form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 generating_type}{\cf1 :} {\cf4 TYPE} {\cf1 [}{\b\cf6 detachable} {\cf4 UC_UTF32_ROUTINES}{\cf1 ]}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Type of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generating_type_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 generator}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Name of current object's generating class}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (base class of the type of which it is a direct instance)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 generator_not_empty}{\cf1 :} {\b\cf6 not} {\b\cf6 Result}{\b\cf1 .}{\cf5 is_empty}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Initial_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 3}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for Arabic initial presentation form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Initial_quote_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Initial punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Integer_}{\cf1 :} {\cf4 KL_INTEGER_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Routines that ought to be in class INTEGER}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_IMPORTED_INTEGER_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_IMPORTED_INTEGER_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 integer_routines_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Isolated_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 6}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for Arabic isolated presentation form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Letter_number_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 10}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Letter number}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Line_separator_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 24}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Line separator}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Lowercase_letter_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 2}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Lower case letter}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Math_symbol_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 19}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Mathematics symbol}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_ascii_character}{\cf1 :} {\cf4 CHARACTER_8} {\cf1 =} '%/127/'}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest ASCII character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result.code = maximum_ascii_code}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_ascii_character_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 127}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest code for ASCII characters}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (2^7 - 1)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 127}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			small_enough: Result <= Platform.Maximum_byte_code}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_bmp_character_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 65535}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest code for unicode characters in Basic Multi-lingual Plane (FFFF);}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 65535}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_unicode_character_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1114111}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Largest code for unicode characters (10FFFF);}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Includes final two non-characters.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 1114111}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Maximum_unicode_surrogate_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 57343}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Highest unicode surrogate code-point (0xDFFF)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 57343}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Medial_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for Arabic medial presentation form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_ascii_character}{\cf1 :} {\cf4 CHARACTER_8} {\cf1 =} '%U'}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest ASCII character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result.code = minimum_ascii_code}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_ascii_character_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest code for ASCII characters}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_unicode_character_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Smallest code for unicode characters}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Minimum_unicode_surrogate_code}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 55296}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Lowest unicode surrogate code-point (0xD800)}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		ensure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 			definition: Result = 55296}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		end}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Modifier_letter_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 4}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Modifier letter}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Modifier_symbol_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 21}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Modifier symbol}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Narrow_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 12}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for narrow (hankaku) compatibility character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 No_break_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 2}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for no-break variant}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Non_spacing_mark_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 6}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Non-spacing mark}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Open_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 14}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Open punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Other_letter_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 5}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Other letter}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Other_number_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 11}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Other number}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Other_punctuation_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 18}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Other punctuation}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Other_symbol_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 22}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Other symbol}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Paragraph_separator_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 25}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Paragraph separator}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Platform}{\cf1 :} {\cf4 KL_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Platform-dependent properties}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 KL_SHARED_PLATFORM}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 KL_SHARED_PLATFORM}{\line}
{\tab}{\tab}{\tab}{\cf1 platform_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Private_other_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 29}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Private-use character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Small_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 13}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for small variant form (CNS compatibility)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Space_separator_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 23}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Space separator}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Spacing_combining_mark_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 7}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Spacing combining mark}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Square_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 14}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for CJK squared font variant}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Subscript_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 9}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for subscript form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Superscript_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for superscript form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Surrogate_other_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 28}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Surrogate character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Titlecase_letter_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 3}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Title case letter}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Unassigned_other_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 0}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Unassigned chacaracter}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Unicode}{\cf1 :} {\cf4 UC_UNICODE_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Unicode routines}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_IMPORTED_UNICODE_ROUTINES}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 UC_IMPORTED_UNICODE_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf1 unicode_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Uppercase_letter_category}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 1}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Upper case letter}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Vertical_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 10}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for vertical layout presentation form}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\line}
{\tab}{\cf5 {\cf5 Wide_decomposition_mapping}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 11}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Decomposition mapping for wide (zenkaku) compatibility character}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 UC_UNICODE_CONSTANTS}{\cf3 )}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Comparison}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  or attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\cf5 a}{\cf1 ,} {\cf5 b}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 both_or_none_void}{\cf1 :} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\cf1 (}{\b\cf6 Result} {\b\cf6 and} {\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void}{\cf1 )}{\cf1 )} {\b\cf6 implies} {\cf1 (}{\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 ,} {\cf5 a}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to objects considered equal?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 is_deep_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 Current}{\cf3  and }{\cf5 other}{\cf3  attached to isomorphic object structures?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 shallow_implies_deep}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 is_deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object considered}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to current object?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\tab}{\cf1 consistent}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_equal} {\cf1 (}{\cf5 a}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 ;} {\cf5 b}{\cf1 :} {\b\cf6 like} arg #1{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are }{\cf5 a}{\cf3  and }{\cf5 b}{\cf3  either both void or attached to}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical objects of the same type?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default object comparison criterion.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 b} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 =} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 =} {\b\cf6 Void}{\cf1 )} {\b\cf6 or else} {\cf1 (}{\cf1 (}{\cf5 a} {\cf1 /=} {\b\cf6 Void} {\b\cf6 and} {\cf5 b} {\cf1 /=} {\b\cf6 Void}{\cf1 )} {\b\cf6 and then} {\cf5 a}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 b}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_is_equal} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 other}{\cf3  attached to an object of the same type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  as current object, and field-by-field identical to it?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 same_type}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 symmetric}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf5 other}{\b\cf1 .}{\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 conforms_to} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Does type of current object conform to type}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of }{\cf5 other}{\cf3  (as per Eiffel: The Language, chapter 13)?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 same_type} {\cf1 (}{\cf5 other}{\cf1 :} {\cf4 ANY}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is type of current object identical to type of }{\cf5 other}{\cf3 ?}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )} {\b\cf6 and} {\cf5 other}{\b\cf1 .}{\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 valid_utf32} {\cf1 (}{\cf5 a_string}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Are the bytes in }{\cf5 a_string}{\cf3  a valid UTF-32 encoding?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  'a_string' has one byte per character.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default to big endian when no BOM.}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_string_not_void}{\cf1 :} {\cf5 a_string} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 a_string_is_string}{\cf1 :} {\cf5 Any_}{\b\cf1 .}{\cf5 same_types}{\cf1  }{\cf1 (}{\cf5 a_string}{\cf1 ,} ""{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 i}{\cf1 ,} {\cf5 nb}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf5 least_endian}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf1 (}{\cf5 a_string}{\b\cf1 .}{\cf5 count} {\cf1 \\\\} 4{\cf1 )} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 Result} {\b\cf6 and} {\cf5 a_string}{\b\cf1 .}{\cf5 count} {\cf1 >} 0 {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 is_endian_detection_character_least_first}{\cf1  }{\cf1 (}{\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}1{\cf1 )}{\cf1 ,} {\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}2{\cf1 )}{\cf1 ,} {\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}3{\cf1 )}{\cf1 ,} {\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}4{\cf1 )}{\cf1 )} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 least_endian} {\cf1 :=} {\b\cf6 True}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 nb} {\cf1 :=} {\cf5 a_string}{\b\cf1 .}{\cf5 count}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 from}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 until}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 >} {\cf5 nb}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 loop}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 Unicode}{\b\cf1 .}{\cf5 valid_non_surrogate_code}{\cf1  }{\cf1 (}{\cf5 code}{\cf1  }{\cf1 (}{\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}{\cf5 i}{\cf1 )}{\cf1 ,} {\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} 1{\cf1 )}{\cf1 ,} {\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} 2{\cf1 )}{\cf1 ,} {\cf5 a_string}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}{\cf5 i} {\cf1 +} 3{\cf1 )}{\cf1 ,} {\cf5 least_endian}{\cf1 )}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 not} {\b\cf6 Result} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 nb} {\cf1 +} 1{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\tab}{\cf5 i} {\cf1 :=} {\cf5 i} {\cf1 +} 4{\line}
{\tab}{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 empty_is_true}{\cf1 :} {\cf5 a_string}{\b\cf1 .}{\cf5 count} {\cf1 =} 0 {\b\cf6 implies} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\cf1 utf32_count_multiple_of_four}{\cf1 :} {\b\cf6 Result} {\b\cf6 implies} {\cf1 (}{\cf1 (}{\cf5 a_string}{\b\cf1 .}{\cf5 count} {\cf1 \\\\} 4{\cf1 )} {\cf1 =} 0{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Duplication}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  equal to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  For non-void }{\cf5 other}{\cf3 , }{\cf5 clone}{\cf3  calls }{\cf5 copy}{\cf3 ;}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to change copying/cloning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Update current object using fields of object attached}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 other}{\cf3 , so as to yield equal objects.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Current} {\cf1 ~} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `deep_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void: otherwise, new object structure}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  recursively duplicated from the one attached to }{\cf5 other}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Effect equivalent to that of:}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3 		}{\cf5 copy}{\cf3  (}{\cf5 other}{\cf3  . }{\cf5 deep_twin}{\cf3 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\cf5 copy}{\cf1  }{\cf1 (}{\cf5 other}{\b\cf1 .}{\cf5 deep_twin}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 deep_twin}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object structure recursively duplicated from Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 deep_equal}{\cf1 :} {\cf5 deep_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 ,} {\b\cf6 Result}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_clone} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\cf1 :} {\b\cf6 like} {\cf5 other}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Use `standard_twin' instead. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Void if }{\cf5 other}{\cf3  is void; otherwise new object}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 other} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 other}{\b\cf1 .}{\cf5 standard_twin}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_copy} {\cf1 (}{\cf5 other}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Copy every field of }{\cf5 other}{\cf3  onto corresponding field}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 require} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 other_not_void}{\cf1 :} {\cf5 other} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 type_identity}{\cf1 :} {\cf5 same_type}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 is_standard_equal}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\cf5 other}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 standard_twin}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object field-by-field identical to }{\cf5 other}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Always uses default copying semantics.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 standard_twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 equal}{\cf1 :} {\cf5 standard_equal}{\cf1  }{\cf1 (}{\b\cf6 Result}{\cf1 ,} {\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 twin}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New object equal to }{\cf5 Current}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 twin}{\cf3  calls }{\cf5 copy}{\cf3 ; to change copying/twinning semantics, redefine }{\cf5 copy}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 twin_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 is_equal}{\cf1 :} {\b\cf6 Result} {\cf1 ~} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 as_attached}{\cf1 :} {\b\cf6 attached} {\cf4 UC_UTF32_ROUTINES}{\line}
{\tab}{\tab}{\b\cf6 obsolete} "Remove calls to this feature. [2017-05-31]"{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Attached version of Current.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Can be used during transitional period to convert}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  non-void-safe classes to void-safe ones.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\b\cf6 Current}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default}{\cf1 :} {\b\cf6 detachable} {\cf4 UC_UTF32_ROUTINES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of object's type}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 default_pointer}{\cf1 :} {\cf4 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Default value of type }{\cf5 POINTER}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Avoid the need to write }{\cf5 p}{\cf3 .}{\cf5 default}{\cf3  for}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  some }{\cf5 p}{\cf3  of type }{\cf5 POINTER}{\cf3 .)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 default_rescue}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Process exception for routines with no Rescue clause.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (Default: do nothing.)}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 do_nothing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Execute a null action.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Constants}{\line}
{\line}
{\tab}{\cf5 {\cf5 Hex_100}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 256}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  2 ^ 8}{\line}
{\line}
{\tab}{\cf5 {\cf5 Hex_fe}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 254}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Endian detection character}{\line}
{\line}
{\tab}{\cf5 {\cf5 Hex_ff}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 255}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Endian detection character}{\line}
{\line}
{\tab}{\cf5 {\cf5 Three_byte_offset}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 16777216}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  256 * 256 * 256}{\line}
{\line}
{\tab}{\cf5 {\cf5 Two_byte_offset}{\cf1 :} {\cf4 INTEGER_32} {\cf1 =} 65536}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  256 * 256}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Endian-ness detection}{\line}
{\line}
{\tab}{\cf5 {\cf5 Bom_be}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  BOM in big-endian format}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "%U%Uþÿ"{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 bom_be_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 four_bytes}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 count} {\cf1 =} 4{\line}
{\tab}{\tab}{\tab}{\cf1 first_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}1{\cf1 )} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\cf1 second_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}2{\cf1 )} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\cf1 third_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}3{\cf1 )} {\cf1 =} {\cf5 Hex_fe}{\line}
{\tab}{\tab}{\tab}{\cf1 fourth_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}4{\cf1 )} {\cf1 =} {\cf5 Hex_ff}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 Bom_le}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  BOM in little-endian format}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} "ÿþ%U%U"{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 bom_le_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\tab}{\cf1 four_bytes}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 count} {\cf1 =} 4{\line}
{\tab}{\tab}{\tab}{\cf1 first_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}1{\cf1 )} {\cf1 =} {\cf5 Hex_ff}{\line}
{\tab}{\tab}{\tab}{\cf1 second_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}2{\cf1 )} {\cf1 =} {\cf5 Hex_fe}{\line}
{\tab}{\tab}{\tab}{\cf1 third_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}3{\cf1 )} {\cf1 =} 0{\line}
{\tab}{\tab}{\tab}{\cf1 fourth_byte}{\cf1 :} {\b\cf6 Result}{\b\cf1 .}{\cf5 item_code}{\cf1  }{\cf1 (}4{\cf1 )} {\cf1 =} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_byte} {\cf1 (}{\cf5 a}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is }{\cf5 a}{\cf3  a byte?}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 a} {\cf1 >=} 0 {\b\cf6 and} {\cf5 a} {\cf1 <} {\cf5 Hex_100}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 a} {\cf1 >=} 0 {\b\cf6 and} {\cf5 a} {\cf1 <} {\cf5 Hex_100}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_endian_detection_character_least_first} {\cf1 (}{\cf5 first}{\cf1 ,} {\cf5 second}{\cf1 ,} {\cf5 third}{\cf1 ,} {\cf5 fourth}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do the four bytes represent the character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  0xFEFF with }{\cf5 first}{\cf3  being the least significant byte?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 first_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 first}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 second_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 second}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 third_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 third}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 fourth_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 fourth}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 first} {\cf1 =} {\cf5 Hex_ff} {\b\cf6 and} {\cf5 second} {\cf1 =} {\cf5 Hex_fe} {\b\cf6 and} {\cf5 third} {\cf1 =} 0 {\b\cf6 and} {\cf5 fourth} {\cf1 =} 0{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 first} {\cf1 =} {\cf5 Hex_ff} {\b\cf6 and} {\cf5 second} {\cf1 =} {\cf5 Hex_fe} {\b\cf6 and} {\cf5 third} {\cf1 =} 0 {\b\cf6 and} {\cf5 fourth} {\cf1 =} 0{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_endian_detection_character_most_first} {\cf1 (}{\cf5 first}{\cf1 ,} {\cf5 second}{\cf1 ,} {\cf5 third}{\cf1 ,} {\cf5 fourth}{\cf1 :} {\cf4 INTEGER_32}{\cf1 )}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do the four bytes represent the character}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  0xFEFF with }{\cf5 first}{\cf3  being the most significant byte?}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 first_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 first}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 second_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 second}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 third_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 third}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf1 fourth_is_byte}{\cf1 :} {\cf5 is_byte}{\cf1  }{\cf1 (}{\cf5 fourth}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 first} {\cf1 =} 0 {\b\cf6 and} {\cf5 second} {\cf1 =} 0 {\b\cf6 and} {\cf5 third} {\cf1 =} {\cf5 Hex_fe} {\b\cf6 and} {\cf5 fourth} {\cf1 =} {\cf5 Hex_ff}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 definition}{\cf1 :} {\b\cf6 Result} {\cf1 =} {\cf1 (}{\cf5 first} {\cf1 =} 0 {\b\cf6 and} {\cf5 second} {\cf1 =} 0 {\b\cf6 and} {\cf5 third} {\cf1 =} {\cf5 Hex_fe} {\b\cf6 and} {\cf5 fourth} {\cf1 =} {\cf5 Hex_ff}{\cf1 )}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Output}{\line}
{\line}
{\tab}{\cf5 {\cf5 Io}{\cf1 :} {\cf4 STD_FILES}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Handle to standard file setup}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result}{\b\cf1 .}{\cf5 set_output_default}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 io_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 Result} {\cf1 :=} {\cf5 tagged_out}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 print} {\cf1 (}{\cf5 o}{\cf1 :} {\b\cf6 detachable} {\cf4 ANY}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Write terse external representation of }{\cf5 o}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  on standard output.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\cf5 o} {\cf1 /=} {\b\cf6 Void} {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 Io}{\b\cf1 .}{\cf5 put_string}{\cf1  }{\cf1 (}{\cf5 o}{\b\cf1 .}{\cf5 out}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 tagged_out}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  New string containing terse printable representation}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  of current object}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 external}{\line}
{\tab}{\tab}{\tab}"built_in"{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 tagged_out_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Platform}{\line}
{\line}
{\tab}{\cf5 {\cf5 Operating_environment}{\cf1 :} {\cf4 OPERATING_ENVIRONMENT}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Objects available from the operating system}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 once}{\line}
{\tab}{\tab}{\tab}{\b\cf6 create} {\b\cf6 Result}{\line}
{\tab}{\tab}{\b\cf6 ensure} {\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\tab}{\tab}{\cf1 operating_environment_not_void}{\cf1 :} {\b\cf6 Result} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Retrieval}{\line}
{\line}
{\tab}{\cf5 {\b\cf6 frozen} {\cf5 internal_correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Called from runtime to perform a proper dynamic dispatch on }{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  from MISMATCH_CORRECTOR.}{\line}
{\tab}{\tab}{\tab}{\cf3 --} {\cf3 (from }{\cf4 ANY}{\cf3 )}{\line}
{\tab}{\tab}{\b\cf6 local}{\line}
{\tab}{\tab}{\tab}{\cf5 l_msg}{\cf1 :} {\cf4 STRING_8}{\line}
{\tab}{\tab}{\tab}{\cf5 l_exc}{\cf1 :} {\cf4 EXCEPTIONS}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\tab}{\b\cf6 if} {\b\cf6 attached} {\cf1 \{}{\cf4 MISMATCH_CORRECTOR}{\cf1 \}} {\b\cf6 Current} {\b\cf6 as} l_corrector {\b\cf6 then}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_corrector}{\b\cf1 .}{\cf5 correct_mismatch}{\line}
{\tab}{\tab}{\tab}{\b\cf6 else}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_msg}{\b\cf1 .}{\cf5 make_from_string}{\cf1  }{\cf1 (}"Mismatch: "{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\b\cf6 create} {\cf5 l_exc}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_msg}{\b\cf1 .}{\cf5 append}{\cf1  }{\cf1 (}{\cf5 generating_type}{\b\cf1 .}{\cf5 name}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\tab}{\cf5 l_exc}{\b\cf1 .}{\cf5 raise_retrieval_exception}{\cf1  }{\cf1 (}{\cf5 l_msg}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\b\cf6 end}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 invariant}{\line}
{\tab}{\tab}{\cf3 --} {\cf3 from }{\cf4 ANY}{\line}
{\tab}{\cf1 reflexive_equality}{\cf1 :} {\cf5 standard_is_equal}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\tab}{\cf1 reflexive_conformance}{\cf1 :} {\cf5 conforms_to}{\cf1  }{\cf1 (}{\b\cf6 Current}{\cf1 )}{\line}
{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 UC_UTF32_ROUTINES}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
