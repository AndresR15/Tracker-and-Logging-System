{\rtf1\ansi\ansicpg1252\deflang1033{\fonttbl{\f0\fscript\fcharset0 Courier;}}{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red128\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red0\green0\blue128;}
{\cf3\f0\fs16 {\tab}{\tab}{\tab}-- Automatic generation produced by ISE Eiffel --
{\line}
{{\b\cf6 note}{\line}
{\tab}{\cf1 description}{\cf1 :} "General parsers"{\line}
{\tab}{\cf1 library}{\cf1 :} "Gobo Eiffel Parse Library"{\line}
{\tab}{\cf1 copyright}{\cf1 :} "Copyright (c) 1999-2005, Eric Bezault and others"{\line}
{\tab}{\cf1 license}{\cf1 :} "MIT License"{\line}
{\tab}{\cf1 date}{\cf1 :} "$Date: 2016-05-06 12:15:38 -0700 (Fri, 06 May 2016) $"{\line}
{\tab}{\cf1 revision}{\cf1 :} "$Revision: 98678 $"{\line}
{\line}
{\b\cf6 deferred} {\b\cf6 class} {\line}
{\tab}{\cf4 YY_PARSER}{\line}
{\line}
{\b\cf6 feature} {\cf1 \{}NONE{\cf1 \}} {\cf3 --}{\cf3  Initialization}{\line}
{\line}
{\tab}{\cf5 {\cf5 make}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Create a new parser.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Parsing}{\line}
{\line}
{\tab}{\cf5 {\cf5 parse}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Parse input stream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Set }{\cf5 syntax_error}{\cf3  to True if}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  parsing has not been successful.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 syntax_error}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has last parsing been unsuccesful?}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_suspended}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Has parsing been suspended?}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The next call to }{\cf5 parse}{\cf3  will resume parsing in the state}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  where the parser was when it was suspended. Note that a call}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 abort}{\cf3  or }{\cf5 accept}{\cf3  will force }{\cf5 parse}{\cf3  to parse from scratch.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Access}{\line}
{\line}
{\tab}{\cf5 {\cf5 error_count}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Number of errors detected during last parsing}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (}{\cf5 error_count}{\cf3  can be non-zero even though}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 syntax_error}{\cf3  is false. This can happen when}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  error recovery occurred.)}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 error_count_non_negative}{\cf1 :} {\b\cf6 Result} {\cf1 >=} 0{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\cf5 accept}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Stop parsing successfully.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 accepted}{\cf1 :} {\b\cf6 not} {\cf5 syntax_error}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 abort}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Abort parsing.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Do not print error message.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 aborted}{\cf1 :} {\cf5 syntax_error}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 clear_all}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Clear temporary objects so that they can be collected}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  by the garbage collector. (This routine is called by}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  }{\cf5 parse}{\cf3  before exiting. It can be redefined in descendants.)}{\line}
{\tab}{\tab}{\b\cf6 do}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}{\cf4 YY_PARSER_ACTION}{\cf1 \}} {\cf3 --}{\cf3  Basic operations}{\line}
{\line}
{\tab}{\cf5 {\cf5 suspend}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Suspend parsing.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  The next call to }{\cf5 parse}{\cf3  will resume parsing in the state}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  where the parser was when it was suspended. Note that a call}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  to }{\cf5 abort}{\cf3  or }{\cf5 accept}{\cf3  will force }{\cf5 parse}{\cf3  to parse from scratch.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 ensure}{\line}
{\tab}{\tab}{\tab}{\cf1 suspended}{\cf1 :} {\cf5 is_suspended}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 raise_error}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Raise a syntax error.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Report error using }{\cf5 report_error}{\cf3  and}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  perform normal error recovery if possible.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 recover}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Recover immediately after a parse error.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 report_error} {\cf1 (}{\cf5 a_message}{\cf1 :} {\cf4 STRING_8}{\cf1 )}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Print error message.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (This routine is called by }{\cf5 parse}{\cf3  when it detects}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  a syntax error. It can be redefined in descendants.)}{\line}
{\tab}{\tab}{\b\cf6 require}{\line}
{\tab}{\tab}{\tab}{\cf1 a_message_not_void}{\cf1 :} {\cf5 a_message} {\cf1 /=} {\b\cf6 Void}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 clear_token}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Clear the previous lookahead token.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Used in error-recovery rule actions.}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}{\cf4 YY_PARSER_ACTION}{\cf1 \}} {\cf3 --}{\cf3  Status report}{\line}
{\line}
{\tab}{\cf5 {\cf5 is_recovering}{\cf1 :} {\cf4 BOOLEAN}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Is current parser recovering from a syntax error?}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 feature} {\cf1 \{}{\cf4 YY_PARSER_ACTION}{\cf1 \}} {\cf3 --}{\cf3  Scanning}{\line}
{\line}
{\tab}{\cf5 {\cf5 read_token}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Read a token from input stream.}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Make result available in }{\cf5 last_token}{\cf3 .}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  (This routine is called by }{\cf5 parse}{\cf3  when it needs a}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  new token from the input stream.)}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\line}
{\tab}{\cf5 {\cf5 last_token}{\cf1 :} {\cf4 INTEGER_32}{\line}
{\tab}{\tab}{\tab}{\cf3 --}{\cf3  Last token read}{\line}
{\tab}{\tab}{\b\cf6 deferred}{\line}
{\tab}{\tab}{\b\cf6 end}}{\line}
{\tab}{\line}
{\b\cf6 end} {\cf3 --} {\cf3 class }{\cf4 YY_PARSER}}
{\line}
{\cf3 {\tab}{\tab}{\tab}-- Generated by ISE Eiffel --}
{\line}
{\cf3{\tab}{\tab}{\tab}-- For more details: http://www.eiffel.com --}
}}
{\line}
