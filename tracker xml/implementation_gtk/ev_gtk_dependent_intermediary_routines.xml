<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Intermediary routines between gtk and eiffel.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2013-05-30 14:33:11 -0700 (Thu, 30 May 2013) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 92653 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml</location>EV_GTK_DEPENDENT_INTERMEDIARY_ROUTINES</class>

<keyword>inherit</keyword>
	<class><include>False</include>IDENTIFIED</class>
		<keyword>undefine</keyword>
			<feature><include>False</include>copy</feature><symbol>,</symbol>
			<feature><include>False</include>is_equal</feature>
		<keyword>end</keyword>

	<class><location>../implementation_gtk/ev_gtk_key_conversion.xml</location>EV_GTK_KEY_CONVERSION</class>

<keyword>create</keyword> 
	<feature><include>False</include>default_create</feature>

<keyword>feature</keyword> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_new_toolbar_item_select_actions_intermediary</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_new_toolbar_item_select_actions_intermediary</location>new_toolbar_item_select_actions_intermediary</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Intermediary agent for toolbar button select action</comment>
		<keyword>local</keyword>
			<local>a_toolbar_button_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_tool_bar_button_imp.xml</location>EV_TOOL_BAR_BUTTON_IMP</class>
			<local>a_radio_button_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_tool_bar_radio_button_imp.xml</location>EV_TOOL_BAR_RADIO_BUTTON_IMP</class>
		<keyword>do</keyword>
			<local>a_toolbar_button_imp</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<local>a_radio_button_imp</local> <symbol>?=</symbol> <local>a_toolbar_button_imp</local>
			<keyword>if</keyword> <local>a_radio_button_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>if</keyword> <local>a_radio_button_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_tool_bar_radio_button_imp.xml#f_is_selected</location>is_selected</feature> <keyword>and then</keyword> <keyword>attached</keyword> <local>a_radio_button_imp</local><dot>.</dot><feature><location>../implementation_interface/ev_tool_bar_button_action_sequences_i.xml#f_select_actions_internal</location>select_actions_internal</feature> <keyword>as</keyword> l_radio_button_select_actions <keyword>then</keyword>
					<local>l_radio_button_select_actions</local><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
				<keyword>end</keyword>
			<keyword>elseif</keyword> <local>a_toolbar_button_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<local>a_toolbar_button_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_tool_bar_button_imp.xml#f_call_select_actions</location>call_select_actions</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_pnd_deferred_parent_start_transport_filter_intermediary</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_pnd_deferred_parent_start_transport_filter_intermediary</location>pnd_deferred_parent_start_transport_filter_intermediary</feature> <symbol>(</symbol><local>a_c_object</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>;</symbol> <local>a_type</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_button</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>a_x_tilt</local><symbol>,</symbol> <local>a_y_tilt</local><symbol>,</symbol> <local>a_pressure</local><symbol>:</symbol> <class><include>False</include>REAL_64</class><symbol>;</symbol> <local>a_screen_x</local><symbol>,</symbol> <local>a_screen_y</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Start of pick and drop transport</comment>
		<keyword>local</keyword>
			<local>pnd_par</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_pnd_deferred_item_parent.xml</location>EV_PND_DEFERRED_ITEM_PARENT</class>
		<keyword>do</keyword>
			<local>pnd_par</local> <symbol>?=</symbol> <feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_c_get_eif_reference_from_object_id</location>c_get_eif_reference_from_object_id</feature><symbol> </symbol><symbol>(</symbol><local>a_c_object</local><symbol>)</symbol>
			<keyword>check</keyword>
					<local>pnd_par</local> <symbol>/=</symbol> <keyword>Void</keyword>
			<keyword>then</keyword>
			<keyword>end</keyword>
			<local>pnd_par</local><dot>.</dot><feature><location>../implementation_gtk/ev_pnd_deferred_item_parent.xml#f_on_mouse_button_event</location>on_mouse_button_event</feature><symbol> </symbol><symbol>(</symbol><local>a_type</local><symbol>,</symbol> <local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_button</local><symbol>,</symbol> <local>a_x_tilt</local><symbol>,</symbol> <local>a_y_tilt</local><symbol>,</symbol> <local>a_pressure</local><symbol>,</symbol> <local>a_screen_x</local><symbol>,</symbol> <local>a_screen_y</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_mcl_column_click_callback</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_mcl_column_click_callback</location>mcl_column_click_callback</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>int</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
		<keyword>local</keyword>
			<local>a_mcl</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_multi_column_list_imp.xml</location>EV_MULTI_COLUMN_LIST_IMP</class>
		<keyword>do</keyword>
			<local>a_mcl</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_mcl</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>attached</keyword> <local>a_mcl</local><dot>.</dot><feature><location>../implementation_interface/ev_multi_column_list_action_sequences_i.xml#f_column_title_click_actions_internal</location>column_title_click_actions_internal</feature> <keyword>as</keyword> l_mcl_column_title_click_actions <keyword>then</keyword>
				<local>l_mcl_column_title_click_actions</local><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>int</local><symbol>]</symbol><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_mcl_column_resize_callback</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_mcl_column_resize_callback</location>mcl_column_resize_callback</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>a_column</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
		<keyword>local</keyword>
			<local>a_column_ptr</local><symbol>:</symbol> <class><include>False</include>POINTER</class>
			<local>temp_width</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<local>a_mcl</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_multi_column_list_imp.xml</location>EV_MULTI_COLUMN_LIST_IMP</class>
		<keyword>do</keyword>
			<local>a_mcl</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_mcl</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <local>a_mcl</local><dot>.</dot><feature><location>../implementation_interface/ev_multi_column_list_action_sequences_i.xml#f_column_resized_actions_internal</location>column_resized_actions_internal</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>if</keyword> <local>a_column</local> <symbol>&gt;</symbol> <number>0</number> <keyword>then</keyword>
					<local>a_column_ptr</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_tree_view_get_column</location>gtk_tree_view_get_column</feature> <symbol>(</symbol><local>a_mcl</local><dot>.</dot><feature><location>../implementation_gtk/ev_multi_column_list_imp.xml#f_tree_view</location>tree_view</feature><symbol>,</symbol> <local>a_column</local> <symbol>-</symbol> <number>1</number><symbol>)</symbol>
					<local>temp_width</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_tree_view_column_get_width</location>gtk_tree_view_column_get_width</feature> <symbol>(</symbol><local>a_column_ptr</local><symbol>)</symbol>
					<keyword>if</keyword> <symbol>(</symbol><local>a_column</local><symbol>)</symbol> <symbol>&lt;=</symbol> <local>a_mcl</local><dot>.</dot><feature><location>../implementation_gtk/ev_multi_column_list_imp.xml#f_column_count</location>column_count</feature> <keyword>and then</keyword> <local>a_mcl</local><dot>.</dot><feature><location>../implementation_interface/ev_multi_column_list_i.xml#f_column_widths</location>column_widths</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <local>a_mcl</local><dot>.</dot><feature><location>../implementation_interface/ev_multi_column_list_i.xml#f_column_width</location>column_width</feature><symbol> </symbol><symbol>(</symbol><local>a_column</local><symbol>)</symbol> <symbol>/=</symbol> <local>temp_width</local> <keyword>then</keyword>
						<local>a_mcl</local><dot>.</dot><feature><location>../implementation_interface/ev_multi_column_list_i.xml#f_update_column_width</location>update_column_width</feature><symbol> </symbol><symbol>(</symbol><local>temp_width</local><symbol>,</symbol> <local>a_column</local><symbol>)</symbol>
						<keyword>if</keyword> <keyword>attached</keyword> <local>a_mcl</local><dot>.</dot><feature><location>../implementation_interface/ev_multi_column_list_action_sequences_i.xml#f_column_resized_actions_internal</location>column_resized_actions_internal</feature> <keyword>as</keyword> l_mcl_column_resized_actions <keyword>then</keyword>
							<local>l_mcl_column_resized_actions</local><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>a_column</local><symbol>]</symbol><symbol>)</symbol>
						<keyword>end</keyword>
					<keyword>end</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_text_buffer_mark_set_intermediary</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_text_buffer_mark_set_intermediary</location>text_buffer_mark_set_intermediary</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>nargs</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>args</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol>
			<comment>--</comment><comment> Used for caret positioning events</comment>
		<keyword>local</keyword>
			<local>a_rich_text</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_rich_text_imp.xml</location>EV_RICH_TEXT_IMP</class>
			<local>a_text_iter</local><symbol>,</symbol> <local>a_text_mark</local><symbol>:</symbol> <class><include>False</include>POINTER</class>
		<keyword>do</keyword>
			<local>a_rich_text</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_rich_text</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <local>a_rich_text</local><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>then</keyword>
				<local>a_text_iter</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_value_pointer</location>gtk_value_pointer</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_g_value_array_i_th</location>g_value_array_i_th</feature> <symbol>(</symbol><local>args</local><symbol>,</symbol> <number>1</number><symbol>)</symbol><symbol>)</symbol>
				<local>a_text_mark</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_value_pointer</location>gtk_value_pointer</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_g_value_array_i_th</location>g_value_array_i_th</feature> <symbol>(</symbol><local>args</local><symbol>,</symbol> <number>2</number><symbol>)</symbol><symbol>)</symbol>
				<local>a_rich_text</local><dot>.</dot><feature><location>../implementation_gtk/ev_rich_text_imp.xml#f_on_text_mark_changed</location>on_text_mark_changed</feature><symbol> </symbol><symbol>(</symbol><local>a_text_iter</local><symbol>,</symbol> <local>a_text_mark</local><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_tree_row_expansion_change_intermediary</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_tree_row_expansion_change_intermediary</location>tree_row_expansion_change_intermediary</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>is_expanded</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>;</symbol> <local>nargs</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>args</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol>
			<comment>--</comment><comment> Used for calling expansion actions for tree nodes</comment>
		<keyword>local</keyword>
			<local>a_tree_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_tree_imp.xml</location>EV_TREE_IMP</class>
			<local>a_tree_node</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_tree_node_imp.xml</location>EV_TREE_NODE_IMP</class>
			<local>a_tree_path</local><symbol>:</symbol> <class><include>False</include>POINTER</class>
		<keyword>do</keyword>
			<local>a_tree_imp</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_tree_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <local>a_tree_imp</local><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>then</keyword>
				<local>a_tree_path</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_value_pointer</location>gtk_value_pointer</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_args_array_i_th</location>gtk_args_array_i_th</feature> <symbol>(</symbol><local>args</local><symbol>,</symbol> <number>1</number><symbol>)</symbol><symbol>)</symbol>
				<local>a_tree_node</local> <symbol>:=</symbol> <local>a_tree_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_tree_imp.xml#f_node_from_tree_path</location>node_from_tree_path</feature><symbol> </symbol><symbol>(</symbol><local>a_tree_path</local><symbol>)</symbol>
				<keyword>if</keyword> <local>is_expanded</local> <keyword>then</keyword>
					<keyword>if</keyword> <local>a_tree_node</local><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_action_sequences_i.xml#f_expand_actions_internal</location>expand_actions_internal</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
						<local>a_tree_node</local><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_action_sequences_i.xml#f_expand_actions</location>expand_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>else</keyword>
					<keyword>if</keyword> <local>a_tree_node</local><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_action_sequences_i.xml#f_collapse_actions_internal</location>collapse_actions_internal</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
						<local>a_tree_node</local><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_action_sequences_i.xml#f_collapse_actions</location>collapse_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_boolean_cell_renderer_toggle_intermediary</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_boolean_cell_renderer_toggle_intermediary</location>boolean_cell_renderer_toggle_intermediary</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>nargs</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>args</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol>
			<comment>--</comment><comment> Called when a cell renderer is toggled (EV_CHECKABLE_LIST)</comment>
		<keyword>local</keyword>
			<local>a_list_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_gtk_tree_view.xml</location>EV_GTK_TREE_VIEW</class>
			<local>a_tree_path_str</local><symbol>:</symbol> <class><include>False</include>POINTER</class>
		<keyword>do</keyword>
			<local>a_list_imp</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_list_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <local>a_list_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_gtk_tree_view.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>then</keyword>
				<local>a_tree_path_str</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_value_pointer</location>gtk_value_pointer</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_args_array_i_th</location>gtk_args_array_i_th</feature> <symbol>(</symbol><local>args</local><symbol>,</symbol> <number>0</number><symbol>)</symbol><symbol>)</symbol>
				<local>a_list_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_gtk_tree_view.xml#f_on_tree_path_toggle</location>on_tree_path_toggle</feature><symbol> </symbol><symbol>(</symbol><local>a_tree_path_str</local><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_page_switch_translate</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_page_switch_translate</location>page_switch_translate</feature> <symbol>(</symbol><local>n</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>args</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>TUPLE</class>
			<comment>--</comment><comment> Retrieve index of switched page.</comment>
		<keyword>local</keyword>
			<local>gtkarg2</local><symbol>:</symbol> <class><include>False</include>POINTER</class>
		<keyword>do</keyword>
			<local>gtkarg2</local> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_args_array_i_th</location>gtk_args_array_i_th</feature> <symbol>(</symbol><local>args</local><symbol>,</symbol> <number>1</number><symbol>)</symbol>
			<keyword>Result</keyword> <symbol>:=</symbol> <symbol>[</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gtk_value_uint</location>gtk_value_uint</feature> <symbol>(</symbol><local>gtkarg2</local><symbol>)</symbol><symbol>]</symbol>
		<keyword>end</keyword>

	<anchor>f_on_pnd_deferred_item_parent_selection_change</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_on_pnd_deferred_item_parent_selection_change</location>on_pnd_deferred_item_parent_selection_change</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> A selection event has occurred on a PND deferred item parent.</comment>
		<keyword>local</keyword>
			<local>a_pnd_widget</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_pnd_deferred_item_parent.xml</location>EV_PND_DEFERRED_ITEM_PARENT</class>
		<keyword>do</keyword>
			<local>a_pnd_widget</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_pnd_widget</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<local>a_pnd_widget</local><dot>.</dot><feature><location>../implementation_gtk/ev_pnd_deferred_item_parent.xml#f_call_selection_action_sequences</location>call_selection_action_sequences</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_on_combo_box_toggle_button_event</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_on_combo_box_toggle_button_event</location>on_combo_box_toggle_button_event</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>a_event_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> A combo box toggle button has been toggled.</comment>
		<keyword>local</keyword>
			<local>a_combo</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_combo_box_imp.xml</location>EV_COMBO_BOX_IMP</class>
		<keyword>do</keyword>
			<local>a_combo</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>a_combo</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <local>a_combo</local><dot>.</dot><feature><location>../implementation_gtk/ev_widget_imp.xml#f_parent_imp</location>parent_imp</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <local>a_combo</local><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>then</keyword>
				<keyword>inspect</keyword> <local>a_event_id</local>
				<keyword>when</keyword> <number>1</number> <keyword>then</keyword>
					<local>a_combo</local><dot>.</dot><feature><location>../implementation_gtk/ev_combo_box_imp.xml#f_retrieve_toggle_button</location>retrieve_toggle_button</feature>
				<keyword>when</keyword> <number>2</number> <keyword>then</keyword>
					<local>a_combo</local><dot>.</dot><feature><location>../implementation_gtk/ev_combo_box_imp.xml#f_toggle_button_toggled</location>toggle_button_toggled</feature>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_toolbar_item_select_actions_intermediary</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_toolbar_item_select_actions_intermediary</location>toolbar_item_select_actions_intermediary</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Intermediary agent for toolbar button select action</comment>
		<keyword>local</keyword>
			<local>a_toolbar_button_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_tool_bar_button_imp.xml</location>EV_TOOL_BAR_BUTTON_IMP</class>
			<local>a_radio_button_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_tool_bar_radio_button_imp.xml</location>EV_TOOL_BAR_RADIO_BUTTON_IMP</class>
		<keyword>do</keyword>
			<local>a_toolbar_button_imp</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<local>a_radio_button_imp</local> <symbol>?=</symbol> <local>a_toolbar_button_imp</local>
			<keyword>if</keyword> <local>a_radio_button_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>if</keyword> <local>a_radio_button_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_tool_bar_radio_button_imp.xml#f_is_selected</location>is_selected</feature> <keyword>and then</keyword> <keyword>attached</keyword> <local>a_radio_button_imp</local><dot>.</dot><feature><location>../implementation_interface/ev_tool_bar_button_action_sequences_i.xml#f_select_actions_internal</location>select_actions_internal</feature> <keyword>as</keyword> l_radio_button_select_actions <keyword>then</keyword>
					<local>l_radio_button_select_actions</local><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
				<keyword>end</keyword>
			<keyword>elseif</keyword> <local>a_toolbar_button_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>attached</keyword> <local>a_toolbar_button_imp</local><dot>.</dot><feature><location>../implementation_interface/ev_tool_bar_button_action_sequences_i.xml#f_select_actions_internal</location>select_actions_internal</feature> <keyword>as</keyword> l_toolbar_button_select_actions <keyword>then</keyword>
				<local>l_toolbar_button_select_actions</local><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_gdk_event_dispatcher</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_gdk_event_dispatcher</location>gdk_event_dispatcher</feature> <symbol>(</symbol><local>a_object_id</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>n_args</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>args</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol>
			<comment>--</comment><comment> Intermediary agent for gdk events.</comment>
		<keyword>local</keyword>
			<local>l_any_imp</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_any_imp.xml</location>EV_ANY_IMP</class>
		<keyword>do</keyword>
			<local>l_any_imp</local> <symbol>?=</symbol> <feature><include>False</include>eif_id_object</feature><symbol> </symbol><symbol>(</symbol><local>a_object_id</local><symbol>)</symbol>
			<keyword>if</keyword> <local>l_any_imp</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<local>l_any_imp</local><dot>.</dot><feature><location>../implementation_gtk/ev_any_imp.xml#f_process_gdk_event</location>process_gdk_event</feature><symbol> </symbol><symbol>(</symbol><local>n_args</local><symbol>,</symbol> <local>args</local><symbol>)</symbol>
			<keyword>else</keyword>
				<keyword>check</keyword>
					<tag>event_object_not_coupled</tag><symbol>:</symbol> <keyword>False</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Externals</comment>

	<anchor>f_c_get_eif_reference_from_object_id</anchor><keyword>frozen</keyword> <feature><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml#f_c_get_eif_reference_from_object_id</location>c_get_eif_reference_from_object_id</feature> <symbol>(</symbol><local>a_c_object</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_gtk/ev_any_imp.xml</location>EV_ANY_IMP</class>
			<comment>--</comment><comment> Get Eiffel object from </comment><quoted>a_c_object</quoted><comment>.</comment>
		<keyword>external</keyword>
			&quot;C (GtkWidget*): EIF_REFERENCE | %&quot;ev_any_imp.h%&quot;&quot;
		<keyword>alias</keyword>
			&quot;c_ev_any_imp_get_eif_reference_from_object_id&quot;
		<keyword>end</keyword>
	
<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2013, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_gtk/ev_gtk_dependent_intermediary_routines.xml</location>EV_GTK_DEPENDENT_INTERMEDIARY_ROUTINES</class></system>

