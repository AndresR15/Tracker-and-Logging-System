<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Gtk version dependent routines&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>author</indexing_tag><symbol>:</symbol> <string>&quot;&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2011-06-24 11:34:20 -0700 (Fri, 24 Jun 2011) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 86788 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../implementation_gtk/ev_gtk_dependent_routines.xml</location>EV_GTK_DEPENDENT_ROUTINES</class>

<keyword>create</keyword> 
	<feature><include>False</include>default_create</feature>

<keyword>feature</keyword> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_add_g_type_string</anchor><keyword>frozen</keyword> <feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_add_g_type_string</location>add_g_type_string</feature> <symbol>(</symbol><local>an_array</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>;</symbol> <local>a_pos</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Add G_TYPE_STRING constant in </comment><quoted>an_array</quoted><comment> at </comment><quoted>a_pos</quoted><comment> bytes from beginning</comment>
			<comment>--</comment><comment> of </comment><quoted>an_array</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>an_array_not_null</tag><symbol>:</symbol> <local>an_array</local> <symbol>/=</symbol> <feature><include>False</include>default_pointer</feature>
			<tag>a_pos_nonnegative</tag><symbol>:</symbol> <local>a_pos</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>external</keyword>
			&quot;C inline use &lt;ev_gtk.h&gt;&quot;
		<keyword>alias</keyword>
			&quot;[
				{
					GType type = G_TYPE_STRING;
					memcpy ((char *) $an_array + $a_pos, &amp;type, sizeof(GType));
				}
			]<string>&quot;</string>
		<keyword>end</keyword>

	<anchor>f_add_gdk_type_pixbuf</anchor><keyword>frozen</keyword> <feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_add_gdk_type_pixbuf</location>add_gdk_type_pixbuf</feature> <symbol>(</symbol><local>an_array</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>;</symbol> <local>a_pos</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Add GDK_TYPE_PIXBUF constant in </comment><quoted>an_array</quoted><comment> at </comment><quoted>a_pos</quoted><comment> bytes from beginning</comment>
			<comment>--</comment><comment> of </comment><quoted>an_array</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>an_array_not_null</tag><symbol>:</symbol> <local>an_array</local> <symbol>/=</symbol> <feature><include>False</include>default_pointer</feature>
			<tag>a_pos_nonnegative</tag><symbol>:</symbol> <local>a_pos</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>external</keyword>
			&quot;C inline use &lt;ev_gtk.h&gt;&quot;
		<keyword>alias</keyword>
			&quot;[
				{
					GType type = GDK_TYPE_PIXBUF;
					memcpy ((char *) $an_array + $a_pos, &amp;type, sizeof(GType));
				}
			]<string>&quot;</string>
		<keyword>end</keyword>

	<anchor>f_sizeof_gtype</anchor><keyword>frozen</keyword> <feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_sizeof_gtype</location>sizeof_gtype</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Size of the </comment><quoted>GType</quoted><comment> C type</comment>
		<keyword>external</keyword>
			&quot;C inline use &lt;ev_gtk.h&gt;&quot;
		<keyword>alias</keyword>
			&quot;sizeof(GType)&quot;
		<keyword>end</keyword>

	<anchor>f_create_gtk_dialog</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_create_gtk_dialog</location>create_gtk_dialog</feature><symbol>:</symbol> <class><include>False</include>POINTER</class>
			<comment>--</comment><comment> Create and initialize a gtk dialog</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk.xml</location>GTK</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk.xml#f_gtk_window_new</location>gtk_window_new</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk.xml</location>GTK</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk.xml#f_gtk_window_toplevel_enum</location>gtk_window_toplevel_enum</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_client_area_from_c_object</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_client_area_from_c_object</location>client_area_from_c_object</feature> <symbol>(</symbol><local>a_c_object</local><symbol>:</symbol> <class><include>False</include>POINTER</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>POINTER</class>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <local>a_c_object</local>
		<keyword>end</keyword>

	<anchor>f_horizontal_resolution_internal</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_horizontal_resolution_internal</location>Horizontal_resolution_internal</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Number of pixels per inch along horizontal axis</comment>
		<keyword>once</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk.xml</location>GTK</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk.xml#f_gdk_screen_width</location>gdk_screen_width</feature> <symbol>/</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gdk_screen_get_width_mm</location>gdk_screen_get_width_mm</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gdk_screen_get_default</location>gdk_screen_get_default</feature><symbol>)</symbol> <symbol>*</symbol> <number>25.4</number><symbol>)</symbol><dot>.</dot><feature><include>False</include>rounded</feature>
		<keyword>end</keyword>

	<anchor>f_vertical_resolution_internal</anchor><feature><location>../implementation_gtk/ev_gtk_dependent_routines.xml#f_vertical_resolution_internal</location>Vertical_resolution_internal</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Number of pixels per inch along vertical axis</comment>
		<keyword>once</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk.xml</location>GTK</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk.xml#f_gdk_screen_height</location>gdk_screen_height</feature> <symbol>/</symbol> <symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gdk_screen_get_height_mm</location>gdk_screen_get_height_mm</feature> <symbol>(</symbol><symbol>{</symbol><class><location>../implementation_gtk/gtk2.xml</location>GTK2</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_gtk/gtk2.xml#f_gdk_screen_get_default</location>gdk_screen_get_default</feature><symbol>)</symbol> <symbol>*</symbol> <number>25.4</number><symbol>)</symbol><dot>.</dot><feature><include>False</include>rounded</feature>
		<keyword>end</keyword>
	
<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2006, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>356 Storke Road, Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_gtk/ev_gtk_dependent_routines.xml</location>EV_GTK_DEPENDENT_ROUTINES</class></system>

