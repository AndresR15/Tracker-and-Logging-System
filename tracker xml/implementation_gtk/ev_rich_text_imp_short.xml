<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Objects that ...&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>author</indexing_tag><symbol>:</symbol> <string>&quot;&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2016-09-27 08:50:48 -0700 (Tue, 27 Sep 2016) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 99192 $&quot;</string>

<keyword>class</keyword> <keyword>interface</keyword>
	<class><location>../implementation_gtk/ev_rich_text_imp_short.xml</location>EV_RICH_TEXT_IMP</class>

<keyword>create</keyword> 
	<feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_make</location>make</feature>

<keyword>feature</keyword> <comment>--</comment><comment> Status Report</comment>

	<anchor>f_format_paragraph</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_format_paragraph</location>format_paragraph</feature> <symbol>(</symbol><local>start_line</local><symbol>,</symbol> <local>end_line</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>format</local><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_short.xml</location>EV_PARAGRAPH_FORMAT</class><symbol>)</symbol>
			<comment>--</comment><comment>  Apply paragraph formatting </comment><quoted>format</quoted><comment> to lines </comment><quoted>start_line</quoted><comment>, </comment><quoted>end_line</quoted><comment> inclusive.</comment>

	<anchor>f_character_format_range_information</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_character_format_range_information</location>character_format_range_information</feature> <symbol>(</symbol><local>start_index</local><symbol>,</symbol> <local>end_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_character_format_range_information_short.xml</location>EV_CHARACTER_FORMAT_RANGE_INFORMATION</class>
			<comment>--</comment><comment> Formatting range information from caret position </comment><quoted>start_index</quoted><comment> to </comment><quoted>end_index</quoted><comment>.</comment>
			<comment>--</comment><comment> All attributes in </comment><quoted>Result</quoted><comment> are set to </comment><quoted>True</quoted><comment> if they remain consitent from </comment><quoted>start_index</quoted><comment> to</comment>
			<comment>--</comment><quoted>end_index</quoted><comment> and </comment><quoted>False</quoted><comment> otherwise.</comment>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is a snapshot of </comment><quoted>Current</quoted><comment>, and does not remain consistent as the contents</comment>
			<comment>--</comment><comment> are subsequently changed.</comment>

	<anchor>f_internal_character_format_range_information</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_character_format_range_information</location>internal_character_format_range_information</feature> <symbol>(</symbol><local>start_index</local><symbol>,</symbol> <local>end_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>abort_on_change</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>;</symbol> <local>change_index</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>INTEGER_32_REF</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_character_format_range_information_short.xml</location>EV_CHARACTER_FORMAT_RANGE_INFORMATION</class>
			<comment>--</comment><comment> Formatting range information from caret position </comment><quoted>start_index</quoted><comment> to </comment><quoted>end_index</quoted><comment>.</comment>
			<comment>--</comment><comment> All attributes in </comment><quoted>Result</quoted><comment> are set to </comment><quoted>True</quoted><comment> if they remain consistent from </comment><quoted>start_index</quoted><comment> to</comment>
			<comment>--</comment><quoted>end_index</quoted><comment> and </comment><quoted>False</quoted><comment> otherwise.</comment>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is a snapshot of </comment><quoted>Current</quoted><comment>, and does not remain consistent as the contents</comment>
			<comment>--</comment><comment> are subsequently changed.</comment>

	<anchor>f_paragraph_format_range_information</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_paragraph_format_range_information</location>paragraph_format_range_information</feature> <symbol>(</symbol><local>start_index</local><symbol>,</symbol> <local>end_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_range_information_short.xml</location>EV_PARAGRAPH_FORMAT_RANGE_INFORMATION</class>
			<comment>--</comment><comment> Formatting range information from caret position </comment><quoted>start_index</quoted><comment> to </comment><quoted>end_index</quoted><comment>.</comment>
			<comment>--</comment><comment> All attributes in </comment><quoted>Result</quoted><comment> are set to </comment><quoted>True</quoted><comment> if they remain consitent from </comment><quoted>start_index</quoted><comment> to</comment>
			<comment>--</comment><quoted>end_index</quoted><comment> and </comment><quoted>False</quoted><comment> otherwise.</comment>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is a snapshot of </comment><quoted>Current</quoted><comment>, and does not remain consistent as the contents</comment>
			<comment>--</comment><comment> are subsequently changed.</comment>

	<anchor>f_paragraph_format_contiguous</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_paragraph_format_contiguous</location>paragraph_format_contiguous</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is paragraph formatting from line </comment><quoted>start_position</quoted><comment> to </comment><quoted>end_position</quoted><comment> contiguous?</comment>
			<comment>--</comment><comment> Was declared in </comment><class><location>../implementation_gtk/ev_rich_text_imp_short.xml</location>EV_RICH_TEXT_IMP</class><comment> as synonym of </comment><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_paragraph_format_contiguous</location>internal_paragraph_format_contiguous</feature><comment>.</comment>

	<anchor>f_internal_paragraph_format_contiguous</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_paragraph_format_contiguous</location>internal_paragraph_format_contiguous</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is paragraph formatting from line </comment><quoted>start_position</quoted><comment> to </comment><quoted>end_position</quoted><comment> contiguous?</comment>
			<comment>--</comment><comment> Was declared in </comment><class><location>../implementation_gtk/ev_rich_text_imp_short.xml</location>EV_RICH_TEXT_IMP</class><comment> as synonym of </comment><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_paragraph_format_contiguous</location>paragraph_format_contiguous</feature><comment>.</comment>

	<anchor>f_character_format_contiguous</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_character_format_contiguous</location>character_format_contiguous</feature> <symbol>(</symbol><local>start_index</local><symbol>,</symbol> <local>end_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is formatting from caret position </comment><quoted>start_index</quoted><comment> to </comment><quoted>end_index</quoted><comment> contiguous?</comment>
			<comment>--</comment><comment> Internal version which permits optimizations as caret position and selection</comment>
			<comment>--</comment><comment> does not need to be restored.</comment>

	<anchor>f_internal_character_format_contiguous</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_character_format_contiguous</location>internal_character_format_contiguous</feature> <symbol>(</symbol><local>start_index</local><symbol>,</symbol> <local>end_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is formatting from caret position </comment><quoted>start_index</quoted><comment> to </comment><quoted>end_index</quoted><comment> contiguous?</comment>

	<anchor>f_selected_paragraph_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_selected_paragraph_format</location>selected_paragraph_format</feature><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_short.xml</location>EV_PARAGRAPH_FORMAT</class>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is paragraph format of current selection.</comment>
			<comment>--</comment><comment> If more than one format is contained in the selection, </comment><quoted>Result</quoted>
			<comment>--</comment><comment> is the first of these formats.</comment>

	<anchor>f_modify_region</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_modify_region</location>modify_region</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>format</local><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class><symbol>;</symbol> <local>applicable_attributes</local><symbol>:</symbol> <class><location>../interface/ev_character_format_range_information_short.xml</location>EV_CHARACTER_FORMAT_RANGE_INFORMATION</class><symbol>)</symbol>
			<comment>--</comment><comment> Modify formatting from </comment><quoted>start_position</quoted><comment> to </comment><quoted>end_position</quoted><comment> applying all attributes of </comment><quoted>format</quoted><comment> that are set to</comment>
			<comment>--</comment><comment> </comment><quoted>True</quoted><comment> within </comment><quoted>applicable_attributes</quoted><comment>, ignoring others.</comment>

	<anchor>f_modify_paragraph</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_modify_paragraph</location>modify_paragraph</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>format</local><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_short.xml</location>EV_PARAGRAPH_FORMAT</class><symbol>;</symbol> <local>applicable_attributes</local><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_range_information_short.xml</location>EV_PARAGRAPH_FORMAT_RANGE_INFORMATION</class><symbol>)</symbol>
			<comment>--</comment><comment> Modify paragraph formatting from caret positions </comment><quoted>start_position</quoted><comment> to </comment><quoted>end_position</quoted><comment> applying all attributes of </comment><quoted>format</quoted><comment> that are set to</comment>
			<comment>--</comment><comment> </comment><quoted>True</quoted><comment> within </comment><quoted>applicable_attributes</quoted><comment>, ignoring others.</comment>

	<anchor>f_paragraph_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_paragraph_format</location>paragraph_format</feature> <symbol>(</symbol><local>caret_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_short.xml</location>EV_PARAGRAPH_FORMAT</class>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is paragraph_format at caret position </comment><quoted>caret_index</quoted><comment>.</comment>
			<comment>--</comment><comment> Was declared in </comment><class><location>../implementation_gtk/ev_rich_text_imp_short.xml</location>EV_RICH_TEXT_IMP</class><comment> as synonym of </comment><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_paragraph_format</location>internal_paragraph_format</feature><comment>.</comment>

	<anchor>f_internal_paragraph_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_paragraph_format</location>internal_paragraph_format</feature> <symbol>(</symbol><local>caret_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_paragraph_format_short.xml</location>EV_PARAGRAPH_FORMAT</class>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is paragraph_format at caret position </comment><quoted>caret_index</quoted><comment>.</comment>
			<comment>--</comment><comment> Was declared in </comment><class><location>../implementation_gtk/ev_rich_text_imp_short.xml</location>EV_RICH_TEXT_IMP</class><comment> as synonym of </comment><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_paragraph_format</location>paragraph_format</feature><comment>.</comment>

	<anchor>f_selected_character_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_selected_character_format</location>selected_character_format</feature><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class>
			<comment>--</comment><comment> Format of the character which starts the selection</comment>

	<anchor>f_index_from_position</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_index_from_position</location>index_from_position</feature> <symbol>(</symbol><local>an_x_position</local><symbol>,</symbol> <local>a_y_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Index of character closest to position </comment><feature><location>../implementation_gtk/ev_widget_imp_short.xml#f_x_position</location>x_position</feature><comment>, </comment><feature><location>../implementation_gtk/ev_widget_imp_short.xml#f_y_position</location>y_position</feature><comment>.</comment>

	<anchor>f_position_from_index</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_position_from_index</location>position_from_index</feature> <symbol>(</symbol><local>an_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_coordinate_short.xml</location>EV_COORDINATE</class>
			<comment>--</comment><comment> Position of character at index </comment><quoted>an_index</quoted><comment>.</comment>

	<anchor>f_character_displayed</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_character_displayed</location>character_displayed</feature> <symbol>(</symbol><local>an_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is character </comment><quoted>an_index</quoted><comment> currently visible in </comment><quoted>Current</quoted><comment>?</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_character_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_character_format</location>character_format</feature> <symbol>(</symbol><local>pos</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is character format at position </comment><quoted>pos</quoted><comment>. On some platforms</comment>
			<comment>--</comment><comment> this may be optimized to take the selected character format and therefore</comment>
			<comment>--</comment><comment> should only be used by </comment><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_next_change_of_character</location>next_change_of_character</feature><comment>.</comment>

	<anchor>f_internal_character_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_internal_character_format</location>internal_character_format</feature> <symbol>(</symbol><local>character_index</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol><symbol>:</symbol> <class><location>../implementation_gtk/ev_character_format_imp_short.xml</location>EV_CHARACTER_FORMAT_IMP</class>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is character format of character </comment><quoted>character_index</quoted><comment>.</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status setting</comment>

	<anchor>f_set_current_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_set_current_format</location>set_current_format</feature> <symbol>(</symbol><local>format</local><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class><symbol>)</symbol>
			<comment>--</comment><comment> apply </comment><quoted>format</quoted><comment> to current caret position, applicable</comment>
			<comment>--</comment><comment> to next typed characters.</comment>

	<anchor>f_current_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_current_format</location>current_format</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class>
			<comment>--</comment><comment> Format to be applied to next typed characters</comment>

	<anchor>f_format_region</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_format_region</location>format_region</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>format</local><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class><symbol>)</symbol>
			<comment>--</comment><comment> Apply </comment><quoted>format</quoted><comment> to all characters between the caret positions </comment><quoted>start_position</quoted><comment> and </comment><quoted>end_position</quoted><comment>.</comment>
			<comment>--</comment><comment> Formatting is applied immediately. May or may not change the cursor position.</comment>

	<anchor>f_buffered_format</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_buffered_format</location>buffered_format</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>format</local><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class><symbol>)</symbol>
			<comment>--</comment><comment> Apply a character format </comment><quoted>format</quoted><comment> from caret positions </comment><quoted>start_position</quoted><comment> to </comment><quoted>end_position</quoted><comment> to</comment>
			<comment>--</comment><comment> format buffer. Call </comment><quoted>flush_format_buffer</quoted><comment> to apply buffered contents to </comment><quoted>Current</quoted><comment>.</comment>

	<anchor>f_buffered_append</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_buffered_append</location>buffered_append</feature> <symbol>(</symbol><local>a_text</local><symbol>:</symbol> <class><include>False</include>READABLE_STRING_GENERAL</class><symbol>;</symbol> <local>format</local><symbol>:</symbol> <class><location>../interface/ev_character_format_short.xml</location>EV_CHARACTER_FORMAT</class><symbol>)</symbol>
			<comment>--</comment><comment> Apply </comment><quoted>a_text</quoted><comment> with format </comment><quoted>format</quoted><comment> to append buffer.</comment>
			<comment>--</comment><comment> To apply buffer contents to </comment><quoted>Current</quoted><comment>, call </comment><quoted>flush_append_buffer</quoted><comment> or</comment>
			<comment>--</comment><comment> </comment><quoted>flush_append_buffer_to</quoted><comment>.</comment>

	<anchor>f_temp_start_iter</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_temp_start_iter</location>temp_start_iter</feature><symbol>:</symbol> <class><location>../implementation_gtk/ev_gtk_text_iter_struct_short.xml</location>EV_GTK_TEXT_ITER_STRUCT</class>
			<comment>--</comment><comment> Reusable GtkTextIter objects</comment>

	<anchor>f_temp_end_iter</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_temp_end_iter</location>temp_end_iter</feature><symbol>:</symbol> <class><location>../implementation_gtk/ev_gtk_text_iter_struct_short.xml</location>EV_GTK_TEXT_ITER_STRUCT</class>
			<comment>--</comment><comment> Reusable GtkTextIter objects</comment>

	<anchor>f_flush_buffer</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_flush_buffer</location>flush_buffer</feature>
			<comment>--</comment><comment> Flush contents of buffer.</comment>
			<comment>--</comment><comment> If </comment><quoted>buffer_locked_for_append</quoted><comment> then replace contents of </comment><quoted>Current</quoted><comment> with buffer contents.</comment>
			<comment>--</comment><comment> If </comment><quoted>buffer_locked_for_format</quoted><comment> then apply buffered formatting to contents of </comment><quoted>Current</quoted><comment>.</comment>

	<anchor>f_flush_buffer_to</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_flush_buffer_to</location>flush_buffer_to</feature> <symbol>(</symbol><local>start_position</local><symbol>,</symbol> <local>end_position</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Replace contents of current from caret position </comment><quoted>start_position</quoted><comment> to </comment><quoted>end_position</quoted><comment> with</comment>
			<comment>--</comment><comment> contents of buffer, since it was last flushed. If </comment><quoted>start_position</quoted><comment> and </comment><quoted>end_position</quoted>
			<comment>--</comment><comment> are equal, insert the contents of the buffer at caret position </comment><quoted>start_position</quoted><comment>.</comment>

	<anchor>f_set_tab_width</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_set_tab_width</location>set_tab_width</feature> <symbol>(</symbol><local>a_width</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>a_width</quoted><comment> to </comment><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_tab_width</location>tab_width</feature><comment>.</comment>

	<anchor>f_pango_tab_array</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_pango_tab_array</location>pango_tab_array</feature><symbol>:</symbol> <class><include>False</include>POINTER</class>
			<comment>--</comment><comment> Array of pango tabs used for </comment><quoted>Current</quoted>

	<anchor>f_tab_width</anchor><feature><location>../implementation_gtk/ev_rich_text_imp_short.xml#f_tab_width</location>tab_width</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Default width in pixels of each tab in </comment><quoted>Current</quoted><comment>.</comment>
	
<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2014, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_gtk/ev_rich_text_imp_short.xml</location>EV_RICH_TEXT_IMP</class></system>

