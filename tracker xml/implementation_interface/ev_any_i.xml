<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Base class for Eiffel Vision implementation interface. %NEiffel Vision uses the bridge pattern. See notes in ev_any.e) %NDescendents of this class are coupled to descendants of EV_ANY %N(the base class for the Eiffel Vision interface) which provide user %Naccess. When a class requires different implementation on different %Nplatforms descendents of this class have further descendants with %Nan _IMP suffix. %Neg. If button needs platform specific code then %N    - EV_BUTTON is the user interface, (descendant of EV_ANY) %N    - EV_BUTTON_I is the implementation interface, %N      (descendant of EV_ANY_I) %N    - EV_BUTTON_IMP is the native implementation. %N      It is implemented once for each platform, the actual class %N      included in a system at %N      compile time is determined by the Ace file.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;FIXME&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2017-05-03 08:56:14 -0700 (Wed, 03 May 2017) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 100317 $&quot;</string>

<keyword>deferred</keyword> <keyword>class</keyword> 
	<class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class>

<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Initialization</comment>

	<anchor>f_assign_interface</anchor><keyword>frozen</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_assign_interface</location>assign_interface</feature> <symbol>(</symbol><local>an_interface</local><symbol>:</symbol> <keyword>attached</keyword> <keyword>like</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_interface</quoted><comment> to </comment><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature>
		<keyword>require</keyword>
			<tag>an_interface_not_void</tag><symbol>:</symbol> <local>an_interface</local> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>not_already_called</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature> <symbol>=</symbol> <keyword>False</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called_flag</location>Base_make_called_flag</feature><symbol>,</symbol> <keyword>True</keyword><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>:=</symbol> <local>an_interface</local>
		<keyword>ensure</keyword>
			<tag>interface_assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>=</symbol> <local>an_interface</local>
			<tag>called_flag_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature> <symbol>=</symbol> <keyword>True</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol> <comment>--</comment><comment> Initialization</comment>

	<anchor>f_old_make</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_old_make</location>old_make</feature> <symbol>(</symbol><local>an_interface</local><symbol>:</symbol> <keyword>attached</keyword> <keyword>like</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><symbol>)</symbol>
		<keyword>obsolete</keyword> &quot;Should no longer be used [2017-05-31]&quot;
			<comment>--</comment><comment> Create underlying native toolkit objects.</comment>
			<comment>--</comment><comment> Every descendant should exactly one a creation procedure </comment><feature><location>../implementation_interface/ev_any_i.xml#f_make</location>make</feature><comment>.</comment>
			<comment>--</comment><comment> Must call </comment><quoted>base_make</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>an_interface_not_void</tag><symbol>:</symbol> <local>an_interface</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>interface_assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>=</symbol> <local>an_interface</local>
			<tag>base_make_called</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature>
		<keyword>end</keyword>

	<anchor>f_make</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_make</location>make</feature>
			<comment>--</comment><comment> Creation routine and initialization for </comment><quoted>Current</quoted><comment>.</comment>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>is_initialized</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_safe_destroy</anchor><keyword>frozen</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_safe_destroy</location>safe_destroy</feature>
			<comment>--</comment><comment> Protection against multiple calls of destroy whilst in the process of destruction</comment>
			<comment>--</comment><comment> Called directly from </comment><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><comment>.destroy</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_set_is_in_destroy</location>set_is_in_destroy</feature><symbol> </symbol><symbol>(</symbol><keyword>True</keyword><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_any_i.xml#f_destroy</location>destroy</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_destroy</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_destroy</location>destroy</feature>
			<comment>--</comment><comment> Destroy underlying native toolkit objects.</comment>
			<comment>--</comment><comment> Render </comment><quoted>Current</quoted><comment> unusable.</comment>
			<comment>--</comment><comment> Any feature calls after a call to destroy are</comment>
			<comment>--</comment><comment> invalid.</comment>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>is_in_destroy_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature>
			<tag>is_destroyed_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_is_destroyed</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> no longer usable?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed_flag</location>Is_destroyed_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_attached_interface</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><symbol>:</symbol> <keyword>attached</keyword> <keyword>like</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature>
			<comment>--</comment><comment> Attached version of </comment><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>interface_attached</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature>
			<keyword>else</keyword>
				<keyword>check</keyword>
						<keyword>False</keyword>
				<keyword>then</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_interface</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_any.xml</location>EV_ANY</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>

	<anchor>f_state_flags</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_state_flags</location>state_flags</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class>
			<comment>--</comment><comment> Flags used to hold state of </comment><feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature><comment>, </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized</location>is_initialized</feature><comment>, </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature><comment> and </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature><comment>.</comment>
			<comment>--</comment><comment> By storing them in a single INTEGER_8, space is saved.</comment>
			<comment>--</comment><comment> bit_test (0) returns </comment><feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature><comment>.</comment>
			<comment>--</comment><comment> bit_test (1) returns </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized</location>is_initialized</feature><comment>.</comment>
			<comment>--</comment><comment> bit_test (2) returns </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature><comment>.</comment>
			<comment>--</comment><comment> bit_test (3) returns </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature><comment>.</comment>
			<comment>--</comment><comment> bit_test (4) returns </comment><quoted>interface.default_create_called</quoted>
			<comment>--</comment><comment> bit_test (5) returns </comment><quoted>interface.is_initialized</quoted>

	<anchor>f_base_make_called_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called_flag</location>Base_make_called_flag</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class> <symbol>=</symbol> <number>0</number>

	<anchor>f_is_initialized_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class> <symbol>=</symbol> <number>1</number>

	<anchor>f_is_destroyed_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed_flag</location>Is_destroyed_flag</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class> <symbol>=</symbol> <number>2</number>

	<anchor>f_is_in_destroy_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy_flag</location>Is_in_destroy_flag</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class> <symbol>=</symbol> <number>3</number>

	<anchor>f_interface_default_create_called_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_interface_default_create_called_flag</location>Interface_default_create_called_flag</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class> <symbol>=</symbol> <number>4</number>

	<anchor>f_interface_is_initialized_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_interface_is_initialized_flag</location>Interface_is_initialized_flag</feature><symbol>:</symbol> <class><include>False</include>INTEGER_8</class> <symbol>=</symbol> <number>5</number>
			<comment>--</comment><comment> Flag positions used for setting state of </comment><quoted>Current</quoted><comment> and </comment><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><comment>.</comment>

	<anchor>f_set_state_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature> <symbol>(</symbol><local>a_flag</local><symbol>:</symbol> <class><include>False</include>INTEGER_8</class><symbol>;</symbol> <local>a_value</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Set state flag </comment><quoted>a_flag</quoted><comment> to </comment><quoted>a_value</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>a_flag_valid</tag><symbol>:</symbol> <local>a_flag</local> <symbol>&gt;=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called_flag</location>Base_make_called_flag</feature> <keyword>and then</keyword> <local>a_flag</local> <symbol>&lt;=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface_is_initialized_flag</location>Interface_is_initialized_flag</feature>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_state_flags</location>state_flags</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_state_flags</location>state_flags</feature><dot>.</dot><feature><include>False</include>set_bit</feature><symbol> </symbol><symbol>(</symbol><local>a_value</local><symbol>,</symbol> <local>a_flag</local><dot>.</dot><feature><include>False</include>to_integer_32</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_get_state_flag</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature> <symbol>(</symbol><local>a_flag</local><symbol>:</symbol> <class><include>False</include>INTEGER_8</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Get state flag value for </comment><quoted>a_flag</quoted><comment> flag position.</comment>
		<keyword>require</keyword>
			<tag>a_flag_valid</tag><symbol>:</symbol> <local>a_flag</local> <symbol>&gt;=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called_flag</location>Base_make_called_flag</feature> <keyword>and then</keyword> <local>a_flag</local> <symbol>&lt;=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface_is_initialized_flag</location>Interface_is_initialized_flag</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_state_flags</location>state_flags</feature><dot>.</dot><feature><include>False</include>bit_test</feature><symbol> </symbol><symbol>(</symbol><local>a_flag</local><dot>.</dot><feature><include>False</include>to_integer_32</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_base_make_called</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Was </comment><quoted>base_make</quoted><comment> called?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called_flag</location>Base_make_called_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_is_initialized</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized</location>is_initialized</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Has </comment><quoted>Current</quoted><comment> been initialized properly?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_is_in_destroy</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> in the process of being destroyed?</comment>
			<comment>--</comment><comment> Needed for call protection when in the process of </comment><feature><location>../implementation_interface/ev_any_i.xml#f_destroy</location>destroy</feature><comment> to prevent multiple calls as a result of destruction.</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy_flag</location>Is_in_destroy_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_set_is_initialized</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_set_is_initialized</location>set_is_initialized</feature> <symbol>(</symbol><local>flag</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized</location>is_initialized</feature><comment> to </comment><quoted>flag</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>,</symbol> <local>flag</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>is_initialized_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>)</symbol> <symbol>=</symbol> <local>flag</local>
		<keyword>end</keyword>

	<anchor>f_set_is_destroyed</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_set_is_destroyed</location>set_is_destroyed</feature> <symbol>(</symbol><local>flag</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature><comment> to </comment><quoted>flag</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed_flag</location>Is_destroyed_flag</feature><symbol>,</symbol> <local>flag</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>is_destroyed_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <symbol>=</symbol> <local>flag</local>
		<keyword>end</keyword>

	<anchor>f_set_is_in_destroy</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_set_is_in_destroy</location>set_is_in_destroy</feature> <symbol>(</symbol><local>flag</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature><comment> to </comment><quoted>flag</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy_flag</location>Is_in_destroy_flag</feature><symbol>,</symbol> <local>flag</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>is_in_destroy_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_is_in_destroy</location>is_in_destroy</feature> <symbol>=</symbol> <local>flag</local>
		<keyword>end</keyword>

	<anchor>f_set_interface</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_set_interface</location>set_interface</feature> <symbol>(</symbol><local>an_interface</local><symbol>:</symbol> <keyword>attached</keyword> <keyword>like</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_interface</quoted><comment> to </comment><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><comment>.</comment>
			<comment>--</comment><comment> Should only ever be called by </comment><symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_any.xml#f_replace_implementation</location>replace_implementation</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>check</keyword>
				<tag>called_by_replace_implementation_only</tag><symbol>:</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>:=</symbol> <local>an_interface</local>
		<keyword>ensure</keyword>
			<tag>interface_assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>=</symbol> <local>an_interface</local>
		<keyword>end</keyword>

	<anchor>f_enable_initialized</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_enable_initialized</location>enable_initialized</feature>
			<comment>--</comment><comment> Set the implementation to be initialized</comment>
			<comment>--</comment><comment> Should only ever be called by </comment><symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_any.xml#f_replace_implementation</location>replace_implementation</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>check</keyword>
				<tag>called_by_replace_implementation_only</tag><symbol>:</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_is_initialized</location>set_is_initialized</feature><symbol> </symbol><symbol>(</symbol><keyword>True</keyword><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>is_initialized</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_disable_initialized</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_disable_initialized</location>disable_initialized</feature>
			<comment>--</comment><comment> Set the implementation to be un-initialized</comment>
			<comment>--</comment><comment> Should only ever be called by </comment><symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_any.xml#f_replace_implementation</location>replace_implementation</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>check</keyword>
				<tag>called_by_replace_implementation_only</tag><symbol>:</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_is_initialized</location>set_is_initialized</feature><symbol> </symbol><symbol>(</symbol><keyword>False</keyword><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>not_is_initialized</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Contract support</comment>

	<anchor>f_is_usable</anchor><feature><location>../implementation_interface/ev_any_i.xml#f_is_usable</location>is_usable</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> usable?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_any_i.xml#f_is_initialized_flag</location>Is_initialized_flag</feature><symbol>)</symbol> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>end</keyword>
	
<keyword>invariant</keyword>
	<tag>interface_coupled</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_is_usable</location>is_usable</feature> <keyword>implies</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature> <symbol>=</symbol> <keyword>Current</keyword>
	<tag>base_make_called</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_is_usable</location>is_usable</feature> <keyword>implies</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_base_make_called</location>base_make_called</feature>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2017, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class></system>

