<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Vision application. Implementation interface.%NSee ev_application.e&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;application&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2017-03-27 10:23:22 -0700 (Mon, 27 Mar 2017) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 100056 $&quot;</string>

<keyword>deferred</keyword> <keyword>class</keyword> 
	<class><location>../implementation_interface/ev_application_i.xml</location>EV_APPLICATION_I</class>

<keyword>inherit</keyword>
	<class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class>
		<keyword>export</keyword>
			<symbol>{</symbol><class><include>False</include>ANY</class><symbol>}</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature>
		<keyword>redefine</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_interface</location>interface</feature>
		<keyword>end</keyword>

	<class><location>../implementation_interface/ev_application_action_sequences_i.xml</location>EV_APPLICATION_ACTION_SEQUENCES_I</class>

	<class><include>False</include>EXCEPTIONS</class>

	<class><include>False</include>MEMORY</class>

<keyword>feature</keyword> <comment>--</comment><comment> Initialization</comment>

	<anchor>f_old_make</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_old_make</location>old_make</feature> <symbol>(</symbol><local>an_interface</local><symbol>:</symbol> <keyword>attached</keyword> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_interface</location>interface</feature><symbol>)</symbol>
			<comment>--</comment><comment> Create underlying native toolkit objects.</comment>
			<comment>--</comment><comment> Every descendant should exactly one a creation procedure </comment><feature><location>../implementation_interface/ev_application_i.xml#f_make</location>make</feature><comment>.</comment>
			<comment>--</comment><comment> Must call </comment><quoted>base_make</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_any_i.xml#f_assign_interface</location>assign_interface</feature><symbol> </symbol><symbol>(</symbol><local>an_interface</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_make</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_make</location>make</feature>
			<comment>--</comment><comment> Create pick and drop target list.</comment>
			<comment>--</comment><comment> Set F1 as default help key.</comment>
			<comment>--</comment><comment> Create default help engine.</comment>
		<keyword>local</keyword>
			<local>f1_key</local><symbol>:</symbol> <class><location>../interface/ev_key.xml</location>EV_KEY</class>
		<keyword>do</keyword>
			<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>25</number><symbol>)</symbol>
			<keyword>if</keyword> <symbol>{</symbol><class><include>False</include>PLATFORM</class><symbol>}</symbol><dot>.</dot><feature><include>False</include>is_thread_capable</feature> <keyword>then</keyword>
				<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature><dot>.</dot><feature><include>False</include>make</feature>
				<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature><dot>.</dot><feature><include>False</include>make</feature>
			<keyword>end</keyword>
			<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>8</number><symbol>)</symbol>
			<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_dockable_targets</location>dockable_targets</feature><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>8</number><symbol>)</symbol>
			<keyword>create</keyword> <symbol>{</symbol><class><location>../interface/ev_simple_help_engine.xml</location>EV_SIMPLE_HELP_ENGINE</class><symbol>}</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature>
			<keyword>create</keyword> <local>f1_key</local><dot>.</dot><feature><location>../interface/ev_key.xml#f_make_with_code</location>make_with_code</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../interface/ev_key_constants.xml</location>EV_KEY_CONSTANTS</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_key_constants.xml#f_key_f1</location>key_f1</feature><symbol>)</symbol>
			<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_make_with_key_combination</location>make_with_key_combination</feature><symbol> </symbol><symbol>(</symbol><local>f1_key</local><symbol>,</symbol> <keyword>False</keyword><symbol>,</symbol> <keyword>False</keyword><symbol>,</symbol> <keyword>False</keyword><symbol>)</symbol>
			<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_make_with_key_combination</location>make_with_key_combination</feature><symbol> </symbol><symbol>(</symbol><local>f1_key</local><symbol>,</symbol> <keyword>False</keyword><symbol>,</symbol> <keyword>False</keyword><symbol>,</symbol> <keyword>True</keyword><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature> <symbol>:=</symbol> <keyword>agent</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_help_handler</location>help_handler</feature>
			<feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature> <symbol>:=</symbol> <keyword>agent</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_enable_contextual_help</location>enable_contextual_help</feature>
			<feature><location>../implementation_interface/ev_application_i.xml#f_set_help_accelerator</location>set_help_accelerator</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_i.xml#f_set_contextual_help_accelerator</location>set_contextual_help_accelerator</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_i.xml#f_is_gui_thread_cell</location>Is_gui_thread_cell</feature><dot>.</dot><feature><include>False</include>put</feature><symbol> </symbol><symbol>(</symbol><keyword>True</keyword><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>:=</symbol> <number>1</number>
			<feature><location>../implementation_interface/ev_application_i.xml#f_set_invoke_garbage_collection_when_inactive</location>set_invoke_garbage_collection_when_inactive</feature><symbol> </symbol><symbol>(</symbol><keyword>True</keyword><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_any_i.xml#f_set_is_initialized</location>set_is_initialized</feature><symbol> </symbol><symbol>(</symbol><keyword>True</keyword><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_cpu_relinquishment_time</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_cpu_relinquishment_time</location>Cpu_relinquishment_time</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class> <symbol>=</symbol> <number>20</number>
			<comment>--</comment><comment> Number of milliseconds to relinquish CPU when idling.</comment>

	<anchor>f_idle_iteration_count</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature><symbol>:</symbol> <class><include>False</include>NATURAL_32</class>
			<comment>--</comment><comment> Number of iterations that the application has been idle.</comment>

	<anchor>f_idle_iteration_boundary</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_boundary</location>Idle_iteration_boundary</feature><symbol>:</symbol> <class><include>False</include>NATURAL_32</class> <symbol>=</symbol> <number>1500</number>
			<comment>--</comment><comment> Number of iterations before forcing Garbage Collector to kick in.</comment>
			<comment>--</comment><comment> 30 Seconds = 30 * 1000 / sleep time</comment>

	<anchor>f_idle_actions_snapshot</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>SPECIAL</class> <symbol>[</symbol><class><include>False</include>PROCEDURE</class><symbol>]</symbol>
			<comment>--</comment><comment> Idle actions snapshot used for temporarily storing a copy of </comment><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature><comment> during its iteration.</comment>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>

	<anchor>f_kamikaze_idle_actions_snapshot</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>SPECIAL</class> <symbol>[</symbol><keyword>separate</keyword> <class><include>False</include>PROCEDURE</class><symbol>]</symbol>
			<comment>--</comment><comment> Kamikaze Idle actions snapshot used for temporarily storing a copy of </comment><quoted>kamikaze_idle_actions</quoted><comment> during its iteration.</comment>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_application.xml</location>EV_APPLICATION</class><symbol>,</symbol> <class><location>../interface/ev_any_handler.xml</location>EV_ANY_HANDLER</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_process_event_queue</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_process_event_queue</location>process_event_queue</feature> <symbol>(</symbol><local>a_relinquish_cpu</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Process all posted events on the event queue.</comment>
			<comment>--</comment><comment> CPU will be relinquished if </comment><quoted>a_relinquish_cpu</quoted><comment> and idle actions are successfully executed.</comment>
		<keyword>local</keyword>
			<local>l_idle_actions_internal</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions_internal</location>idle_actions_internal</feature>
			<local>l_idle_is_locked</local><symbol>,</symbol> <local>l_kamikaze_is_locked</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<local>l_retry_count</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<local>l_idle_actions_snapshot</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>SPECIAL</class> <symbol>[</symbol><class><include>False</include>PROCEDURE</class><symbol>]</symbol>
			<local>l_kamikaze_idle_actions_snapshot</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>SPECIAL</class> <symbol>[</symbol><keyword>separate</keyword> <class><include>False</include>PROCEDURE</class><symbol>]</symbol>
			<local>i</local><symbol>,</symbol> <local>l_count</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
		<keyword>do</keyword>
			<keyword>if</keyword> <local>l_retry_count</local> <symbol>=</symbol> <number>0</number> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_process_underlying_toolkit_event_queue</location>process_underlying_toolkit_event_queue</feature>
				<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_user_events_processed_from_underlying_toolkit</location>user_events_processed_from_underlying_toolkit</feature> <keyword>then</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>:=</symbol> <number>1</number>
				<keyword>elseif</keyword> <local>a_relinquish_cpu</local> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_events_processed_from_underlying_toolkit</location>events_processed_from_underlying_toolkit</feature> <keyword>then</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>+</symbol> <number>1</number>
					<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_boundary</location>Idle_iteration_boundary</feature> <keyword>then</keyword>
						<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_invoke_garbage_collection_when_inactive</location>invoke_garbage_collection_when_inactive</feature> <keyword>then</keyword>
							<feature><include>False</include>full_collect</feature>
							<feature><include>False</include>full_coalesce</feature>
						<keyword>end</keyword>
						<feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>:=</symbol> <number>1</number>
					<keyword>end</keyword>
				<keyword>else</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_idle_iteration_count</location>idle_iteration_count</feature> <symbol>:=</symbol> <number>1</number>
				<keyword>end</keyword>
				<local>l_idle_actions_internal</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions_internal</location>idle_actions_internal</feature>
				<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <local>l_idle_actions_internal</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_events_processed_from_underlying_toolkit</location>events_processed_from_underlying_toolkit</feature> <keyword>then</keyword>
					<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_try_kamikaze_lock</location>try_kamikaze_lock</feature> <keyword>then</keyword>
						<local>l_kamikaze_is_locked</local> <symbol>:=</symbol> <keyword>True</keyword>
						<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
							<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>count</feature> <symbol>&gt;</symbol> <number>0</number> <keyword>then</keyword>
								<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>area</feature><dot>.</dot><feature><include>False</include>twin</feature>
								<local>l_kamikaze_idle_actions_snapshot</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature>
							<keyword>end</keyword>
						<keyword>else</keyword>
							<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_executing</location>idle_actions_executing</feature> <keyword>and</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>count</feature> <symbol>&gt;</symbol> <number>0</number> <keyword>then</keyword>
								<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>resized_area</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>count</feature><symbol>)</symbol>
							<keyword>else</keyword>
								<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>aliased_resized_area</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>count</feature><symbol>)</symbol>
							<keyword>end</keyword>
							<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>copy_data</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>area</feature><symbol>,</symbol> <number>0</number><symbol>,</symbol> <number>0</number><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>count</feature><symbol>)</symbol>
							<local>l_kamikaze_idle_actions_snapshot</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_idle_actions_snapshot</location>kamikaze_idle_actions_snapshot</feature>
						<keyword>end</keyword>
						<keyword>if</keyword> <local>l_kamikaze_idle_actions_snapshot</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
							<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>wipe_out</feature>
						<keyword>end</keyword>
						<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_unlock</location>kamikaze_unlock</feature>
						<local>l_kamikaze_is_locked</local> <symbol>:=</symbol> <keyword>False</keyword>
					<keyword>end</keyword>
					<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_try_idle_lock</location>try_idle_lock</feature> <keyword>then</keyword>
						<local>l_idle_is_locked</local> <symbol>:=</symbol> <keyword>True</keyword>
						<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
							<keyword>if</keyword> <local>l_idle_actions_internal</local><dot>.</dot><feature><include>False</include>count</feature> <symbol>&gt;</symbol> <number>0</number> <keyword>then</keyword>
								<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature> <symbol>:=</symbol> <local>l_idle_actions_internal</local><dot>.</dot><feature><include>False</include>area</feature><dot>.</dot><feature><include>False</include>twin</feature>
								<local>l_idle_actions_snapshot</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature>
							<keyword>end</keyword>
						<keyword>else</keyword>
							<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_executing</location>idle_actions_executing</feature> <keyword>and</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>count</feature> <symbol>&gt;</symbol> <number>0</number> <keyword>then</keyword>
								<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>resized_area</feature><symbol> </symbol><symbol>(</symbol><local>l_idle_actions_internal</local><dot>.</dot><feature><include>False</include>count</feature><symbol>)</symbol>
							<keyword>else</keyword>
								<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>aliased_resized_area</feature><symbol> </symbol><symbol>(</symbol><local>l_idle_actions_internal</local><dot>.</dot><feature><include>False</include>count</feature><symbol>)</symbol>
							<keyword>end</keyword>
							<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature><dot>.</dot><feature><include>False</include>copy_data</feature><symbol> </symbol><symbol>(</symbol><local>l_idle_actions_internal</local><dot>.</dot><feature><include>False</include>area</feature><symbol>,</symbol> <number>0</number><symbol>,</symbol> <number>0</number><symbol>,</symbol> <local>l_idle_actions_internal</local><dot>.</dot><feature><include>False</include>count</feature><symbol>)</symbol>
							<local>l_idle_actions_snapshot</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_snapshot</location>idle_actions_snapshot</feature>
						<keyword>end</keyword>
						<feature><location>../implementation_interface/ev_application_i.xml#f_idle_unlock</location>idle_unlock</feature>
						<local>l_idle_is_locked</local> <symbol>:=</symbol> <keyword>False</keyword>
					<keyword>end</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_executing</location>idle_actions_executing</feature> <symbol>:=</symbol> <keyword>True</keyword>
					<keyword>if</keyword> <local>l_kamikaze_idle_actions_snapshot</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
						<keyword>from</keyword>
							<local>i</local> <symbol>:=</symbol> <number>0</number>
							<local>l_count</local> <symbol>:=</symbol> <local>l_kamikaze_idle_actions_snapshot</local><dot>.</dot><feature><include>False</include>count</feature>
						<keyword>until</keyword>
							<local>i</local> <symbol>=</symbol> <local>l_count</local> <keyword>or else</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
						<keyword>loop</keyword>
							<feature><location>../implementation_interface/ev_application_i.xml#f_call_separate_action</location>call_separate_action</feature><symbol> </symbol><symbol>(</symbol><local>l_kamikaze_idle_actions_snapshot</local> <symbol>[</symbol><local>i</local><symbol>]</symbol><symbol>)</symbol>
							<local>i</local> <symbol>:=</symbol> <local>i</local> <symbol>+</symbol> <number>1</number>
						<keyword>end</keyword>
						<local>l_kamikaze_idle_actions_snapshot</local><dot>.</dot><feature><include>False</include>wipe_out</feature>
					<keyword>end</keyword>
					<keyword>if</keyword> <local>l_idle_actions_snapshot</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
						<keyword>from</keyword>
							<local>l_count</local> <symbol>:=</symbol> <local>l_idle_actions_snapshot</local><dot>.</dot><feature><include>False</include>count</feature>
							<local>i</local> <symbol>:=</symbol> <number>0</number>
						<keyword>until</keyword>
							<local>i</local> <symbol>=</symbol> <local>l_count</local> <keyword>or else</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
						<keyword>loop</keyword>
							<local>l_idle_actions_snapshot</local> <symbol>[</symbol><local>i</local><symbol>]</symbol><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
							<local>i</local> <symbol>:=</symbol> <local>i</local> <symbol>+</symbol> <number>1</number>
						<keyword>end</keyword>
						<local>l_idle_actions_snapshot</local><dot>.</dot><feature><include>False</include>wipe_out</feature>
					<keyword>end</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_executing</location>idle_actions_executing</feature> <symbol>:=</symbol> <keyword>False</keyword>
					<keyword>if</keyword> <local>a_relinquish_cpu</local> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>then</keyword>
						<feature><location>../implementation_interface/ev_application_i.xml#f_process_underlying_toolkit_event_queue</location>process_underlying_toolkit_event_queue</feature>
						<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_events_processed_from_underlying_toolkit</location>events_processed_from_underlying_toolkit</feature> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>count</feature> <symbol>=</symbol> <number>0</number> <keyword>then</keyword>
							<feature><location>../implementation_interface/ev_application_i.xml#f_wait_for_input</location>wait_for_input</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_cpu_relinquishment_time</location>Cpu_relinquishment_time</feature><symbol>)</symbol>
						<keyword>end</keyword>
					<keyword>end</keyword>
				<keyword>end</keyword>
			<keyword>else</keyword>
				<keyword>if</keyword> <local>l_retry_count</local> <symbol>=</symbol> <number>1</number> <keyword>then</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_on_exception_action</location>on_exception_action</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_new_exception</location>new_exception</feature><symbol>)</symbol>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>rescue</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_executing</location>idle_actions_executing</feature> <symbol>:=</symbol> <keyword>False</keyword>
			<keyword>if</keyword> <local>l_kamikaze_is_locked</local> <keyword>then</keyword>
				<local>l_kamikaze_is_locked</local> <symbol>:=</symbol> <keyword>False</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_unlock</location>kamikaze_unlock</feature>
			<keyword>end</keyword>
			<keyword>if</keyword> <local>l_idle_is_locked</local> <keyword>then</keyword>
				<local>l_idle_is_locked</local> <symbol>:=</symbol> <keyword>False</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_idle_unlock</location>idle_unlock</feature>
			<keyword>end</keyword>
			<keyword>if</keyword> <local>l_retry_count</local> <symbol>=</symbol> <number>0</number> <keyword>then</keyword>
				<local>l_retry_count</local> <symbol>:=</symbol> <local>l_retry_count</local> <symbol>+</symbol> <number>1</number>
				<keyword>retry</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_idle_actions_executing</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_actions_executing</location>idle_actions_executing</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Are the idle actions currently being executed?</comment>
			<comment>--</comment><comment> We need this flag to prevent recursive calls to idle actions from the GUI thread.</comment>

	<anchor>f_call_separate_action</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_call_separate_action</location>call_separate_action</feature> <symbol>(</symbol><local>a_action</local><symbol>:</symbol> <keyword>separate</keyword> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Execute </comment><quoted>call</quoted><comment> on 'a_action'.</comment>
		<keyword>do</keyword>
			<local>a_action</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_process_underlying_toolkit_event_queue</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_process_underlying_toolkit_event_queue</location>process_underlying_toolkit_event_queue</feature>
			<comment>--</comment><comment> Process event queue from underlying toolkit.</comment>
			<comment>--</comment><comment> `events_process_from_toolkit</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_events_processed_from_underlying_toolkit</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_events_processed_from_underlying_toolkit</location>events_processed_from_underlying_toolkit</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Were any events processed in previous call to </comment><feature><location>../implementation_interface/ev_application_i.xml#f_process_underlying_toolkit_event_queue</location>process_underlying_toolkit_event_queue</feature><comment>?</comment>

	<anchor>f_user_events_processed_from_underlying_toolkit</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_user_events_processed_from_underlying_toolkit</location>user_events_processed_from_underlying_toolkit</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Were user generated events processed in previous call to </comment><feature><location>../implementation_interface/ev_application_i.xml#f_process_underlying_toolkit_event_queue</location>process_underlying_toolkit_event_queue</feature><comment>?</comment>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_dockable_source_i.xml</location>EV_DOCKABLE_SOURCE_I</class><symbol>,</symbol> <class><location>../implementation_interface/ev_dockable_target_i.xml</location>EV_DOCKABLE_TARGET_I</class><symbol>,</symbol> <class><location>../implementation_interface/ev_shared_transport_i.xml</location>EV_SHARED_TRANSPORT_I</class><symbol>}</symbol> <comment>--</comment><comment> Access</comment>

	<anchor>f_dockable_targets</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_dockable_targets</location>dockable_targets</feature><symbol>:</symbol> <class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><include>False</include>INTEGER_32</class><symbol>]</symbol>
	
<keyword>feature</keyword> <comment>--</comment><comment> Access</comment>

	<anchor>f_invoke_garbage_collection_when_inactive</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_invoke_garbage_collection_when_inactive</location>invoke_garbage_collection_when_inactive</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Should garbage collection be invoked when application is inactive.</comment>

	<anchor>f_pnd_targets</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><symbol>:</symbol> <class><include>False</include>HASH_TABLE</class> <symbol>[</symbol><class><include>False</include>INTEGER_32</class><symbol>,</symbol> <class><include>False</include>INTEGER_32</class><symbol>]</symbol>
			<comment>--</comment><comment> Global list of pick and drop target object ids.</comment>

	<anchor>f_windows</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_windows</location>windows</feature><symbol>:</symbol> <class><include>False</include>LINEAR</class> <symbol>[</symbol><class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>]</symbol>
			<comment>--</comment><comment> Global list of windows.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_locked_window</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_locked_window</location>locked_window</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class>
			<comment>--</comment><comment> Window currently locked. Void if no window</comment>
			<comment>--</comment><comment> is currently locked.</comment>
			<comment>--</comment>
			<comment>--</comment><comment> See </comment><quoted>{EV_WINDOW}.lock_update</quoted><comment> for more details</comment>

	<anchor>f_captured_widget</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
			<comment>--</comment><comment> Widget currently captured. Void if none.</comment>

	<anchor>f_pick_and_drop_source</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_pick_and_drop_source</location>pick_and_drop_source</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../implementation_interface/ev_pick_and_dropable_i.xml</location>EV_PICK_AND_DROPABLE_I</class>
			<comment>--</comment><comment> The current pick and drop source.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_help_accelerator</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class>
			<comment>--</comment><comment> Accelerator that displays contextual help</comment>

	<anchor>f_contextual_help_accelerator</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class>
			<comment>--</comment><comment> Accelerator that enables contextual help mode</comment>

	<anchor>f_help_engine</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature><symbol>:</symbol> <class><location>../interface/ev_help_engine.xml</location>EV_HELP_ENGINE</class>
			<comment>--</comment><comment> Object that handle contextual help display requests</comment>

	<anchor>f_clipboard</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_clipboard</location>clipboard</feature><symbol>:</symbol> <class><location>../interface/ev_clipboard.xml</location>EV_CLIPBOARD</class>
			<comment>--</comment><comment> Native platform clipboard access.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_clipboard_internal</location>clipboard_internal</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>create</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_clipboard_internal</location>clipboard_internal</feature>
			<keyword>end</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_clipboard_internal</location>clipboard_internal</feature>
		<keyword>end</keyword>

	<anchor>f_ctrl_pressed</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_ctrl_pressed</location>ctrl_pressed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is ctrl key currently pressed?</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_shift_pressed</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_shift_pressed</location>shift_pressed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is shift key currently pressed?</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_alt_pressed</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_alt_pressed</location>alt_pressed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is alt key currently pressed?</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_caps_lock_on</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_caps_lock_on</location>caps_lock_on</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is the Caps Lock key currently on?</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_transport_in_progress</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_transport_in_progress</location>transport_in_progress</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is a Pick and Drop transport currently in progress?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pick_and_drop_source</location>pick_and_drop_source</feature> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>end</keyword>

	<anchor>f_is_display_remote</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_is_display_remote</location>is_display_remote</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is application display remote?</comment>
			<comment>--</comment><comment> This function is primarily to determine if drawing to the display is optimal.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Element Change</comment>

	<anchor>f_set_invoke_garbage_collection_when_inactive</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_invoke_garbage_collection_when_inactive</location>set_invoke_garbage_collection_when_inactive</feature> <symbol>(</symbol><local>a_enabled</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_application_i.xml#f_invoke_garbage_collection_when_inactive</location>invoke_garbage_collection_when_inactive</feature><comment> to </comment><quoted>a_enabled</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_invoke_garbage_collection_when_inactive</location>invoke_garbage_collection_when_inactive</feature> <symbol>:=</symbol> <local>a_enabled</local>
		<keyword>end</keyword>

	<anchor>f_set_captured_widget</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_captured_widget</location>set_captured_widget</feature> <symbol>(</symbol><local>a_captured_widget</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature><comment> to the widget that has the current capture 'a_capture_widget'.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature> <symbol>:=</symbol> <local>a_captured_widget</local>
		<keyword>ensure</keyword>
			<tag>captured_widget_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature> <symbol>=</symbol> <local>a_captured_widget</local>
		<keyword>end</keyword>

	<anchor>f_set_help_accelerator</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_help_accelerator</location>set_help_accelerator</feature> <symbol>(</symbol><local>an_accelerator</local><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_accelerator</quoted><comment> to </comment><feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature>
		<keyword>require</keyword>
			<tag>an_accelerator_not_void</tag><symbol>:</symbol> <local>an_accelerator</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature> <symbol>:=</symbol> <local>an_accelerator</local>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_actions</location>actions</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature><symbol>)</symbol> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_actions</location>actions</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>help_accelerator_assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature> <symbol>=</symbol> <local>an_accelerator</local>
			<tag>help_accelerator_complete</tag><symbol>:</symbol> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_actions</location>actions</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_set_contextual_help_accelerator</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_contextual_help_accelerator</location>set_contextual_help_accelerator</feature> <symbol>(</symbol><local>an_accelerator</local><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_accelerator</quoted><comment> to </comment><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature>
		<keyword>require</keyword>
			<tag>an_accelerator_not_void</tag><symbol>:</symbol> <local>an_accelerator</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature> <symbol>:=</symbol> <local>an_accelerator</local>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_actions</location>actions</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature><symbol>)</symbol> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_actions</location>actions</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>contextual_help_accelerator_assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature> <symbol>=</symbol> <local>an_accelerator</local>
			<tag>contextual_help_accelerator_complete</tag><symbol>:</symbol> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_actions</location>actions</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_set_help_engine</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_help_engine</location>set_help_engine</feature> <symbol>(</symbol><local>an_engine</local><symbol>:</symbol> <class><location>../interface/ev_help_engine.xml</location>EV_HELP_ENGINE</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_engine</quoted><comment> to </comment><feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature>
		<keyword>require</keyword>
			<tag>an_engine_not_void</tag><symbol>:</symbol> <local>an_engine</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature> <symbol>:=</symbol> <local>an_engine</local>
		<keyword>ensure</keyword>
			<tag>help_engine_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature> <symbol>=</symbol> <local>an_engine</local>
		<keyword>end</keyword>

	<anchor>f_set_locked_window</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_locked_window</location>set_locked_window</feature> <symbol>(</symbol><local>a_window</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_application_i.xml#f_locked_window</location>locked_window</feature><comment> to </comment><quoted>a_window</quoted><comment>.</comment>
			<comment>--</comment>
			<comment>--</comment><comment> See </comment><quoted>{EV_WINDOW}.lock_update</quoted><comment> for more details</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_locked_window</location>locked_window</feature> <symbol>:=</symbol> <local>a_window</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Basic operation</comment>

	<anchor>f_process_events</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_process_events</location>process_events</feature>
			<comment>--</comment><comment> Process any pending events.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_process_event_queue</location>process_event_queue</feature><symbol> </symbol><symbol>(</symbol><keyword>False</keyword><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_process_graphical_events</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_process_graphical_events</location>process_graphical_events</feature>
			<comment>--</comment><comment> Process any pending paint events.</comment>
			<comment>--</comment><comment> Pass control to the GUI toolkit so that it can</comment>
			<comment>--</comment><comment> handle any paint events that may be in its queue.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_process_events_until_stopped</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_process_events_until_stopped</location>process_events_until_stopped</feature>
			<comment>--</comment><comment> Process all events until 'stop_processing' is called.</comment>
		<keyword>do</keyword>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_stop_processing_requested</location>stop_processing_requested</feature> <symbol>:=</symbol> <keyword>False</keyword>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_stop_processing_requested</location>stop_processing_requested</feature> <keyword>or else</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
			<keyword>loop</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_process_event_queue</location>process_event_queue</feature><symbol> </symbol><symbol>(</symbol><keyword>True</keyword><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_stop_processing</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_stop_processing</location>stop_processing</feature>
			<comment>--</comment><comment>  Exit </comment><feature><location>../implementation_interface/ev_application_i.xml#f_process_events_until_stopped</location>process_events_until_stopped</feature><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_stop_processing_requested</location>stop_processing_requested</feature> <symbol>:=</symbol> <keyword>True</keyword>
		<keyword>end</keyword>

	<anchor>f_sleep</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_sleep</location>sleep</feature> <symbol>(</symbol><local>msec</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Wait for </comment><quoted>msec</quoted><comment> milliseconds and return.</comment>
		<keyword>require</keyword>
			<tag>msec_non_negative</tag><symbol>:</symbol> <local>msec</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_enable_contextual_help</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_enable_contextual_help</location>enable_contextual_help</feature>
			<comment>--</comment><comment> Change mouse cursor to help cursor</comment>
			<comment>--</comment><comment> Capture mouse input</comment>
			<comment>--</comment><comment> Send help context of widget under mouse cursor when left mouse button is pressed to help engine.</comment>
			<comment>--</comment><comment> Cancel contextual help mode when right mouse button is pressed.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget</location>focused_widget</feature> <keyword>as</keyword> l_focused_widget <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature> <symbol>:=</symbol> <local>l_focused_widget</local>
				<feature><location>../implementation_interface/ev_application_i.xml#f_old_pointer_button_press_actions</location>old_pointer_button_press_actions</feature> <symbol>:=</symbol> <local>l_focused_widget</local><dot>.</dot><feature><location>../interface/ev_widget_action_sequences.xml#f_pointer_button_press_actions</location>pointer_button_press_actions</feature>
				<local>l_focused_widget</local><dot>.</dot><feature><location>../interface/ev_widget_action_sequences.xml#f_pointer_button_press_actions</location>pointer_button_press_actions</feature><dot>.</dot><feature><include>False</include>wipe_out</feature>
				<local>l_focused_widget</local><dot>.</dot><feature><location>../interface/ev_widget_action_sequences.xml#f_pointer_button_press_actions</location>pointer_button_press_actions</feature><dot>.</dot><feature><include>False</include>extend_kamikaze</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_procedure</location>Contextual_help_procedure</feature><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_application_i.xml#f_old_pointer_style</location>old_pointer_style</feature> <symbol>:=</symbol> <local>l_focused_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_pointer_style</location>pointer_style</feature>
				<local>l_focused_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_set_pointer_style</location>set_pointer_style</feature><symbol> </symbol><symbol>(</symbol><symbol>(</symbol><keyword>create</keyword><symbol> </symbol><symbol>{</symbol><class><location>../interface/ev_stock_pixmaps.xml</location>EV_STOCK_PIXMAPS</class><symbol>}</symbol><symbol>)</symbol><dot>.</dot><feature><location>../interface/ev_stock_pixmaps.xml#f_help_cursor</location>Help_cursor</feature><symbol>)</symbol>
				<local>l_focused_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_enable_capture</location>enable_capture</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_display_help_for_widget</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_display_help_for_widget</location>display_help_for_widget</feature> <symbol>(</symbol><local>a_widget</local><symbol>:</symbol> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class><symbol>)</symbol>
			<comment>--</comment><comment> Display contextual help for </comment><quoted>a_widget</quoted><comment>, if any.</comment>
		<keyword>require</keyword>
			<tag>a_widget_not_void</tag><symbol>:</symbol> <local>a_widget</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>local</keyword>
			<local>an_help_context</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>FUNCTION</class> <symbol>[</symbol><class><location>../interface/ev_help_context.xml</location>EV_HELP_CONTEXT</class><symbol>]</symbol>
		<keyword>do</keyword>
			<local>an_help_context</local> <symbol>:=</symbol> <local>a_widget</local><dot>.</dot><feature><location>../interface/ev_help_contextable.xml#f_help_context</location>help_context</feature>
			<keyword>if</keyword> <local>an_help_context</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature><dot>.</dot><feature><location>../interface/ev_help_engine.xml#f_show</location>show</feature><symbol> </symbol><symbol>(</symbol><local>an_help_context</local><dot>.</dot><feature><include>False</include>item</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_add_idle_action</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_add_idle_action</location>add_idle_action</feature> <symbol>(</symbol><local>a_idle_action</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Extend </comment><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature><comment> with </comment><quoted>a_idle_action</quoted><comment>.</comment>
			<comment>--</comment><comment> Thread safe</comment>
		<keyword>require</keyword>
			<tag>a_idle_action_not_void</tag><symbol>:</symbol> <local>a_idle_action</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_idle_lock</location>idle_lock</feature>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><local>a_idle_action</local><symbol>)</symbol> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions_internal</location>idle_actions_internal</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions_internal</location>idle_actions_internal</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><local>a_idle_action</local><symbol>)</symbol>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_idle_unlock</location>idle_unlock</feature>
		<keyword>end</keyword>

	<anchor>f_remove_idle_action</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_remove_idle_action</location>remove_idle_action</feature> <symbol>(</symbol><local>a_idle_action</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Remove </comment><quoted>a_idle_action</quoted><comment> from </comment><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature>
			<comment>--</comment><comment> Thread safe</comment>
		<keyword>require</keyword>
			<tag>a_idle_action_not_void</tag><symbol>:</symbol> <local>a_idle_action</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>local</keyword>
			<local>l_cursor</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>l_idle_actions</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_idle_lock</location>idle_lock</feature>
			<local>l_idle_actions</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_idle_actions</location>idle_actions</feature>
			<local>l_cursor</local> <symbol>:=</symbol> <local>l_idle_actions</local><dot>.</dot><feature><include>False</include>cursor</feature>
			<local>l_idle_actions</local><dot>.</dot><feature><include>False</include>prune_all</feature><symbol> </symbol><symbol>(</symbol><local>a_idle_action</local><symbol>)</symbol>
			<keyword>if</keyword> <local>l_idle_actions</local><dot>.</dot><feature><include>False</include>valid_cursor</feature><symbol> </symbol><symbol>(</symbol><local>l_cursor</local><symbol>)</symbol> <keyword>then</keyword>
				<local>l_idle_actions</local><dot>.</dot><feature><include>False</include>go_to</feature><symbol> </symbol><symbol>(</symbol><local>l_cursor</local><symbol>)</symbol>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_idle_unlock</location>idle_unlock</feature>
			<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_lock</location>kamikaze_lock</feature>
			<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>prune_all</feature><symbol> </symbol><symbol>(</symbol><local>a_idle_action</local><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_unlock</location>kamikaze_unlock</feature>
		<keyword>end</keyword>

	<anchor>f_idle_lock</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_lock</location>idle_lock</feature>
			<comment>--</comment><comment> Lock the Idle Actions Mutex.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature><dot>.</dot><feature><include>False</include>lock</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_try_idle_lock</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_try_idle_lock</location>try_idle_lock</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Attempt to lock the Idle Actions Mutex. True if successful.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature><dot>.</dot><feature><include>False</include>try_lock</feature>
			<keyword>else</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <keyword>True</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_idle_unlock</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_unlock</location>idle_unlock</feature>
			<comment>--</comment><comment> Unlock the Idle Actions Mutex.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature><dot>.</dot><feature><include>False</include>unlock</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_kamikaze_lock</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_lock</location>kamikaze_lock</feature>
			<comment>--</comment><comment> Lock the Kamikaze Actions Mutex.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature><dot>.</dot><feature><include>False</include>lock</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_try_kamikaze_lock</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_try_kamikaze_lock</location>try_kamikaze_lock</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Attempt to lock the Kamikaze Actions Mutex. True if successful.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature><dot>.</dot><feature><include>False</include>try_lock</feature>
			<keyword>else</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <keyword>True</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_kamikaze_unlock</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_unlock</location>kamikaze_unlock</feature>
			<comment>--</comment><comment> Unlock the Kamikaze Actions Mutex.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature><dot>.</dot><feature><include>False</include>unlock</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Thread implementation</comment>

	<anchor>f_idle_action_mutex</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_idle_action_mutex</location>idle_action_mutex</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>MUTEX</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>

	<anchor>f_kamikaze_action_mutex</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_action_mutex</location>kamikaze_action_mutex</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>MUTEX</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Events</comment>

	<anchor>f_do_once_on_idle</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_do_once_on_idle</location>do_once_on_idle</feature> <symbol>(</symbol><local>an_action</local><symbol>:</symbol> <keyword>separate</keyword> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Perform </comment><quoted>an_action</quoted><comment> one time only on idle.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_lock</location>kamikaze_lock</feature>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><local>an_action</local><symbol>)</symbol> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_kamikaze_actions</location>kamikaze_actions</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><local>an_action</local><symbol>)</symbol>
			<keyword>end</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_is_gui_thread</location>is_gui_thread</feature> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_wake_up_gui_thread</location>wake_up_gui_thread</feature>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_kamikaze_unlock</location>kamikaze_unlock</feature>
		<keyword>end</keyword>

	<anchor>f_actions_are_callable</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_actions_are_callable</location>actions_are_callable</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> May actions be called</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_increase_action_sequence_call_counter</location>increase_action_sequence_call_counter</feature>
				<keyword>Result</keyword> <symbol>:=</symbol> <keyword>True</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_increase_action_sequence_call_counter</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_increase_action_sequence_call_counter</location>increase_action_sequence_call_counter</feature>
			<comment>--</comment><comment> Increase </comment><feature><location>../implementation_interface/ev_application_i.xml#f_action_sequence_call_counter</location>action_sequence_call_counter</feature><comment> by one.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_action_sequence_call_counter</location>action_sequence_call_counter</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_action_sequence_call_counter</location>action_sequence_call_counter</feature> <symbol>+</symbol> <number>1</number>
		<keyword>end</keyword>

	<anchor>f_action_sequence_call_counter</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_action_sequence_call_counter</location>action_sequence_call_counter</feature><symbol>:</symbol> <class><include>False</include>NATURAL_32</class>
			<comment>--</comment><comment> Counter used in post-conditions to determine if any actions sequences have been</comment>
			<comment>--</comment><comment> called as a result of the routine the post-condition is applied to.</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Event handling</comment>

	<anchor>f_accelerator_actions</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_accelerator_actions</location>accelerator_actions</feature> <symbol>(</symbol><local>an_accelerator</local><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class><symbol>)</symbol><symbol>:</symbol> <class><location>../interface/ev_notify_action_sequence.xml</location>EV_NOTIFY_ACTION_SEQUENCE</class>
			<comment>--</comment><comment> Actions to be performed when </comment><quoted>an_accelerator</quoted><comment> key sequence is</comment>
			<comment>--</comment><comment> pressed.</comment>
		<keyword>do</keyword>
			<keyword>create</keyword> <keyword>Result</keyword>
		<keyword>ensure</keyword>
			<tag>not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_tooltip_delay</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_tooltip_delay</location>tooltip_delay</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Time in milliseconds before tooltips pop up.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_focused_widget</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget</location>focused_widget</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
			<comment>--</comment><comment> Widget with keyboard focus</comment>
		<keyword>local</keyword>
			<local>current_windows</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_windows</location>windows</feature>
			<local>current_window</local><symbol>:</symbol> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class>
		<keyword>do</keyword>
			<local>current_windows</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_windows</location>windows</feature>
			<keyword>from</keyword>
				<local>current_windows</local><dot>.</dot><feature><include>False</include>start</feature>
			<keyword>until</keyword>
				<local>current_windows</local><dot>.</dot><feature><include>False</include>off</feature> <keyword>or</keyword> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<keyword>loop</keyword>
				<local>current_window</local> <symbol>:=</symbol> <local>current_windows</local><dot>.</dot><feature><include>False</include>item</feature>
				<keyword>if</keyword> <local>current_window</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_has_focus</location>has_focus</feature> <keyword>then</keyword>
					<keyword>if</keyword> <local>current_window</local><dot>.</dot><feature><location>../interface/ev_cell.xml#f_full</location>full</feature> <keyword>then</keyword>
						<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget_from_container</location>focused_widget_from_container</feature><symbol> </symbol><symbol>(</symbol><local>current_window</local><dot>.</dot><feature><location>../interface/ev_container.xml#f_item</location>item</feature><symbol>)</symbol>
					<keyword>else</keyword>
						<keyword>Result</keyword> <symbol>:=</symbol> <local>current_window</local>
					<keyword>end</keyword>
				<keyword>end</keyword>
				<local>current_windows</local><dot>.</dot><feature><include>False</include>forth</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status setting</comment>

	<anchor>f_set_tooltip_delay</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_tooltip_delay</location>set_tooltip_delay</feature> <symbol>(</symbol><local>a_delay</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_application_i.xml#f_tooltip_delay</location>tooltip_delay</feature><comment> to </comment><quoted>a_delay</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>a_delay_non_negative</tag><symbol>:</symbol> <local>a_delay</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_tooltip_delay</location>tooltip_delay</feature> <symbol>=</symbol> <local>a_delay</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_interface</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_interface</location>interface</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_application.xml</location>EV_APPLICATION</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_application.xml</location>EV_APPLICATION</class><symbol>,</symbol> <class><location>../implementation_interface/ev_pick_and_dropable_i.xml</location>EV_PICK_AND_DROPABLE_I</class><symbol>}</symbol> <comment>--</comment><comment> Pick and drop</comment>

	<anchor>f_pnd_screen</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_pnd_screen</location>Pnd_screen</feature><symbol>:</symbol> <class><location>../interface/ev_screen.xml</location>EV_SCREEN</class>
			<comment>--</comment><comment> Screen object used for drawing PND transport line.</comment>
		<keyword>once</keyword>
			<keyword>create</keyword> <keyword>Result</keyword>
			<keyword>Result</keyword><dot>.</dot><feature><location>../interface/ev_drawable.xml#f_enable_dashed_line_style</location>enable_dashed_line_style</feature>
			<keyword>Result</keyword><dot>.</dot><feature><location>../interface/ev_colorizable.xml#f_set_foreground_color</location>set_foreground_color</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_stock_colors</location>Stock_colors</feature><dot>.</dot><feature><location>../interface/ev_stock_colors.xml#f_white</location>White</feature><symbol>)</symbol>
			<keyword>Result</keyword><dot>.</dot><feature><location>../interface/ev_drawable.xml#f_set_invert_mode</location>set_invert_mode</feature>
		<keyword>end</keyword>

	<anchor>f_stock_colors</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_stock_colors</location>Stock_colors</feature><symbol>:</symbol> <class><location>../interface/ev_stock_colors.xml</location>EV_STOCK_COLORS</class>
			<comment>--</comment><comment> Once access to default colors</comment>
		<keyword>once</keyword>
			<keyword>create</keyword> <keyword>Result</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_pick_and_dropable_i.xml</location>EV_PICK_AND_DROPABLE_I</class><symbol>}</symbol> <comment>--</comment><comment> Pick and drop</comment>

	<anchor>f_x_origin</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_x_origin</location>x_origin</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Temp coordinate values for origin of Pick and Drop.</comment>

	<anchor>f_y_origin</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_y_origin</location>y_origin</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Temp coordinate values for origin of Pick and Drop.</comment>

	<anchor>f_set_x_y_origin</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_x_y_origin</location>set_x_y_origin</feature> <symbol>(</symbol><local>a_x_origin</local><symbol>,</symbol> <local>a_y_origin</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_application_i.xml#f_x_origin</location>x_origin</feature><comment> and </comment><feature><location>../implementation_interface/ev_application_i.xml#f_y_origin</location>y_origin</feature><comment> to </comment><quoted>a_x_origin</quoted><comment> and </comment><quoted>a_y_origin</quoted><comment> respectively.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_x_origin</location>x_origin</feature> <symbol>:=</symbol> <local>a_x_origin</local>
			<feature><location>../implementation_interface/ev_application_i.xml#f_y_origin</location>y_origin</feature> <symbol>:=</symbol> <local>a_y_origin</local>
		<keyword>end</keyword>

	<anchor>f_rubber_band_is_drawn</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_rubber_band_is_drawn</location>rubber_band_is_drawn</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is the PnD rubber band drawn on screen?</comment>

	<anchor>f_draw_rubber_band</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_draw_rubber_band</location>draw_rubber_band</feature>
			<comment>--</comment><comment> Draw a segment between initial pick point and </comment><quoted>destination</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_screen</location>Pnd_screen</feature><dot>.</dot><feature><location>../interface/ev_drawable.xml#f_draw_segment</location>draw_segment</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_x_origin</location>x_origin</feature><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_y_origin</location>y_origin</feature><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_x</location>pnd_pointer_x</feature><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_y</location>pnd_pointer_y</feature><symbol>)</symbol>
			<feature><location>../implementation_interface/ev_application_i.xml#f_rubber_band_is_drawn</location>rubber_band_is_drawn</feature> <symbol>:=</symbol> <keyword>True</keyword>
		<keyword>end</keyword>

	<anchor>f_erase_rubber_band</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_erase_rubber_band</location>erase_rubber_band</feature>
			<comment>--</comment><comment> Erase previously drawn rubber band.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_rubber_band_is_drawn</location>rubber_band_is_drawn</feature> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_screen</location>Pnd_screen</feature><dot>.</dot><feature><location>../interface/ev_drawable.xml#f_draw_segment</location>draw_segment</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_x_origin</location>x_origin</feature><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_y_origin</location>y_origin</feature><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_x</location>pnd_pointer_x</feature><symbol>,</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_y</location>pnd_pointer_y</feature><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_application_i.xml#f_rubber_band_is_drawn</location>rubber_band_is_drawn</feature> <symbol>:=</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_pnd_pointer_x</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_x</location>pnd_pointer_x</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Position of pointer on previous PND draw.</comment>

	<anchor>f_pnd_pointer_y</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_y</location>pnd_pointer_y</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Position of pointer on previous PND draw.</comment>

	<anchor>f_set_pnd_pointer_coords</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_pnd_pointer_coords</location>set_pnd_pointer_coords</feature> <symbol>(</symbol><local>a_pnd_pointer_x</local><symbol>,</symbol> <local>a_pnd_pointer_y</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Set PND pointer origins to </comment><quoted>a_pnd_pointer_x</quoted><comment> and </comment><quoted>a_pnd_pointer_y</quoted><comment>.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_x</location>pnd_pointer_x</feature> <symbol>:=</symbol> <local>a_pnd_pointer_x</local>
			<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_pointer_y</location>pnd_pointer_y</feature> <symbol>:=</symbol> <local>a_pnd_pointer_y</local>
		<keyword>end</keyword>

	<anchor>f_create_target_menu</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_create_target_menu</location>create_target_menu</feature> <symbol>(</symbol><local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_screen_x</local><symbol>,</symbol> <local>a_screen_y</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>a_pnd_source</local><symbol>:</symbol> <class><location>../interface/ev_pick_and_dropable.xml</location>EV_PICK_AND_DROPABLE</class><symbol>;</symbol> <local>a_pebble</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>ANY</class><symbol>;</symbol> <local>a_configure_agent</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>PROCEDURE</class><symbol>;</symbol> <local>a_menu_only</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Menu of targets that accept </comment><quoted>a_pebble</quoted><comment>.</comment>
		<keyword>local</keyword>
			<local>cur</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>trg</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_abstract_pick_and_dropable.xml</location>EV_ABSTRACT_PICK_AND_DROPABLE</class>
			<local>pnd_trg</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_pick_and_dropable.xml</location>EV_PICK_AND_DROPABLE</class>
			<local>targets</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature>
			<local>identified</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>IDENTIFIED</class>
			<local>sensitive</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_sensitive.xml</location>EV_SENSITIVE</class>
			<local>l_item_data</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class>
			<local>l_search_tree</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>BINARY_SEARCH_TREE</class> <symbol>[</symbol><class><include>False</include>PROXY_COMPARABLE</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol><symbol>]</symbol>
			<local>l_object_comparable</local><symbol>:</symbol> <class><include>False</include>PROXY_COMPARABLE</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol>
			<local>l_comparator_agent</local><symbol>:</symbol> <class><include>False</include>PREDICATE</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>,</symbol> <class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol>
			<local>l_arrayed_list</local><symbol>:</symbol> <class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol>
			<local>l_alphabetical_sort_agent</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class> <symbol>[</symbol><class><include>False</include>PROCEDURE</class><symbol>,</symbol> <class><include>False</include>BINARY_SEARCH_TREE</class> <symbol>[</symbol><class><include>False</include>PROXY_COMPARABLE</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol><symbol>]</symbol><symbol>,</symbol> <class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol><symbol>]</symbol>
			<local>l_configurable_item_added</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<local>l_menu</local><symbol>:</symbol> <class><location>../interface/ev_menu.xml</location>EV_MENU</class>
			<local>l_menu_count</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<local>l_has_targets</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<local>l_pebble</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>ANY</class>
		<keyword>do</keyword>
			<local>targets</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature>
			<keyword>create</keyword> <local>l_menu</local>
			<keyword>create</keyword> <local>identified</local>
			<local>cur</local> <symbol>:=</symbol> <local>targets</local><dot>.</dot><feature><include>False</include>cursor</feature>
			<keyword>from</keyword>
				<local>targets</local><dot>.</dot><feature><include>False</include>start</feature>
				<local>l_comparator_agent</local> <symbol>:=</symbol> <keyword>agent</keyword> <symbol>(</symbol><local>first_item</local><symbol>,</symbol> <local>second_item</local><symbol>:</symbol> <class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
					<keyword>do</keyword>
						<keyword>if</keyword> <keyword>attached</keyword> <local>first_item</local><dot>.</dot><feature><location>../interface/ev_pnd_target_data.xml#f_name</location>name</feature> <keyword>as</keyword> l_first_name <keyword>and then</keyword> <keyword>attached</keyword> <local>second_item</local><dot>.</dot><feature><location>../interface/ev_pnd_target_data.xml#f_name</location>name</feature> <keyword>as</keyword> l_second_name <keyword>then</keyword>
							<keyword>Result</keyword> <symbol>:=</symbol> <local>l_first_name</local> <symbol>&lt;</symbol> <local>l_second_name</local>
						<keyword>end</keyword>
					<keyword>end</keyword>
			<keyword>until</keyword>
				<local>targets</local><dot>.</dot><feature><include>False</include>after</feature>
			<keyword>loop</keyword>
				<local>trg</local> <symbol>?=</symbol> <local>identified</local><dot>.</dot><feature><include>False</include>id_object</feature><symbol> </symbol><symbol>(</symbol><local>targets</local><dot>.</dot><feature><include>False</include>item_for_iteration</feature><symbol>)</symbol>
				<local>pnd_trg</local> <symbol>?=</symbol> <local>trg</local>
				<keyword>if</keyword> <local>trg</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <symbol>(</symbol><local>pnd_trg</local> <symbol>=</symbol> <keyword>Void</keyword> <keyword>or else</keyword> <keyword>not</keyword> <local>pnd_trg</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature><symbol>)</symbol> <keyword>then</keyword>
					<keyword>if</keyword> <keyword>attached</keyword> <local>a_pebble</local> <keyword>as</keyword> l_p <keyword>and then</keyword> <local>trg</local><dot>.</dot><feature><location>../interface/ev_abstract_pick_and_dropable.xml#f_drop_actions</location>drop_actions</feature><dot>.</dot><feature><location>../interface/ev_pnd_action_sequence.xml#f_accepts_pebble</location>accepts_pebble</feature><symbol> </symbol><symbol>(</symbol><local>l_p</local><symbol>)</symbol> <keyword>then</keyword>
						<local>sensitive</local> <symbol>?=</symbol> <local>trg</local>
						<keyword>if</keyword> <keyword>not</keyword> <symbol>(</symbol><local>sensitive</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <symbol>(</symbol><keyword>not</keyword> <local>sensitive</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <keyword>not</keyword> <local>sensitive</local><dot>.</dot><feature><location>../interface/ev_sensitive.xml#f_is_sensitive</location>is_sensitive</feature><symbol>)</symbol><symbol>)</symbol> <keyword>then</keyword>
							<local>l_has_targets</local> <symbol>:=</symbol> <keyword>True</keyword>
							<keyword>if</keyword> <keyword>not</keyword> <local>l_configurable_item_added</local> <keyword>and then</keyword> <local>a_configure_agent</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
								<local>l_menu</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><keyword>create</keyword><symbol> </symbol><symbol>{</symbol><class><location>../interface/ev_menu_item.xml</location>EV_MENU_ITEM</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_menu_item.xml#f_make_with_text_and_action</location>make_with_text_and_action</feature><symbol> </symbol><symbol>(</symbol>&quot;Pick&quot;<symbol>,</symbol> <local>a_configure_agent</local><symbol>)</symbol><symbol>)</symbol>
								<local>l_configurable_item_added</local> <symbol>:=</symbol> <keyword>True</keyword>
							<keyword>end</keyword>
							<keyword>if</keyword> <keyword>attached</keyword> <local>trg</local><dot>.</dot><feature><location>../interface/ev_abstract_pick_and_dropable.xml#f_target_data_function</location>target_data_function</feature> <keyword>as</keyword> l_target_data_function <keyword>then</keyword>
								<local>l_item_data</local> <symbol>:=</symbol> <local>l_target_data_function</local><dot>.</dot><feature><include>False</include>item</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_p</local><symbol>]</symbol><symbol>)</symbol>
							<keyword>end</keyword>
							<keyword>if</keyword> <local>l_item_data</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
								<local>l_item_data</local><dot>.</dot><feature><location>../interface/ev_pnd_target_data.xml#f_set_target</location>set_target</feature><symbol> </symbol><symbol>(</symbol><local>trg</local><symbol>)</symbol>
								<keyword>create</keyword> <local>l_object_comparable</local><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><local>l_item_data</local><symbol>,</symbol> <local>l_comparator_agent</local><symbol>)</symbol>
								<keyword>if</keyword> <local>l_search_tree</local> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
									<keyword>create</keyword> <local>l_search_tree</local><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><local>l_object_comparable</local><symbol>)</symbol>
								<keyword>else</keyword>
									<local>l_search_tree</local><dot>.</dot><feature><include>False</include>put</feature><symbol> </symbol><symbol>(</symbol><local>l_object_comparable</local><symbol>)</symbol>
								<keyword>end</keyword>
								<local>l_item_data</local> <symbol>:=</symbol> <keyword>Void</keyword>
							<keyword>end</keyword>
						<keyword>end</keyword>
					<keyword>end</keyword>
				<keyword>end</keyword>
				<local>targets</local><dot>.</dot><feature><include>False</include>forth</feature>
			<keyword>end</keyword>
			<keyword>if</keyword> <local>l_has_targets</local> <keyword>then</keyword>
				<keyword>create</keyword> <local>l_arrayed_list</local><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>0</number><symbol>)</symbol>
				<keyword>if</keyword> <local>l_search_tree</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
					<local>l_alphabetical_sort_agent</local> <symbol>:=</symbol> <keyword>agent</keyword> <symbol>(</symbol><local>l_sort_agent</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class><symbol>;</symbol> <local>a_node</local><symbol>:</symbol> <class><include>False</include>BINARY_SEARCH_TREE</class> <symbol>[</symbol><class><include>False</include>PROXY_COMPARABLE</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol><symbol>]</symbol><symbol>;</symbol> <local>a_list</local><symbol>:</symbol> <class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol><symbol>)</symbol>
						<keyword>do</keyword>
							<keyword>if</keyword> <local>a_node</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
								<local>l_sort_agent</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_sort_agent</local><symbol>,</symbol> <local>a_node</local><dot>.</dot><feature><include>False</include>left_child</feature><symbol>,</symbol> <local>a_list</local><symbol>]</symbol><symbol>)</symbol>
								<local>a_list</local><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><local>a_node</local><dot>.</dot><feature><include>False</include>item</feature><dot>.</dot><feature><include>False</include>item</feature><symbol>)</symbol>
								<local>l_sort_agent</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_sort_agent</local><symbol>,</symbol> <local>a_node</local><dot>.</dot><feature><include>False</include>right_child</feature><symbol>,</symbol> <local>a_list</local><symbol>]</symbol><symbol>)</symbol>
							<keyword>end</keyword>
						<keyword>end</keyword>
					<local>l_alphabetical_sort_agent</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_alphabetical_sort_agent</local><symbol>,</symbol> <local>l_search_tree</local><symbol>,</symbol> <local>l_arrayed_list</local><symbol>]</symbol><symbol>)</symbol>
				<keyword>end</keyword>
				<local>l_menu_count</local> <symbol>:=</symbol> <local>l_menu</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_count</location>count</feature>
				<keyword>if</keyword> <keyword>attached</keyword> <local>a_pnd_source</local><dot>.</dot><feature><location>../interface/ev_pick_and_dropable.xml#f_configurable_target_menu_handler</location>configurable_target_menu_handler</feature> <keyword>as</keyword> l_menu_handler <keyword>then</keyword>
					<local>l_pebble</local> <symbol>:=</symbol> <local>a_pebble</local>
					<keyword>check</keyword>
							<local>l_pebble</local> <symbol>/=</symbol> <keyword>Void</keyword>
					<keyword>then</keyword>
						<local>l_menu_handler</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_menu</local><symbol>,</symbol> <local>l_arrayed_list</local><symbol>,</symbol> <local>a_pnd_source</local><symbol>,</symbol> <local>l_pebble</local><symbol>]</symbol><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>else</keyword>
					<keyword>from</keyword>
						<local>l_arrayed_list</local><dot>.</dot><feature><include>False</include>start</feature>
					<keyword>until</keyword>
						<local>l_arrayed_list</local><dot>.</dot><feature><include>False</include>after</feature>
					<keyword>loop</keyword>
						<keyword>if</keyword> <keyword>attached</keyword> <local>l_arrayed_list</local><dot>.</dot><feature><include>False</include>item</feature><dot>.</dot><feature><location>../interface/ev_pnd_target_data.xml#f_target</location>target</feature> <keyword>as</keyword> l_target <keyword>then</keyword>
							<local>l_pebble</local> <symbol>:=</symbol> <local>a_pebble</local>
							<keyword>check</keyword>
									<local>l_pebble</local> <symbol>/=</symbol> <keyword>Void</keyword>
							<keyword>then</keyword>
								<local>l_menu</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><keyword>create</keyword><symbol> </symbol><symbol>{</symbol><class><location>../interface/ev_menu_item.xml</location>EV_MENU_ITEM</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_menu_item.xml#f_make_with_text_and_action</location>make_with_text_and_action</feature><symbol> </symbol><symbol>(</symbol><local>l_arrayed_list</local><dot>.</dot><feature><include>False</include>item</feature><dot>.</dot><feature><location>../interface/ev_pnd_target_data.xml#f_name</location>name</feature><symbol>,</symbol> <keyword>agent</keyword> <local>l_target</local><dot>.</dot><feature><location>../interface/ev_abstract_pick_and_dropable.xml#f_drop_actions</location>drop_actions</feature><dot>.</dot><feature><location>../interface/ev_pnd_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_pebble</local><symbol>]</symbol><symbol>)</symbol><symbol>)</symbol><symbol>)</symbol>
							<keyword>end</keyword>
						<keyword>end</keyword>
						<local>l_arrayed_list</local><dot>.</dot><feature><include>False</include>forth</feature>
					<keyword>end</keyword>
				<keyword>end</keyword>
				<keyword>if</keyword> <keyword>not</keyword> <local>l_menu</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <local>l_menu</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_count</location>count</feature> <symbol>&gt;</symbol> <local>l_menu_count</local> <keyword>then</keyword>
					<local>l_menu</local><dot>.</dot><feature><location>../interface/ev_menu.xml#f_show_at</location>show_at</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>,</symbol> <local>a_screen_x</local> <symbol>-</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_menu_placement_offset</location>Menu_placement_offset</feature><symbol>,</symbol> <local>a_screen_y</local> <symbol>-</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_menu_placement_offset</location>Menu_placement_offset</feature><symbol>)</symbol>
				<keyword>elseif</keyword> <local>a_configure_agent</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and</keyword> <keyword>not</keyword> <local>a_menu_only</local> <keyword>then</keyword>
					<local>a_configure_agent</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
				<keyword>end</keyword>
			<keyword>else</keyword>
				<keyword>if</keyword> <keyword>attached</keyword> <local>a_pnd_source</local><dot>.</dot><feature><location>../interface/ev_pick_and_dropable.xml#f_configurable_target_menu_handler</location>configurable_target_menu_handler</feature> <keyword>as</keyword> l_configurable_target_menu_handler <keyword>then</keyword>
					<keyword>create</keyword> <local>l_menu</local>
					<local>l_configurable_target_menu_handler</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_menu</local><symbol>,</symbol> <keyword>create</keyword><symbol> </symbol><symbol>{</symbol><class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><location>../interface/ev_pnd_target_data.xml</location>EV_PND_TARGET_DATA</class><symbol>]</symbol><symbol>}</symbol><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>0</number><symbol>)</symbol><symbol>,</symbol> <local>a_pnd_source</local><symbol>,</symbol> <local>a_pebble</local><symbol>]</symbol><symbol>)</symbol>
					<keyword>if</keyword> <keyword>not</keyword> <local>l_menu</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <local>l_menu</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_count</location>count</feature> <symbol>&gt;</symbol> <number>0</number> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_ctrl_pressed</location>ctrl_pressed</feature> <keyword>then</keyword>
						<local>l_menu</local><dot>.</dot><feature><location>../interface/ev_menu.xml#f_show_at</location>show_at</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>,</symbol> <local>a_screen_x</local> <symbol>-</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_menu_placement_offset</location>Menu_placement_offset</feature><symbol>,</symbol> <local>a_screen_y</local> <symbol>-</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_menu_placement_offset</location>Menu_placement_offset</feature><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
			<keyword>if</keyword> <local>targets</local><dot>.</dot><feature><include>False</include>valid_cursor</feature><symbol> </symbol><symbol>(</symbol><local>cur</local><symbol>)</symbol> <keyword>then</keyword>
				<local>targets</local><dot>.</dot><feature><include>False</include>go_to</feature><symbol> </symbol><symbol>(</symbol><local>cur</local><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_menu_placement_offset</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_menu_placement_offset</location>Menu_placement_offset</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class> <symbol>=</symbol> <number>3</number>
			<comment>--</comment><comment> Offset for both X and Y dimensions to which to move the menu so its placement is directly underneath the mouse pointer.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Tab Navigation</comment>

	<anchor>f_tab_navigation_state</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_tab_navigation_state</location>tab_navigation_state</feature><symbol>:</symbol> <class><include>False</include>NATURAL_8</class>
			<comment>--</comment><comment> Current tab navigation state.</comment>

	<anchor>f_set_tab_navigation_state</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_set_tab_navigation_state</location>set_tab_navigation_state</feature> <symbol>(</symbol><local>a_state</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_tab_navigation_state</location>tab_navigation_state</feature><symbol>)</symbol>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_application_i.xml#f_tab_navigation_state</location>tab_navigation_state</feature><comment> to </comment><quoted>a_state</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>a_valid_state</tag><symbol>:</symbol> <local>a_state</local> <symbol>&gt;=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_tab_state_none</location>Tab_state_none</feature> <keyword>and then</keyword> <local>a_state</local> <symbol>&lt;=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_tab_state_from_next</location>Tab_state_from_next</feature>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_tab_navigation_state</location>tab_navigation_state</feature> <symbol>:=</symbol> <local>a_state</local>
		<keyword>end</keyword>

	<anchor>f_tab_state_none</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_tab_state_none</location>Tab_state_none</feature><symbol>:</symbol> <class><include>False</include>NATURAL_8</class> <symbol>=</symbol> <number>0</number>

	<anchor>f_tab_state_from_previous</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_tab_state_from_previous</location>Tab_state_from_previous</feature><symbol>:</symbol> <class><include>False</include>NATURAL_8</class> <symbol>=</symbol> <number>1</number>

	<anchor>f_tab_state_from_next</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_tab_state_from_next</location>Tab_state_from_next</feature><symbol>:</symbol> <class><include>False</include>NATURAL_8</class> <symbol>=</symbol> <number>2</number>
			<comment>--</comment><comment> Tab navigation states.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Debug</comment>

	<anchor>f_trace</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_trace</location>trace</feature>
			<comment>--</comment><comment> Output all PND targets.</comment>
		<keyword>local</keyword>
			<local>cur</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>trg</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_abstract_pick_and_dropable.xml</location>EV_ABSTRACT_PICK_AND_DROPABLE</class>
			<local>identified</local><symbol>:</symbol> <class><include>False</include>IDENTIFIED</class>
		<keyword>do</keyword>
			<local>cur</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>cursor</feature>
			<keyword>create</keyword> <local>identified</local>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>start</feature>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>after</feature>
			<keyword>loop</keyword>
				<local>trg</local> <symbol>?=</symbol> <local>identified</local><dot>.</dot><feature><include>False</include>id_object</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>item_for_iteration</feature><symbol>)</symbol>
				<keyword>if</keyword> <local>trg</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>attached</keyword> <local>trg</local><dot>.</dot><feature><location>../interface/ev_abstract_pick_and_dropable.xml#f_target_name</location>target_name</feature> <keyword>as</keyword> l_target_name <keyword>then</keyword>
					<feature><include>False</include>Io</feature><dot>.</dot><feature><include>False</include>Error</feature><dot>.</dot><feature><include>False</include>put_string</feature><symbol> </symbol><symbol>(</symbol><local>l_target_name</local><dot>.</dot><feature><include>False</include>as_string_8</feature><symbol>)</symbol>
				<keyword>end</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>forth</feature>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_application_i.xml#f_pnd_targets</location>pnd_targets</feature><dot>.</dot><feature><include>False</include>go_to</feature><symbol> </symbol><symbol>(</symbol><local>cur</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_call_post_launch_actions</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_call_post_launch_actions</location>call_post_launch_actions</feature>
			<comment>--</comment><comment> Call the post launch actions.</comment>
		<keyword>local</keyword>
			<local>retried</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <local>retried</local> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_post_launch_actions</location>post_launch_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
			<keyword>else</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_on_exception_action</location>on_exception_action</feature><symbol> </symbol><symbol>(</symbol><feature><location>../implementation_interface/ev_application_i.xml#f_new_exception</location>new_exception</feature><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>rescue</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <local>retried</local> <keyword>then</keyword>
				<local>retried</local> <symbol>:=</symbol> <keyword>True</keyword>
				<keyword>retry</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_on_exception_action</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_on_exception_action</location>on_exception_action</feature> <symbol>(</symbol><local>an_exception</local><symbol>:</symbol> <class><include>False</include>EXCEPTION</class><symbol>)</symbol>
			<comment>--</comment><comment> Call exception actions.</comment>
		<keyword>require</keyword>
			<tag>an_exception_not_void</tag><symbol>:</symbol> <local>an_exception</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>local</keyword>
			<local>l_dialog</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_exception_dialog</location>exception_dialog</feature>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_locked_window</location>locked_window</feature> <keyword>as</keyword> l_locked_window <keyword>then</keyword>
				<local>l_locked_window</local><dot>.</dot><feature><location>../interface/ev_window.xml#f_unlock_update</location>unlock_update</feature>
			<keyword>end</keyword>
			<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature> <keyword>as</keyword> l_captured_widget <keyword>then</keyword>
				<local>l_captured_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_disable_capture</location>disable_capture</feature>
			<keyword>end</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_uncaught_exception_actions_called</location>uncaught_exception_actions_called</feature> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_uncaught_exception_actions_internal</location>uncaught_exception_actions_internal</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_uncaught_exception_actions</location>uncaught_exception_actions</feature><dot>.</dot><feature><include>False</include>is_empty</feature> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_uncaught_exception_actions_called</location>uncaught_exception_actions_called</feature> <symbol>:=</symbol> <keyword>True</keyword>
				<feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_uncaught_exception_actions</location>uncaught_exception_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>an_exception</local><symbol>]</symbol><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_application_i.xml#f_uncaught_exception_actions_called</location>uncaught_exception_actions_called</feature> <symbol>:=</symbol> <keyword>False</keyword>
			<keyword>else</keyword>
				<keyword>if</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_show_exception_dialog</location>Show_exception_dialog</feature> <keyword>then</keyword>
					<keyword>create</keyword> <local>l_dialog</local>
					<feature><location>../implementation_interface/ev_application_i.xml#f_exception_dialog</location>exception_dialog</feature> <symbol>:=</symbol> <local>l_dialog</local>
					<feature><location>../implementation_interface/ev_application_i.xml#f_raise_default_exception_dialog</location>raise_default_exception_dialog</feature><symbol> </symbol><symbol>(</symbol><local>l_dialog</local><symbol>,</symbol> <local>an_exception</local><symbol>)</symbol>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_raise_default_exception_dialog</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_raise_default_exception_dialog</location>raise_default_exception_dialog</feature> <symbol>(</symbol><local>a_empty_dialog</local><symbol>:</symbol> <class><location>../interface/ev_dialog.xml</location>EV_DIALOG</class><symbol>;</symbol> <local>an_exception</local><symbol>:</symbol> <class><include>False</include>EXCEPTION</class><symbol>)</symbol>
			<comment>--</comment><comment> Raise the exception dialog</comment>
		<keyword>require</keyword>
			<tag>a_empty_dialog_valid</tag><symbol>:</symbol> <local>a_empty_dialog</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and then</keyword> <keyword>not</keyword> <local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>local</keyword>
			<local>l_exception_string</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>STRING_32</class>
			<local>l_label</local><symbol>:</symbol> <class><location>../interface/ev_text.xml</location>EV_TEXT</class>
			<local>l_label_box</local><symbol>:</symbol> <class><location>../interface/ev_horizontal_box.xml</location>EV_HORIZONTAL_BOX</class>
			<local>l_vbox</local><symbol>:</symbol> <class><location>../interface/ev_vertical_box.xml</location>EV_VERTICAL_BOX</class>
			<local>l_hbox</local><symbol>:</symbol> <class><location>../interface/ev_horizontal_box.xml</location>EV_HORIZONTAL_BOX</class>
			<local>l_font</local><symbol>:</symbol> <class><location>../interface/ev_font.xml</location>EV_FONT</class>
			<local>l_ignore</local><symbol>,</symbol> <local>l_quit</local><symbol>:</symbol> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<local>l_frame</local><symbol>:</symbol> <class><location>../interface/ev_frame.xml</location>EV_FRAME</class>
			<local>l_error_box</local><symbol>:</symbol> <class><location>../interface/ev_horizontal_box.xml</location>EV_HORIZONTAL_BOX</class>
			<local>l_error_label</local><symbol>:</symbol> <class><location>../interface/ev_label.xml</location>EV_LABEL</class>
			<local>l_exception_message</local><symbol>:</symbol> <class><include>False</include>READABLE_STRING_GENERAL</class>
		<keyword>do</keyword>
			<local>l_exception_string</local> <symbol>:=</symbol> <local>an_exception</local><dot>.</dot><feature><include>False</include>trace</feature>
			<keyword>if</keyword> <local>l_exception_string</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<local>l_exception_string</local> <symbol>:=</symbol> <local>l_exception_string</local><dot>.</dot><feature><include>False</include>twin</feature>
				<local>l_exception_string</local><dot>.</dot><feature><include>False</include>prune_all</feature><symbol> </symbol><symbol>(</symbol><char>'%R'</char><dot>.</dot><feature><include>False</include>to_character_32</feature><symbol>)</symbol>
			<keyword>end</keyword>
			<keyword>create</keyword> <local>l_label</local>
			<local>l_label</local><dot>.</dot><feature><location>../interface/ev_text.xml#f_disable_word_wrapping</location>disable_word_wrapping</feature>
			<local>l_label</local><dot>.</dot><feature><location>../interface/ev_text_component.xml#f_disable_edit</location>disable_edit</feature>
			<keyword>create</keyword> <local>l_font</local>
			<local>l_font</local><dot>.</dot><feature><location>../interface/ev_font.xml#f_set_family</location>set_family</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../interface/ev_font_constants.xml</location>EV_FONT_CONSTANTS</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_font_constants.xml#f_family_typewriter</location>family_typewriter</feature><symbol>)</symbol>
			<local>l_label</local><dot>.</dot><feature><location>../interface/ev_fontable.xml#f_set_font</location>set_font</feature><symbol> </symbol><symbol>(</symbol><local>l_font</local><symbol>)</symbol>
			<keyword>if</keyword> <local>l_exception_string</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<local>l_label</local><dot>.</dot><feature><location>../interface/ev_textable.xml#f_set_text</location>set_text</feature><symbol> </symbol><symbol>(</symbol><local>l_exception_string</local><symbol>)</symbol>
			<keyword>else</keyword>
				<local>l_label</local><dot>.</dot><feature><location>../interface/ev_textable.xml#f_set_text</location>set_text</feature><symbol> </symbol><symbol>(</symbol>&quot;No trace available.&quot;<symbol>)</symbol>
			<keyword>end</keyword>
			<keyword>create</keyword> <local>l_vbox</local>
			<keyword>create</keyword> <local>l_error_box</local>
			<local>l_error_box</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_set_border_width</location>set_border_width</feature><symbol> </symbol><symbol>(</symbol><number>5</number><symbol>)</symbol>
			<local>l_error_box</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_set_padding</location>set_padding</feature><symbol> </symbol><symbol>(</symbol><number>5</number><symbol>)</symbol>
			<local>l_error_box</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><symbol>(</symbol><keyword>create</keyword><symbol> </symbol><symbol>{</symbol><class><location>../interface/ev_stock_pixmaps.xml</location>EV_STOCK_PIXMAPS</class><symbol>}</symbol><symbol>)</symbol><dot>.</dot><feature><location>../interface/ev_stock_pixmaps.xml#f_error_pixmap</location>Error_pixmap</feature><dot>.</dot><feature><include>False</include>twin</feature><symbol>)</symbol>
			<local>l_error_box</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_disable_item_expand</location>disable_item_expand</feature><symbol> </symbol><symbol>(</symbol><local>l_error_box</local><dot>.</dot><feature><include>False</include>first</feature><symbol>)</symbol>
			<local>l_error_box</local><dot>.</dot><feature><include>False</include>first</feature><dot>.</dot><feature><location>../interface/ev_widget.xml#f_set_minimum_size</location>set_minimum_size</feature><symbol> </symbol><symbol>(</symbol><number>32</number><symbol>,</symbol> <number>32</number><symbol>)</symbol>
			<keyword>create</keyword> <local>l_error_label</local>
			<local>l_error_label</local><dot>.</dot><feature><location>../interface/ev_text_alignable.xml#f_align_text_left</location>align_text_left</feature>
			<local>l_error_label</local><dot>.</dot><feature><location>../interface/ev_textable.xml#f_set_text</location>set_text</feature><symbol> </symbol><symbol>(</symbol>&quot;The following uncaught exception has occurred:%N%NClick Ignore to continue or Quit to exit the application&quot;<symbol>)</symbol>
			<local>l_error_box</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_error_label</local><symbol>)</symbol>
			<local>l_vbox</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_error_box</local><symbol>)</symbol>
			<local>l_vbox</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_disable_item_expand</location>disable_item_expand</feature><symbol> </symbol><symbol>(</symbol><local>l_error_box</local><symbol>)</symbol>
			<keyword>create</keyword> <local>l_frame</local>
			<keyword>create</keyword> <local>l_label_box</local>
			<local>l_frame</local><dot>.</dot><feature><location>../interface/ev_container.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_label_box</local><symbol>)</symbol>
			<local>l_label_box</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_set_padding</location>set_padding</feature><symbol> </symbol><symbol>(</symbol><number>5</number><symbol>)</symbol>
			<local>l_label_box</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_set_border_width</location>set_border_width</feature><symbol> </symbol><symbol>(</symbol><number>5</number><symbol>)</symbol>
			<local>l_label_box</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_label</local><symbol>)</symbol>
			<local>l_frame</local><dot>.</dot><feature><location>../interface/ev_textable.xml#f_set_text</location>set_text</feature><symbol> </symbol><symbol>(</symbol>&quot;Exception Trace&quot;<symbol>)</symbol>
			<local>l_vbox</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_frame</local><symbol>)</symbol>
			<local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_container.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_vbox</local><symbol>)</symbol>
			<keyword>create</keyword> <local>l_hbox</local>
			<local>l_vbox</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_hbox</local><symbol>)</symbol>
			<local>l_vbox</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_disable_item_expand</location>disable_item_expand</feature><symbol> </symbol><symbol>(</symbol><local>l_hbox</local><symbol>)</symbol>
			<keyword>create</keyword> <local>l_ignore</local><dot>.</dot><feature><location>../interface/ev_textable.xml#f_make_with_text</location>make_with_text</feature><symbol> </symbol><symbol>(</symbol>&quot;Ignore&quot;<symbol>)</symbol>
			<local>l_ignore</local><dot>.</dot><feature><location>../interface/ev_button_action_sequences.xml#f_select_actions</location>select_actions</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><keyword>agent</keyword> <local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_window.xml#f_destroy</location>destroy</feature><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><keyword>create</keyword><symbol> </symbol><symbol>{</symbol><class><location>../interface/ev_cell.xml</location>EV_CELL</class><symbol>}</symbol><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_ignore</local><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_disable_item_expand</location>disable_item_expand</feature><symbol> </symbol><symbol>(</symbol><local>l_ignore</local><symbol>)</symbol>
			<keyword>create</keyword> <local>l_quit</local><dot>.</dot><feature><location>../interface/ev_textable.xml#f_make_with_text</location>make_with_text</feature><symbol> </symbol><symbol>(</symbol>&quot;Quit&quot;<symbol>)</symbol>
			<local>l_quit</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_set_minimum_width</location>set_minimum_width</feature><symbol> </symbol><symbol>(</symbol><local>l_ignore</local><dot>.</dot><feature><location>../interface/ev_positioned.xml#f_minimum_width</location>minimum_width</feature><symbol>)</symbol>
			<local>l_quit</local><dot>.</dot><feature><location>../interface/ev_button_action_sequences.xml#f_select_actions</location>select_actions</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><keyword>agent</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_safe_destroy</location>safe_destroy</feature><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_extend</location>extend</feature><symbol> </symbol><symbol>(</symbol><local>l_quit</local><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_disable_item_expand</location>disable_item_expand</feature><symbol> </symbol><symbol>(</symbol><local>l_quit</local><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_set_border_width</location>set_border_width</feature><symbol> </symbol><symbol>(</symbol><number>5</number><symbol>)</symbol>
			<local>l_hbox</local><dot>.</dot><feature><location>../interface/ev_box.xml#f_set_padding</location>set_padding</feature><symbol> </symbol><symbol>(</symbol><number>5</number><symbol>)</symbol>
			<keyword>if</keyword> <keyword>attached</keyword> <local>an_exception</local><dot>.</dot><feature><include>False</include>description</feature> <keyword>as</keyword> l_message <keyword>then</keyword>
				<local>l_exception_message</local> <symbol>:=</symbol> <local>l_message</local>
			<keyword>else</keyword>
				<local>l_exception_message</local> <symbol>:=</symbol> &quot;&quot;
			<keyword>end</keyword>
			<local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_window.xml#f_set_title</location>set_title</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><include>False</include>STRING_32</class><symbol>}</symbol>&quot;Uncaught Exception: &quot; <symbol>+</symbol> <local>l_exception_message</local><symbol>)</symbol>
			<local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_set_minimum_height</location>set_minimum_height</feature><symbol> </symbol><symbol>(</symbol><number>350</number><symbol>)</symbol>
			<local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_positionable.xml#f_set_size</location>set_size</feature><symbol> </symbol><symbol>(</symbol><number>500</number><symbol>,</symbol> <number>300</number><symbol>)</symbol>
			<local>a_empty_dialog</local><dot>.</dot><feature><location>../interface/ev_titled_window.xml#f_raise</location>raise</feature>
			<local>l_ignore</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_set_focus</location>set_focus</feature>
		<keyword>end</keyword>

	<anchor>f_exception_dialog</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_exception_dialog</location>exception_dialog</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_dialog.xml</location>EV_DIALOG</class>
			<comment>--</comment><comment> Dialog used for showing uncaught exceptions.</comment>

	<anchor>f_show_exception_dialog</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_show_exception_dialog</location>Show_exception_dialog</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class> <symbol>=</symbol> <keyword>True</keyword>
			<comment>--</comment><comment> Should the exception dialog be shown by default?</comment>

	<anchor>f_uncaught_exception_actions_called</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_uncaught_exception_actions_called</location>uncaught_exception_actions_called</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Are the </comment><quoted>uncaught_exceptions_actions</quoted><comment> currently being called?</comment>
			<comment>--</comment><comment> This is used to prevent infinite looping should an exception be raised as part of calling </comment><feature><location>../implementation_interface/ev_application_action_sequences_i.xml#f_uncaught_exception_actions</location>uncaught_exception_actions</feature><comment>.</comment>

	<anchor>f_new_exception</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_new_exception</location>new_exception</feature><symbol>:</symbol> <class><include>False</include>EXCEPTION</class>
			<comment>--</comment><comment> New exception object representating the last exception caught in Current</comment>
		<keyword>local</keyword>
			<local>l_result</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>EXCEPTION</class>
		<keyword>do</keyword>
			<local>l_result</local> <symbol>:=</symbol> <feature><include>False</include>Exception_manager</feature><dot>.</dot><feature><include>False</include>last_exception</feature>
			<keyword>check</keyword>
					<local>l_result</local> <symbol>/=</symbol> <keyword>Void</keyword>
			<keyword>then</keyword>
			<keyword>end</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <local>l_result</local>
		<keyword>ensure</keyword>
			<tag>new_exception_not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_wake_up_gui_thread</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_wake_up_gui_thread</location>wake_up_gui_thread</feature>
			<comment>--</comment><comment> Wake up the GUI thread if sleeping.</comment>
		<keyword>do</keyword>
		<keyword>end</keyword>

	<anchor>f_is_gui_thread</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_is_gui_thread</location>is_gui_thread</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is the currently executing thread a gui thread?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_is_gui_thread_cell</location>Is_gui_thread_cell</feature><dot>.</dot><feature><include>False</include>item</feature>
		<keyword>end</keyword>

	<anchor>f_is_gui_thread_cell</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_is_gui_thread_cell</location>Is_gui_thread_cell</feature><symbol>:</symbol> <class><include>False</include>CELL</class> <symbol>[</symbol><class><include>False</include>BOOLEAN</class><symbol>]</symbol>
			<comment>--</comment><comment> Cell holder for </comment><feature><location>../implementation_interface/ev_application_i.xml#f_is_gui_thread</location>is_gui_thread</feature><comment>.</comment>
		<keyword>once</keyword>
			<keyword>create</keyword> <keyword>Result</keyword><dot>.</dot><feature><include>False</include>put</feature><symbol> </symbol><symbol>(</symbol><keyword>False</keyword><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_stop_processing_requested</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_stop_processing_requested</location>stop_processing_requested</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Has 'stop_processing' been called?</comment>

	<anchor>f_clipboard_internal</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_clipboard_internal</location>clipboard_internal</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_clipboard.xml</location>EV_CLIPBOARD</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>

	<anchor>f_old_pointer_style</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_old_pointer_style</location>old_pointer_style</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_pointer_style.xml</location>EV_POINTER_STYLE</class>
			<comment>--</comment><comment> Pointer style of window being used while contextual help is enabled</comment>

	<anchor>f_old_pointer_button_press_actions</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_old_pointer_button_press_actions</location>old_pointer_button_press_actions</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_pointer_button_action_sequence.xml</location>EV_POINTER_BUTTON_ACTION_SEQUENCE</class>
			<comment>--</comment><comment> Button press actions of window being used whie contextual help is enabled</comment>

	<anchor>f_help_handler_procedure</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_help_handler_procedure</location>help_handler_procedure</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>PROCEDURE</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>

	<anchor>f_help_handler</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_help_handler</location>help_handler</feature>
			<comment>--</comment><comment> Display contextual help for currently focused widget.</comment>
		<keyword>local</keyword>
			<local>w</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
		<keyword>do</keyword>
			<local>w</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget</location>focused_widget</feature>
			<keyword>if</keyword> <local>w</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_display_help_for_widget</location>display_help_for_widget</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_contextual_help_handler_procedure</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_handler_procedure</location>contextual_help_handler_procedure</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>PROCEDURE</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>

	<anchor>f_contextual_help_procedure</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_procedure</location>Contextual_help_procedure</feature><symbol>:</symbol> <class><include>False</include>PROCEDURE</class> <symbol>[</symbol><class><include>False</include>INTEGER_32</class><symbol>,</symbol> <class><include>False</include>INTEGER_32</class><symbol>,</symbol> <class><include>False</include>INTEGER_32</class><symbol>,</symbol> <class><include>False</include>REAL_64</class><symbol>,</symbol> <class><include>False</include>REAL_64</class><symbol>,</symbol> <class><include>False</include>REAL_64</class><symbol>,</symbol> <class><include>False</include>INTEGER_32</class><symbol>,</symbol> <class><include>False</include>INTEGER_32</class><symbol>]</symbol>
			<comment>--</comment><comment> Called when mouse pointer is pressed while contextual help is enabled</comment>
		<keyword>once</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword>agent</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help</location>contextual_help</feature>
		<keyword>end</keyword>

	<anchor>f_contextual_help</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help</location>contextual_help</feature> <symbol>(</symbol><local>x</local><symbol>,</symbol> <local>y</local><symbol>,</symbol> <local>button</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>;</symbol> <local>x_tilt</local><symbol>,</symbol> <local>y_tilt</local><symbol>,</symbol> <local>pressure</local><symbol>:</symbol> <class><include>False</include>REAL_64</class><symbol>;</symbol> <local>screen_x</local><symbol>,</symbol> <local>screen_y</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Send help context of widget under mouse cursor when left mouse button is pressed to help engine.</comment>
			<comment>--</comment><comment> Cancel contextual help mode when right mouse button is pressed.</comment>
		<keyword>local</keyword>
			<local>w</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
		<keyword>do</keyword>
			<keyword>if</keyword> <local>button</local> <symbol>=</symbol> <number>1</number> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_application_i.xml#f_disable_contextual_help</location>disable_contextual_help</feature>
				<local>w</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_pnd_screen</location>Pnd_screen</feature><dot>.</dot><feature><location>../interface/ev_screen.xml#f_widget_at_mouse_pointer</location>widget_at_mouse_pointer</feature>
				<keyword>if</keyword> <local>w</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
					<feature><location>../implementation_interface/ev_application_i.xml#f_display_help_for_widget</location>display_help_for_widget</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_disable_contextual_help</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_disable_contextual_help</location>disable_contextual_help</feature>
			<comment>--</comment><comment> Disable contextual help: remove capture and restore mouse pointer style.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature> <keyword>as</keyword> l_captured_widget <keyword>then</keyword>
				<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_old_pointer_button_press_actions</location>old_pointer_button_press_actions</feature> <keyword>as</keyword> l_actions <keyword>then</keyword>
					<local>l_captured_widget</local><dot>.</dot><feature><location>../interface/ev_widget_action_sequences.xml#f_pointer_button_press_actions</location>pointer_button_press_actions</feature><dot>.</dot><feature><include>False</include>fill</feature><symbol> </symbol><symbol>(</symbol><local>l_actions</local><symbol>)</symbol>
				<keyword>end</keyword>
				<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_application_i.xml#f_old_pointer_style</location>old_pointer_style</feature> <keyword>as</keyword> l_old_pointer_style <keyword>then</keyword>
					<local>l_captured_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_set_pointer_style</location>set_pointer_style</feature><symbol> </symbol><symbol>(</symbol><local>l_old_pointer_style</local><symbol>)</symbol>
				<keyword>end</keyword>
				<local>l_captured_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_disable_capture</location>disable_capture</feature>
			<keyword>else</keyword>
				<keyword>check</keyword>
						<keyword>False</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>

	<anchor>f_focused_widget_from_container</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget_from_container</location>focused_widget_from_container</feature> <symbol>(</symbol><local>a_widget</local><symbol>:</symbol> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class><symbol>)</symbol><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
			<comment>--</comment><comment> Child widget of </comment><quoted>a_widget</quoted><comment> with keyboard focus, if any</comment>
		<keyword>local</keyword>
			<local>a_container</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_container.xml</location>EV_CONTAINER</class>
			<local>a_widget_list</local><symbol>:</symbol> <class><include>False</include>LINEAR</class> <symbol>[</symbol><class><location>../interface/ev_widget.xml</location>EV_WIDGET</class><symbol>]</symbol>
			<local>chain</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>CHAIN</class> <symbol>[</symbol><class><location>../interface/ev_widget.xml</location>EV_WIDGET</class><symbol>]</symbol>
			<local>cursor</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>CURSOR</class>
		<keyword>do</keyword>
			<keyword>if</keyword> <local>a_widget</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_has_focus</location>has_focus</feature> <keyword>then</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <local>a_widget</local>
			<keyword>else</keyword>
				<local>a_container</local> <symbol>?=</symbol> <local>a_widget</local>
				<keyword>if</keyword> <local>a_container</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
					<local>chain</local> <symbol>?=</symbol> <local>a_container</local>
					<keyword>if</keyword> <local>chain</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
						<local>cursor</local> <symbol>:=</symbol> <local>chain</local><dot>.</dot><feature><include>False</include>cursor</feature>
					<keyword>end</keyword>
					<keyword>from</keyword>
						<local>a_widget_list</local> <symbol>:=</symbol> <local>a_container</local><dot>.</dot><feature><include>False</include>linear_representation</feature>
						<local>a_widget_list</local><dot>.</dot><feature><include>False</include>start</feature>
					<keyword>until</keyword>
						<local>a_widget_list</local><dot>.</dot><feature><include>False</include>off</feature> <keyword>or</keyword> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
					<keyword>loop</keyword>
						<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget_from_container</location>focused_widget_from_container</feature><symbol> </symbol><symbol>(</symbol><local>a_widget_list</local><dot>.</dot><feature><include>False</include>item</feature><symbol>)</symbol>
						<local>a_widget_list</local><dot>.</dot><feature><include>False</include>forth</feature>
					<keyword>end</keyword>
					<keyword>if</keyword> <local>chain</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
						<keyword>check</keyword>
								<local>cursor</local> <symbol>/=</symbol> <keyword>Void</keyword>
						<keyword>then</keyword>
						<keyword>end</keyword>
						<local>chain</local><dot>.</dot><feature><include>False</include>go_to</feature><symbol> </symbol><symbol>(</symbol><local>cursor</local><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>focused_widget</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>implies</keyword> <keyword>Result</keyword><dot>.</dot><feature><location>../interface/ev_widget.xml#f_has_focus</location>has_focus</feature>
		<keyword>end</keyword>

	<anchor>f_wait_for_input</anchor><feature><location>../implementation_interface/ev_application_i.xml#f_wait_for_input</location>wait_for_input</feature> <symbol>(</symbol><local>msec</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Wait for at most </comment><quoted>msec</quoted><comment> milliseconds for an input.</comment>
		<keyword>require</keyword>
			<tag>msec_non_negative</tag><symbol>:</symbol> <local>msec</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>deferred</keyword>
		<keyword>end</keyword>
	
<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2017, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_interface/ev_application_i.xml</location>EV_APPLICATION_I</class></system>

