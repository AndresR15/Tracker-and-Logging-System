<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Vision dialog. Implementation interface.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2015-06-25 15:41:43 -0700 (Thu, 25 Jun 2015) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 97568 $&quot;</string>

<keyword>deferred</keyword> <keyword>class</keyword> 
	<class><location>../implementation_interface/ev_dialog_i.xml</location>EV_DIALOG_I</class>

<keyword>inherit</keyword>
	<class><location>../implementation_interface/ev_titled_window_i.xml</location>EV_TITLED_WINDOW_I</class>
		<keyword>redefine</keyword>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_interface</location>interface</feature>
		<keyword>end</keyword>

	<class><location>../interface/ev_shared_application.xml</location>EV_SHARED_APPLICATION</class>
		<keyword>export</keyword>
			<symbol>{</symbol>NONE<symbol>}</symbol> <keyword>all</keyword>
		<keyword>end</keyword>

<keyword>feature</keyword> <comment>--</comment><comment> Status Report</comment>

	<anchor>f_is_closeable</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_is_closeable</location>is_closeable</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is the window closeable by the user?</comment>
			<comment>--</comment><comment> (Through a clik on the Window Menu, or by</comment>
			<comment>--</comment><comment> pressing ALT-F4)</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_is_modal</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_is_modal</location>is_modal</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> shown modally to another window?</comment>
			<comment>--</comment><comment> If </comment><quoted>True</quoted><comment> then </comment><quoted>Current</quoted><comment> must be closed before</comment>
			<comment>--</comment><comment> application can receive user events again?</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_is_relative</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_is_relative</location>is_relative</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> shown relative to another window?</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_blocking_window</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_blocking_window</location>blocking_window</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is window </comment><quoted>Current</quoted><comment> is shown to if</comment>
			<comment>--</comment><comment> </comment><feature><location>../implementation_interface/ev_dialog_i.xml#f_is_modal</location>is_modal</feature><comment> or </comment><feature><location>../implementation_interface/ev_dialog_i.xml#f_is_relative</location>is_relative</feature><comment>.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_default_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_default_push_button</location>default_push_button</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<comment>--</comment><comment> Default pushed button. This is the button that</comment>
			<comment>--</comment><comment> is pushed if the user press the enter key unless</comment>
			<comment>--</comment><comment> a push button is currently focused.</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature>
		<keyword>end</keyword>

	<anchor>f_default_cancel_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_default_cancel_button</location>default_cancel_button</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<comment>--</comment><comment> Default cancel button. This is the button that</comment>
			<comment>--</comment><comment> is pushed if the user press the escape key or</comment>
			<comment>--</comment><comment> close the window using the close icon.</comment>
			<comment>--</comment><comment> If there is no default cancel button, the close</comment>
			<comment>--</comment><comment> icon is disabled.</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_cancel_button</location>internal_default_cancel_button</feature>
		<keyword>end</keyword>

	<anchor>f_current_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_current_push_button</location>current_push_button</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<comment>--</comment><comment> Currently focused push button.</comment>
			<comment>--</comment><comment> This is the button that is pushed when the user</comment>
			<comment>--</comment><comment> press the enter key when a push button is focused.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature>
			<keyword>else</keyword>
				<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Status Setting</comment>

	<anchor>f_set_default_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_set_default_push_button</location>set_default_push_button</feature> <symbol>(</symbol><local>a_button</local><symbol>:</symbol> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class><symbol>)</symbol>
			<comment>--</comment><comment> Set the default push button to </comment><quoted>a_button</quoted><comment>.</comment>
			<comment>--</comment><comment> This is the button that is pushed if the user presses</comment>
			<comment>--</comment><comment> the enter key.</comment>
		<keyword>require</keyword>
			<tag>a_button_not_void</tag><symbol>:</symbol> <local>a_button</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>as</keyword> l_internal_default_push_button <keyword>then</keyword>
					<local>l_internal_default_push_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_disable_default_push_button</location>disable_default_push_button</feature>
				<keyword>end</keyword>
				<local>a_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_enable_default_push_button</location>enable_default_push_button</feature>
			<keyword>else</keyword>
				<keyword>check</keyword>
					<tag>internal_default_push_button_disabled</tag><symbol>:</symbol> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>as</keyword> l_button <keyword>implies</keyword> <keyword>not</keyword> <local>l_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_is_default_push_button</location>is_default_push_button</feature>
				<keyword>end</keyword>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <symbol>:=</symbol> <local>a_button</local>
		<keyword>ensure</keyword>
			<tag>default_push_button_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_push_button</location>default_push_button</feature> <symbol>=</symbol> <local>a_button</local>
		<keyword>end</keyword>

	<anchor>f_remove_default_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_remove_default_push_button</location>remove_default_push_button</feature>
			<comment>--</comment><comment> Remove the default push button of this dialog.</comment>
		<keyword>require</keyword>
			<tag>has_default_push_button</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_push_button</location>default_push_button</feature> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<keyword>if</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>as</keyword> l_internal_default_push_button <keyword>then</keyword>
					<local>l_internal_default_push_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_disable_default_push_button</location>disable_default_push_button</feature>
				<keyword>end</keyword>
			<keyword>else</keyword>
				<keyword>check</keyword>
					<tag>internal_default_push_button_disabled</tag><symbol>:</symbol> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>as</keyword> l_button <keyword>and then</keyword> <keyword>not</keyword> <local>l_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_is_default_push_button</location>is_default_push_button</feature>
				<keyword>end</keyword>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <symbol>:=</symbol> <keyword>Void</keyword>
		<keyword>ensure</keyword>
			<tag>not_has_default_push_button</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_push_button</location>default_push_button</feature> <symbol>=</symbol> <keyword>Void</keyword>
		<keyword>end</keyword>

	<anchor>f_set_default_cancel_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_set_default_cancel_button</location>set_default_cancel_button</feature> <symbol>(</symbol><local>a_button</local><symbol>:</symbol> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>a_button</quoted><comment> to default_cancel_button.This is the button</comment>
			<comment>--</comment><comment> that is pushed if the user press the escape key or</comment>
			<comment>--</comment><comment> close the window using the close icon.</comment>
			<comment>--</comment><comment> If there is no default cancel button, the close</comment>
			<comment>--</comment><comment> icon is disabled.</comment>
		<keyword>require</keyword>
			<tag>a_button_not_void</tag><symbol>:</symbol> <local>a_button</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_cancel_button</location>internal_default_cancel_button</feature> <symbol>:=</symbol> <local>a_button</local>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_enable_closeable</location>enable_closeable</feature>
		<keyword>ensure</keyword>
			<tag>default_cancel_button_set</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_cancel_button</location>default_cancel_button</feature> <symbol>=</symbol> <local>a_button</local>
		<keyword>end</keyword>

	<anchor>f_remove_default_cancel_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_remove_default_cancel_button</location>remove_default_cancel_button</feature>
			<comment>--</comment><comment> Remove the default cancel button of this dialog.</comment>
		<keyword>require</keyword>
			<tag>has_default_cancel_button</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_cancel_button</location>default_cancel_button</feature> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_cancel_button</location>internal_default_cancel_button</feature> <symbol>:=</symbol> <keyword>Void</keyword>
			<feature><location>../implementation_interface/ev_dialog_i.xml#f_disable_closeable</location>disable_closeable</feature>
		<keyword>ensure</keyword>
			<tag>not_has_default_cancel_button</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_cancel_button</location>default_cancel_button</feature> <symbol>=</symbol> <keyword>Void</keyword>
		<keyword>end</keyword>

	<anchor>f_enable_closeable</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_enable_closeable</location>enable_closeable</feature>
			<comment>--</comment><comment> Set the window to be closeable by the user.</comment>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>closeable</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_is_closeable</location>is_closeable</feature>
		<keyword>end</keyword>

	<anchor>f_disable_closeable</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_disable_closeable</location>disable_closeable</feature>
			<comment>--</comment><comment> Set the window not to be closeable by the user.</comment>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>not_closeable</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_is_closeable</location>is_closeable</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Basic operations</comment>

	<anchor>f_show_modal_to_window</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_show_modal_to_window</location>show_modal_to_window</feature> <symbol>(</symbol><local>a_window</local><symbol>:</symbol> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>)</symbol>
			<comment>--</comment><comment> Show and wait until window is closed.</comment>
			<comment>--</comment><comment> </comment><quoted>Current</quoted><comment> is show modal with respect to </comment><quoted>a_window</quoted><comment>.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_show_relative_to_window</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_show_relative_to_window</location>show_relative_to_window</feature> <symbol>(</symbol><local>a_window</local><symbol>:</symbol> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>)</symbol>
			<comment>--</comment><comment> Show </comment><quoted>Current</quoted><comment> with respect to </comment><quoted>a_window</quoted><comment>.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_dialog.xml</location>EV_DIALOG</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_dialog_key_press_action</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_dialog_key_press_action</location>dialog_key_press_action</feature> <symbol>(</symbol><local>a_key</local><symbol>:</symbol> <class><location>../interface/ev_key.xml</location>EV_KEY</class><symbol>)</symbol>
		<keyword>local</keyword>
			<local>a_key_code</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<local>l_app_i</local><symbol>:</symbol> <class><location>../implementation_interface/ev_application_i.xml</location>EV_APPLICATION_I</class>
		<keyword>do</keyword>
			<local>l_app_i</local> <symbol>:=</symbol> <feature><location>../interface/ev_shared_application.xml#f_ev_application</location>ev_application</feature><dot>.</dot><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature>
			<keyword>if</keyword> <local>a_key</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>and</keyword> <local>l_app_i</local><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>and</keyword> <local>l_app_i</local><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_pick_and_drop_source</location>pick_and_drop_source</feature> <symbol>=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<local>a_key_code</local> <symbol>:=</symbol> <local>a_key</local><dot>.</dot><feature><location>../interface/ev_key.xml#f_code</location>code</feature>
				<keyword>if</keyword> <local>a_key_code</local> <symbol>=</symbol> <symbol>{</symbol><class><location>../interface/ev_key_constants.xml</location>EV_KEY_CONSTANTS</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_key_constants.xml#f_key_escape</location>key_escape</feature> <keyword>and then</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_default_cancel_button</location>default_cancel_button</feature> <keyword>as</keyword> l_default_cancel_button <keyword>then</keyword>
					<keyword>if</keyword> <local>l_default_cancel_button</local><dot>.</dot><feature><location>../interface/ev_sensitive.xml#f_is_sensitive</location>is_sensitive</feature> <keyword>then</keyword>
						<local>l_default_cancel_button</local><dot>.</dot><feature><location>../interface/ev_button_action_sequences.xml#f_select_actions</location>select_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>elseif</keyword> <local>a_key_code</local> <symbol>=</symbol> <symbol>{</symbol><class><location>../interface/ev_key_constants.xml</location>EV_KEY_CONSTANTS</class><symbol>}</symbol><dot>.</dot><feature><location>../interface/ev_key_constants.xml#f_key_enter</location>key_enter</feature> <keyword>and then</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_current_push_button</location>current_push_button</feature> <keyword>as</keyword> l_current_push_button <keyword>then</keyword>
					<keyword>if</keyword> <local>l_current_push_button</local><dot>.</dot><feature><location>../interface/ev_sensitive.xml#f_is_sensitive</location>is_sensitive</feature> <keyword>and</keyword> <keyword>not</keyword> <local>l_current_push_button</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_has_focus</location>has_focus</feature> <keyword>then</keyword>
						<local>l_current_push_button</local><dot>.</dot><feature><location>../interface/ev_button_action_sequences.xml#f_select_actions</location>select_actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
					<keyword>end</keyword>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_dialog.xml</location>EV_DIALOG</class><symbol>,</symbol> <class><location>../implementation_interface/ev_dialog_i.xml</location>EV_DIALOG_I</class><symbol>,</symbol> <class><location>../implementation_interface/ev_widget_i.xml</location>EV_WIDGET_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_internal_default_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<comment>--</comment><comment> Default pushed button. This is the button that</comment>
			<comment>--</comment><comment> is pushed if the user pushes the enter key and</comment>
			<comment>--</comment><comment> if the widget that has the focus is not a push</comment>
			<comment>--</comment><comment> button.</comment>
			<comment>--</comment><comment> If the focused widget is a push button (it can</comment>
			<comment>--</comment><comment> be the default_push_button) it is pushed when</comment>
			<comment>--</comment><comment> the user presses the enter key.</comment>

	<anchor>f_internal_default_cancel_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_cancel_button</location>internal_default_cancel_button</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<comment>--</comment><comment> The default cancel button is the button pushed</comment>
			<comment>--</comment><comment> when the user press the escape key or close the</comment>
			<comment>--</comment><comment> window using the close icon.</comment>
			<comment>--</comment>
			<comment>--</comment><comment> If there is no default cancel button, the close</comment>
			<comment>--</comment><comment> icon is disabled.</comment>

	<anchor>f_internal_current_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class>
			<comment>--</comment><comment> Current button pushed when the user press the enter</comment>
			<comment>--</comment><comment> key in the dialog.</comment>
			<comment>--</comment><comment> Void if none.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_widget_i.xml</location>EV_WIDGET_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_set_current_push_button</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_set_current_push_button</location>set_current_push_button</feature> <symbol>(</symbol><local>a_button</local><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_button.xml</location>EV_BUTTON</class><symbol>)</symbol>
			<comment>--</comment><comment> Set the push button to be </comment><quoted>a_button</quoted><comment>. </comment><quoted>a_button</quoted><comment> can</comment>
			<comment>--</comment><comment> be Void if there are no more current push button</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_current_push_button</location>current_push_button</feature> <keyword>as</keyword> l_current_push_button <keyword>then</keyword>
				<local>l_current_push_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_disable_default_push_button</location>disable_default_push_button</feature>
			<keyword>end</keyword>
			<keyword>if</keyword> <local>a_button</local> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>then</keyword>
				<keyword>if</keyword> <keyword>not</keyword> <local>a_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_is_default_push_button</location>is_default_push_button</feature> <keyword>then</keyword>
					<local>a_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_enable_default_push_button</location>enable_default_push_button</feature>
				<keyword>end</keyword>
				<keyword>if</keyword> <local>a_button</local> <symbol>/=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>then</keyword>
					<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>:=</symbol> <local>a_button</local>
				<keyword>else</keyword>
					<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>:=</symbol> <keyword>Void</keyword>
				<keyword>end</keyword>
			<keyword>else</keyword>
				<feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>:=</symbol> <keyword>Void</keyword>
				<keyword>if</keyword> <keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>as</keyword> l_internal_default_push_button <keyword>then</keyword>
					<local>l_internal_default_push_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_enable_default_push_button</location>enable_default_push_button</feature>
				<keyword>end</keyword>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>current_push_button_set</tag><symbol>:</symbol> <symbol>(</symbol><local>a_button</local> <symbol>=</symbol> <keyword>Void</keyword> <keyword>or else</keyword> <local>a_button</local> <symbol>/=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature><symbol>)</symbol> <keyword>implies</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>=</symbol> <local>a_button</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_interface</anchor><feature><location>../implementation_interface/ev_dialog_i.xml#f_interface</location>interface</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_dialog.xml</location>EV_DIALOG</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>
	
<keyword>invariant</keyword>
	<tag>internal_default_push_button_distinct_from_current_push_button</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>implies</keyword> <symbol>(</symbol><feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <symbol>/=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature><symbol>)</symbol>
	<tag>internal_current_push_button_distinct_from_default_push_button</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>/=</symbol> <keyword>Void</keyword> <keyword>implies</keyword> <symbol>(</symbol><feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>/=</symbol> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature><symbol>)</symbol>
	<tag>internal_default_push_button_enabled</tag><symbol>:</symbol> <symbol>(</symbol><keyword>attached</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_default_push_button</location>internal_default_push_button</feature> <keyword>as</keyword> l_button <keyword>and then</keyword> <local>l_button</local><dot>.</dot><feature><location>../interface/ev_button.xml#f_is_default_push_button</location>is_default_push_button</feature><symbol>)</symbol> <keyword>implies</keyword> <feature><location>../implementation_interface/ev_dialog_i.xml#f_internal_current_push_button</location>internal_current_push_button</feature> <symbol>=</symbol> <keyword>Void</keyword>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2012, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_interface/ev_dialog_i.xml</location>EV_DIALOG_I</class></system>

