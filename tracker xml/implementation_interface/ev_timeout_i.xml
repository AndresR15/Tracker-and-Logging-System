<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Vision timeout. Implementation interface.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2009-10-21 15:54:14 -0700 (Wed, 21 Oct 2009) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 81213 $&quot;</string>

<keyword>deferred</keyword> <keyword>class</keyword> 
	<class><location>../implementation_interface/ev_timeout_i.xml</location>EV_TIMEOUT_I</class>

<keyword>inherit</keyword>
	<class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class>
		<keyword>redefine</keyword>
			<feature><location>../implementation_interface/ev_timeout_i.xml#f_interface</location>interface</feature>
		<keyword>end</keyword>

<keyword>feature</keyword> <comment>--</comment><comment> Access</comment>

	<anchor>f_interval</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Time between calls to </comment><quoted>interface.actions</quoted><comment> in milliseconds.</comment>
			<comment>--</comment><comment> Zero when disabled.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_count</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Number of times </comment><quoted>interface.actions</quoted><comment> has been called.</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status setting</comment>

	<anchor>f_set_interval</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_set_interval</location>set_interval</feature> <symbol>(</symbol><local>an_interval</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_interval</quoted><comment> in milliseconds to </comment><feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature><comment>.</comment>
			<comment>--</comment><comment> Zero disables.</comment>
		<keyword>require</keyword>
			<tag>an_interval_not_negative</tag><symbol>:</symbol> <local>an_interval</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>interval_assigned</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature> <symbol>=</symbol> <local>an_interval</local>
		<keyword>end</keyword>

	<anchor>f_reset_count</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_reset_count</location>reset_count</feature>
			<comment>--</comment><comment> Set </comment><feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature><comment> to 0.</comment>
		<keyword>do</keyword>
			<feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>:=</symbol> <number>0</number>
		<keyword>ensure</keyword>
			<tag>count_is_zero</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>=</symbol> <number>0</number>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_on_timeout</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_on_timeout</location>on_timeout</feature>
			<comment>--</comment><comment> Call actions and increment count if not already executing.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_timeout_i.xml#f_is_timeout_executing</location>is_timeout_executing</feature> <keyword>and then</keyword> <feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature> <symbol>&gt;</symbol> <number>0</number> <keyword>then</keyword>
				<feature><location>../implementation_interface/ev_timeout_i.xml#f_is_timeout_executing</location>is_timeout_executing</feature> <symbol>:=</symbol> <keyword>True</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><dot>.</dot><feature><location>../interface/ev_lite_action_sequence.xml#f_call</location>call</feature><symbol> </symbol><symbol>(</symbol><keyword>Void</keyword><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>+</symbol> <number>1</number>
				<feature><location>../implementation_interface/ev_timeout_i.xml#f_is_timeout_executing</location>is_timeout_executing</feature> <symbol>:=</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>count_incremented_or_reset</tag><symbol>:</symbol> <symbol>(</symbol><keyword>not</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and</keyword> <keyword>not</keyword> <feature><location>../implementation_interface/ev_timeout_i.xml#f_is_timeout_executing</location>is_timeout_executing</feature> <keyword>and</keyword> <keyword>old</keyword> <feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature> <symbol>&gt;</symbol> <number>0</number><symbol>)</symbol> <keyword>implies</keyword> <symbol>(</symbol><feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>=</symbol> <keyword>old</keyword> <feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>+</symbol> <number>1</number> <keyword>or else</keyword> <feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>=</symbol> <number>1</number><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_is_timeout_executing</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_is_timeout_executing</location>is_timeout_executing</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is the timeout currently executing?</comment>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment>Implementation</comment>

	<anchor>f_interface</anchor><feature><location>../implementation_interface/ev_timeout_i.xml#f_interface</location>interface</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_timeout.xml</location>EV_TIMEOUT</class>
		<keyword>note</keyword>
			option: stable
		<keyword>attribute</keyword>
		<keyword>end</keyword>
	
<keyword>invariant</keyword>
	<tag>interval_not_negative</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature> <symbol>&gt;=</symbol> <number>0</number>
	<tag>count_not_negative</tag><symbol>:</symbol> <feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature> <symbol>&gt;=</symbol> <number>0</number>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2006, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>356 Storke Road, Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_interface/ev_timeout_i.xml</location>EV_TIMEOUT_I</class></system>

