<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;EiffelVision tree-item container. Implementation interface.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2015-12-17 05:34:17 -0800 (Thu, 17 Dec 2015) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 98279 $&quot;</string>

<keyword>deferred</keyword> <keyword>class</keyword> 
	<class><location>../implementation_interface/ev_tree_node_list_i.xml</location>EV_TREE_NODE_LIST_I</class>

<keyword>inherit</keyword>
	<class><location>../implementation_interface/ev_item_list_i.xml</location>EV_ITEM_LIST_I</class> <symbol>[</symbol><class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class><symbol>]</symbol>

<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_find_item_recursively_by_data</anchor><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_find_item_recursively_by_data</location>find_item_recursively_by_data</feature> <symbol>(</symbol><local>data</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>ANY</class><symbol>)</symbol><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class>
			<comment>--</comment><comment> If </comment><quoted>data</quoted><comment> contained in a tree item at any level then</comment>
			<comment>--</comment><comment> assign this item to </comment><quoted>Result</quoted><comment>.</comment>
			<comment>--</comment><comment> Use object comparison by default.</comment>
		<keyword>local</keyword>
			<local>temp_cursor</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>actual_item</local><symbol>:</symbol> <class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class>
		<keyword>do</keyword>
			<local>temp_cursor</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_cursor</location>cursor</feature>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_start</location>start</feature>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><include>False</include>after</feature> <keyword>or</keyword> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<keyword>loop</keyword>
				<local>actual_item</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_item</location>item</feature>
				<keyword>if</keyword> <local>data</local> <symbol>~</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_data</location>data</feature> <keyword>then</keyword>
					<keyword>Result</keyword> <symbol>:=</symbol> <local>actual_item</local>
				<keyword>end</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_forth</location>forth</feature>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_go_to</location>go_to</feature><symbol> </symbol><symbol>(</symbol><local>temp_cursor</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>index_not_changed</tag><symbol>:</symbol> <keyword>old</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_index</location>index</feature> <symbol>=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_index</location>index</feature>
		<keyword>end</keyword>

	<anchor>f_retrieve_item_recursively_by_data</anchor><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_retrieve_item_recursively_by_data</location>retrieve_item_recursively_by_data</feature> <symbol>(</symbol><local>data</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>ANY</class><symbol>;</symbol> <local>should_compare_objects</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class>
			<comment>--</comment><comment> If </comment><quoted>data</quoted><comment> contained in a tree item at any level then</comment>
			<comment>--</comment><comment> assign this item to </comment><quoted>Result</quoted><comment>. Compare objects if</comment>
			<comment>--</comment><comment> </comment><quoted>should_compare_objects</quoted><comment> otherwise compare references.</comment>
		<keyword>local</keyword>
			<local>temp_cursor</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>actual_item</local><symbol>:</symbol> <class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class>
		<keyword>do</keyword>
			<local>temp_cursor</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_cursor</location>cursor</feature>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_start</location>start</feature>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><include>False</include>after</feature> <keyword>or</keyword> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<keyword>loop</keyword>
				<local>actual_item</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_item</location>item</feature>
				<keyword>if</keyword> <symbol>(</symbol><local>should_compare_objects</local> <keyword>and then</keyword> <local>data</local> <symbol>~</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_data</location>data</feature><symbol>)</symbol> <keyword>or else</keyword> <symbol>(</symbol><keyword>not</keyword> <local>should_compare_objects</local> <keyword>and then</keyword> <local>data</local> <symbol>=</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_data</location>data</feature><symbol>)</symbol> <keyword>then</keyword>
					<keyword>Result</keyword> <symbol>:=</symbol> <local>actual_item</local>
				<keyword>else</keyword>
					<keyword>Result</keyword> <symbol>:=</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_tree_node.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_retrieve_item_recursively_by_data</location>retrieve_item_recursively_by_data</feature><symbol> </symbol><symbol>(</symbol><local>data</local><symbol>,</symbol> <local>should_compare_objects</local><symbol>)</symbol>
				<keyword>end</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_forth</location>forth</feature>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_go_to</location>go_to</feature><symbol> </symbol><symbol>(</symbol><local>temp_cursor</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>index_not_changed</tag><symbol>:</symbol> <keyword>old</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_index</location>index</feature> <symbol>=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_index</location>index</feature>
		<keyword>end</keyword>

	<anchor>f_retrieve_items_recursively_by_data</anchor><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_retrieve_items_recursively_by_data</location>retrieve_items_recursively_by_data</feature> <symbol>(</symbol><local>data</local><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>ANY</class><symbol>;</symbol> <local>should_compare_objects</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class><symbol>]</symbol>
			<comment>--</comment><comment> </comment><quoted>Result</quoted><comment> is all tree items contained in </comment><quoted>Current</quoted><comment> at any level,</comment>
			<comment>--</comment><comment> with data matching </comment><quoted>data</quoted><comment>. Compare objects if</comment>
			<comment>--</comment><comment> </comment><quoted>should_compare_objects</quoted><comment> otherwise compare references.</comment>
		<keyword>local</keyword>
			<local>temp_cursor</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>actual_item</local><symbol>:</symbol> <class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class>
		<keyword>do</keyword>
			<local>temp_cursor</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_cursor</location>cursor</feature>
			<keyword>create</keyword> <keyword>Result</keyword><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>0</number><symbol>)</symbol>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_start</location>start</feature>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><include>False</include>after</feature>
			<keyword>loop</keyword>
				<local>actual_item</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_item</location>item</feature>
				<keyword>if</keyword> <symbol>(</symbol><local>should_compare_objects</local> <keyword>and then</keyword> <local>data</local> <symbol>~</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_data</location>data</feature><symbol>)</symbol> <keyword>or else</keyword> <symbol>(</symbol><keyword>not</keyword> <local>should_compare_objects</local> <keyword>and then</keyword> <local>data</local> <symbol>=</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_data</location>data</feature><symbol>)</symbol> <keyword>then</keyword>
					<keyword>Result</keyword><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><local>actual_item</local><symbol>)</symbol>
				<keyword>end</keyword>
				<keyword>Result</keyword><dot>.</dot><feature><include>False</include>append</feature><symbol> </symbol><symbol>(</symbol><local>actual_item</local><dot>.</dot><feature><location>../interface/ev_tree_node.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_retrieve_items_recursively_by_data</location>retrieve_items_recursively_by_data</feature><symbol> </symbol><symbol>(</symbol><local>data</local><symbol>,</symbol> <local>should_compare_objects</local><symbol>)</symbol><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_forth</location>forth</feature>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_go_to</location>go_to</feature><symbol> </symbol><symbol>(</symbol><local>temp_cursor</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>result_not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>end</keyword>

	<anchor>f_has_recursively</anchor><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_has_recursively</location>has_recursively</feature> <symbol>(</symbol><local>an_item</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_item</location>item</feature><symbol>)</symbol><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Does </comment><quoted>Current</quoted><comment> contain </comment><quoted>an_item</quoted><comment> at any level?</comment>
		<keyword>local</keyword>
			<local>temp_cursor</local><symbol>:</symbol> <class><include>False</include>CURSOR</class>
			<local>actual_item</local><symbol>:</symbol> <class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class>
		<keyword>do</keyword>
			<local>temp_cursor</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_cursor</location>cursor</feature>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_start</location>start</feature>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><include>False</include>after</feature> <keyword>or</keyword> <keyword>Result</keyword> <symbol>=</symbol> <keyword>True</keyword>
			<keyword>loop</keyword>
				<local>actual_item</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_item</location>item</feature>
				<keyword>if</keyword> <local>an_item</local> <symbol>=</symbol> <local>actual_item</local> <keyword>then</keyword>
					<keyword>Result</keyword> <symbol>:=</symbol> <keyword>True</keyword>
				<keyword>else</keyword>
					<keyword>Result</keyword> <symbol>:=</symbol> <local>actual_item</local><dot>.</dot><feature><location>../interface/ev_tree_node.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_has_recursively</location>has_recursively</feature><symbol> </symbol><symbol>(</symbol><local>an_item</local><symbol>)</symbol>
				<keyword>end</keyword>
				<feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_forth</location>forth</feature>
			<keyword>end</keyword>
			<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_go_to</location>go_to</feature><symbol> </symbol><symbol>(</symbol><local>temp_cursor</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>index_not_changed</tag><symbol>:</symbol> <keyword>old</keyword> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_index</location>index</feature> <symbol>=</symbol> <feature><location>../implementation_interface/ev_any_i.xml#f_attached_interface</location>attached_interface</feature><dot>.</dot><feature><location>../interface/ev_dynamic_list.xml#f_index</location>index</feature>
		<keyword>end</keyword>

	<anchor>f_recursive_do_all</anchor><feature><location>../implementation_interface/ev_tree_node_list_i.xml#f_recursive_do_all</location>recursive_do_all</feature> <symbol>(</symbol><local>action</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class> <symbol>[</symbol><class><location>../interface/ev_tree_node.xml</location>EV_TREE_NODE</class><symbol>]</symbol><symbol>)</symbol>
			<comment>--</comment><comment> Apply </comment><quoted>action</quoted><comment> to every item.</comment>
			<comment>--</comment><comment> Semantics not guaranteed if </comment><quoted>action</quoted><comment> changes the structure;</comment>
		<keyword>local</keyword>
			<local>l_item</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_item</location>item</feature>
		<keyword>do</keyword>
			<keyword>from</keyword>
				<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_start</location>start</feature>
			<keyword>until</keyword>
				<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_off</location>off</feature>
			<keyword>loop</keyword>
				<local>l_item</local> <symbol>:=</symbol> <feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_item</location>item</feature>
				<local>l_item</local><dot>.</dot><feature><location>../interface/ev_tree_node_list.xml#f_recursive_do_all</location>recursive_do_all</feature><symbol> </symbol><symbol>(</symbol><local>action</local><symbol>)</symbol>
				<local>action</local><dot>.</dot><feature><include>False</include>call</feature><symbol> </symbol><symbol>(</symbol><symbol>[</symbol><local>l_item</local><symbol>]</symbol><symbol>)</symbol>
				<feature><location>../implementation_interface/ev_dynamic_list_i.xml#f_forth</location>forth</feature>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2012, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../implementation_interface/ev_tree_node_list_i.xml</location>EV_TREE_NODE_LIST_I</class></system>

