<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Base class for Eiffel Vision interface.%NEiffel Vision uses the bridge pattern.%N(See bridge pattern notes below.)%NDescendents of this class are coupled to descendents of EV_ANY_I%N(the base class for Eiffel Vision implementation classes).%NEV_ANY's descendants provide a common interface across all%Nplatforms while EV_ANY_I's descendants provide any necessary%Nplatform specific implementation.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;interface, base, root, any&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2016-09-27 08:50:48 -0700 (Tue, 27 Sep 2016) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 99192 $&quot;</string>

<keyword>deferred</keyword> <keyword>class</keyword> 
	<class><location>../interface/ev_any.xml</location>EV_ANY</class>

<keyword>inherit</keyword>
	<class><include>False</include>ANY</class>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature><symbol>,</symbol>
			<feature><location>../interface/ev_any.xml#f_copy</location>copy</feature>
		<keyword>end</keyword>

<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any_handler.xml</location>EV_ANY_HANDLER</class><symbol>}</symbol> <comment>--</comment><comment> Initialization</comment>

	<anchor>f_default_create</anchor><keyword>frozen</keyword> <feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature>
			<comment>--</comment><comment> Standard creation procedure.</comment>
		<keyword>do</keyword>
			<feature><location>../interface/ev_any.xml#f_create_interface_objects</location>create_interface_objects</feature>
			<feature><location>../interface/ev_any.xml#f_create_implementation</location>create_implementation</feature>
			<keyword>check</keyword>
				<tag>not_already_called</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_default_create_called_flag</location>interface_default_create_called_flag</feature><symbol>)</symbol>
			<keyword>end</keyword>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_default_create_called_flag</location>interface_default_create_called_flag</feature><symbol>,</symbol> <keyword>True</keyword><symbol>)</symbol>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_assign_interface</location>assign_interface</feature><symbol> </symbol><symbol>(</symbol><keyword>Current</keyword><symbol>)</symbol>
			<feature><location>../interface/ev_any.xml#f_initialize</location>initialize</feature>
		<keyword>ensure then</keyword>
			<tag>is_coupled</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>is_initialized</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_is_initialized</location>is_initialized</feature>
			<tag>default_create_called</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_default_create_called</location>default_create_called</feature>
			<tag>is_in_default_state</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_is_in_default_state</location>is_in_default_state</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Access</comment>

	<anchor>f_data</anchor><feature><location>../interface/ev_any.xml#f_data</location>data</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><include>False</include>ANY</class>
			<comment>--</comment><comment> Arbitrary user data may be stored here.</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Element change</comment>

	<anchor>f_set_data</anchor><feature><location>../interface/ev_any.xml#f_set_data</location>set_data</feature> <symbol>(</symbol><local>some_data</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../interface/ev_any.xml#f_data</location>data</feature><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>some_data</quoted><comment> to </comment><feature><location>../interface/ev_any.xml#f_data</location>data</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_any.xml#f_data</location>data</feature> <symbol>:=</symbol> <local>some_data</local>
		<keyword>ensure</keyword>
			<tag>data_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_data</location>data</feature> <symbol>=</symbol> <local>some_data</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Command</comment>

	<anchor>f_destroy</anchor><feature><location>../interface/ev_any.xml#f_destroy</location>destroy</feature>
			<comment>--</comment><comment> Destroy underlying native toolkit object.</comment>
			<comment>--</comment><comment> Render </comment><quoted>Current</quoted><comment> unusable.</comment>
		<keyword>do</keyword>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_safe_destroy</location>safe_destroy</feature>
		<keyword>ensure</keyword>
			<tag>is_destroyed</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status Report</comment>

	<anchor>f_is_destroyed</anchor><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> no longer usable?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>ensure</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>=</symbol> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_implementation</anchor><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><symbol>:</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class>
			<comment>--</comment><comment> Responsible for interaction with native graphics</comment>
			<comment>--</comment><comment> toolkit.</comment>

	<anchor>f_replace_implementation</anchor><feature><location>../interface/ev_any.xml#f_replace_implementation</location>replace_implementation</feature> <symbol>(</symbol><local>new_implementation</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><symbol>)</symbol>
			<comment>--</comment><comment> Replace </comment><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><comment> with </comment><quoted>new_implementation</quoted><comment>.</comment>
			<comment>--</comment><comment> The caller has complete responsibility for releasing any</comment>
			<comment>--</comment><comment> resources held by the old </comment><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>implementation_not_void</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>new_implementation_not_void</tag><symbol>:</symbol> <local>new_implementation</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>local</keyword>
			<local>temp</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
		<keyword>do</keyword>
			<local>temp</local> <symbol>:=</symbol> <symbol>{</symbol><class><include>False</include>ISE_RUNTIME</class><symbol>}</symbol><dot>.</dot><feature><include>False</include>check_assert</feature> <symbol>(</symbol><keyword>False</keyword><symbol>)</symbol>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_disable_initialized</location>disable_initialized</feature>
			<local>new_implementation</local><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_set_interface</location>set_interface</feature><symbol> </symbol><symbol>(</symbol><keyword>Current</keyword><symbol>)</symbol>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature> <symbol>:=</symbol> <local>new_implementation</local>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_enable_initialized</location>enable_initialized</feature>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_default_create_called_flag</location>interface_default_create_called_flag</feature><symbol>,</symbol> <keyword>True</keyword><symbol>)</symbol>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_is_initialized_flag</location>interface_is_initialized_flag</feature><symbol>,</symbol> <keyword>True</keyword><symbol>)</symbol>
			<local>temp</local> <symbol>:=</symbol> <symbol>{</symbol><class><include>False</include>ISE_RUNTIME</class><symbol>}</symbol><dot>.</dot><feature><include>False</include>check_assert</feature> <symbol>(</symbol><local>temp</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_create_implementation</anchor><feature><location>../interface/ev_any.xml#f_create_implementation</location>create_implementation</feature>
			<comment>--</comment><comment> Create </comment><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><comment>.</comment>
			<comment>--</comment><comment> Must be defined in each descendant to create the</comment>
			<comment>--</comment><comment> appropriate </comment><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><comment> object.</comment>
			<comment>--</comment><comment>		require</comment>
			<comment>--</comment><comment>			implementation_not_already_created: implementation = Void</comment>
		<keyword>deferred</keyword>
		<keyword>ensure</keyword>
			<tag>implementation_created</tag><symbol>:</symbol> <keyword>attached</keyword> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature>
		<keyword>end</keyword>

	<anchor>f_create_interface_objects</anchor><feature><location>../interface/ev_any.xml#f_create_interface_objects</location>create_interface_objects</feature>
			<comment>--</comment><comment> Create objects to be used by </comment><quoted>Current</quoted><comment> in </comment><feature><location>../interface/ev_any.xml#f_initialize</location>initialize</feature>
			<comment>--</comment><comment> Implemented by descendants to create attached objects</comment>
			<comment>--</comment><comment> in order to adhere to void-safety due to the implementation bridge pattern.</comment>
		<keyword>deferred</keyword>
		<keyword>end</keyword>

	<anchor>f_initialize</anchor><feature><location>../interface/ev_any.xml#f_initialize</location>initialize</feature>
			<comment>--</comment><comment> Mark </comment><quoted>Current</quoted><comment> as initialized.</comment>
			<comment>--</comment><comment> This must be called during the creation procedure</comment>
			<comment>--</comment><comment> to satisfy the </comment><feature><location>../interface/ev_any.xml#f_is_initialized</location>is_initialized</feature><comment> invariant.</comment>
			<comment>--</comment><comment> Descendants may redefine initialize to perform</comment>
			<comment>--</comment><comment> additional setup tasks.</comment>
		<keyword>require</keyword>
			<tag>not_already_initialized</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_initialized</location>is_initialized</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_set_state_flag</location>set_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_is_initialized_flag</location>interface_is_initialized_flag</feature><symbol>,</symbol> <keyword>True</keyword><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>is_initialized</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_is_initialized</location>is_initialized</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Duplication</comment>

	<anchor>f_copy</anchor><feature><location>../interface/ev_any.xml#f_copy</location>copy</feature> <symbol>(</symbol><local>other</local><symbol>:</symbol> <keyword>like</keyword> <keyword>Current</keyword><symbol>)</symbol>
			<comment>--</comment><comment> Update current object using fields of object attached</comment>
			<comment>--</comment><comment> to </comment><quoted>other</quoted><comment>, so as to yield equal objects.</comment>
		<keyword>do</keyword>
			<keyword>check</keyword>
				<tag>cannot_copy_this_vision2_class</tag><symbol>:</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Contract support</comment>

	<anchor>f_is_in_default_state</anchor><feature><location>../interface/ev_any.xml#f_is_in_default_state</location>is_in_default_state</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> in its default state?</comment>
		<keyword>do</keyword>
			<keyword>check</keyword>
				<tag>should_only_be_called_from_default_create_postcondition</tag><symbol>:</symbol> <keyword>False</keyword>
			<keyword>end</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword>True</keyword>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_environment_i</anchor><feature><location>../interface/ev_any.xml#f_environment_i</location>Environment_i</feature><symbol>:</symbol> <class><location>../implementation_interface/ev_environment_i.xml</location>EV_ENVIRONMENT_I</class>
			<comment>--</comment><comment> Once access to Environment Implementation Object</comment>
		<keyword>once</keyword>
			<keyword>create</keyword> <symbol>{</symbol><class><location>../implementation_gtk/ev_environment_imp.xml</location>EV_ENVIRONMENT_IMP</class><symbol>}</symbol> <keyword>Result</keyword><dot>.</dot><feature><location>../implementation_gtk/ev_environment_imp.xml#f_make</location>make</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol> <comment>--</comment><comment> Contract support</comment>

	<anchor>f_action_sequence_call_counter</anchor><feature><location>../interface/ev_any.xml#f_action_sequence_call_counter</location>action_sequence_call_counter</feature><symbol>:</symbol> <class><include>False</include>NATURAL_32</class>
			<comment>--</comment><comment> Call counter for </comment><quoted>{EV_LITE_ACTION_SEQUENCE}.call</quoted><comment>, used to determine</comment>
			<comment>--</comment><comment> if calls have been made as a result of a routine executing.</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_any.xml#f_environment_i</location>Environment_i</feature><dot>.</dot><feature><location>../implementation_interface/ev_environment_i.xml#f_application_i</location>application_i</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_action_sequence_call_counter</location>action_sequence_call_counter</feature>
		<keyword>end</keyword>

	<anchor>f_is_usable</anchor><feature><location>../interface/ev_any.xml#f_is_usable</location>is_usable</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> usable?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_any.xml#f_default_create_called</location>default_create_called</feature> <keyword>and then</keyword> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>end</keyword>

	<anchor>f_default_create_called</anchor><feature><location>../interface/ev_any.xml#f_default_create_called</location>default_create_called</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Has </comment><feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature><comment> been called on </comment><quoted>Current</quoted><comment>?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_default_create_called_flag</location>interface_default_create_called_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_is_initialized</anchor><feature><location>../interface/ev_any.xml#f_is_initialized</location>is_initialized</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Has </comment><quoted>Current</quoted><comment> been initialized properly?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_get_state_flag</location>get_state_flag</feature><symbol> </symbol><symbol>(</symbol><symbol>{</symbol><class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface_is_initialized_flag</location>interface_is_initialized_flag</feature><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>invariant</keyword>
	<tag>is_initialized</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_is_initialized</location>is_initialized</feature>
	<tag>default_create_called</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_default_create_called</location>default_create_called</feature>
	<tag>is_coupled</tag><symbol>:</symbol> <feature><location>../interface/ev_any.xml#f_default_create_called</location>default_create_called</feature> <keyword>implies</keyword> <symbol>(</symbol><feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature> <symbol>=</symbol> <keyword>Current</keyword> <keyword>or</keyword> <symbol>(</symbol><keyword>attached</keyword> <symbol>{</symbol><class><location>../interface/ev_environment.xml</location>EV_ENVIRONMENT</class><symbol>}</symbol> <keyword>Current</keyword> <keyword>and then</keyword> <keyword>attached</keyword> <feature><location>../interface/ev_any.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_any_i.xml#f_interface</location>interface</feature><symbol>)</symbol><symbol>)</symbol>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2014, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../interface/ev_any.xml</location>EV_ANY</class></system>

