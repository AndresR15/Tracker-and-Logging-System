<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Vision Application.%NTo start an Eiffel Vision application: create exactly oneEV_APPLICATION object and call </string><feature><location>../interface/ev_application.xml#f_launch</location>launch</feature><string> after setting up initialwindow(s)&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;application, accelerator, event loop&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2016-09-27 08:50:48 -0700 (Tue, 27 Sep 2016) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 99192 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../interface/ev_application.xml</location>EV_APPLICATION</class>

<keyword>inherit</keyword>
	<class><location>../interface/ev_any.xml</location>EV_ANY</class>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><symbol>,</symbol>
			<feature><location>../interface/ev_application.xml#f_initialize</location>initialize</feature>
		<keyword>end</keyword>

	<class><location>../interface/ev_application_action_sequences.xml</location>EV_APPLICATION_ACTION_SEQUENCES</class>

<keyword>create</keyword> 
	<feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature>

<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Initialization is</comment>

	<anchor>f_initialize</anchor><feature><location>../interface/ev_application.xml#f_initialize</location>initialize</feature>
			<comment>--</comment><comment> Mark </comment><quoted>Current</quoted><comment> as initialized.</comment>
		<keyword>local</keyword>
			<local>scoop_support</local><symbol>:</symbol> <class><include>False</include>ISE_SCOOP_RUNTIME</class>
		<keyword>do</keyword>
			<keyword>create</keyword> <local>scoop_support</local>
			<local>scoop_support</local><dot>.</dot><feature><include>False</include>pin_to_thread</feature>
			<feature><location>../interface/ev_application.xml#f_set_tooltip_delay</location>set_tooltip_delay</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_application.xml#f_default_tooltip_delay</location>Default_tooltip_delay</feature><symbol>)</symbol>
			<keyword><location>../interface/ev_any.xml#f_initialize</location>Precursor</keyword>
		<keyword>ensure then</keyword>
			<tag>tooltip_delay_initialized</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_tooltip_delay</location>tooltip_delay</feature> <symbol>=</symbol> <feature><location>../interface/ev_application.xml#f_default_tooltip_delay</location>Default_tooltip_delay</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Access</comment>

	<anchor>f_windows</anchor><feature><location>../interface/ev_application.xml#f_windows</location>windows</feature><symbol>:</symbol> <class><include>False</include>LINEAR</class> <symbol>[</symbol><class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>]</symbol>
			<comment>--</comment><comment> All of the application's windows.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_windows</location>windows</feature>
		<keyword>ensure</keyword>
			<tag>not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword><dot>.</dot><feature><include>False</include>is_equal</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_windows</location>windows</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_locked_window</anchor><feature><location>../interface/ev_application.xml#f_locked_window</location>locked_window</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class>
			<comment>--</comment><comment> Window currently locked. Void if no window</comment>
			<comment>--</comment><comment> is currently locked.</comment>
			<comment>--</comment>
			<comment>--</comment><comment> See </comment><quoted>{EV_WINDOW}.lock_update</quoted><comment> for more details</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_locked_window</location>locked_window</feature>
		<keyword>end</keyword>

	<anchor>f_captured_widget</anchor><feature><location>../interface/ev_application.xml#f_captured_widget</location>captured_widget</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
			<comment>--</comment><comment> Widget currently captured. Void if none.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_captured_widget</location>captured_widget</feature>
		<keyword>end</keyword>

	<anchor>f_help_accelerator</anchor><feature><location>../interface/ev_application.xml#f_help_accelerator</location>help_accelerator</feature><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class>
			<comment>--</comment><comment> Accelerator that displays contextual help</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature>
		<keyword>ensure</keyword>
			<tag>not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_is_equal</location>is_equal</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_help_accelerator</location>help_accelerator</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_contextual_help_accelerator</anchor><feature><location>../interface/ev_application.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class>
			<comment>--</comment><comment> Accelerator that enables contextual help mode</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature>
		<keyword>ensure</keyword>
			<tag>not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword><dot>.</dot><feature><location>../interface/ev_accelerator.xml#f_is_equal</location>is_equal</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_help_engine</anchor><feature><location>../interface/ev_application.xml#f_help_engine</location>help_engine</feature><symbol>:</symbol> <class><location>../interface/ev_help_engine.xml</location>EV_HELP_ENGINE</class>
			<comment>--</comment><comment> Object that handles contextual help display requests</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature>
		<keyword>ensure</keyword>
			<tag>not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword><dot>.</dot><feature><include>False</include>is_equal</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_help_engine</location>help_engine</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_clipboard</anchor><feature><location>../interface/ev_application.xml#f_clipboard</location>clipboard</feature><symbol>:</symbol> <class><location>../interface/ev_clipboard.xml</location>EV_CLIPBOARD</class>
			<comment>--</comment><comment> Native platform clipboard access.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_clipboard</location>clipboard</feature>
		<keyword>ensure</keyword>
			<tag>not_void</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>/=</symbol> <keyword>Void</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword><dot>.</dot><feature><include>False</include>is_equal</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_clipboard</location>clipboard</feature><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Element Change</comment>

	<anchor>f_set_help_accelerator</anchor><feature><location>../interface/ev_application.xml#f_set_help_accelerator</location>set_help_accelerator</feature> <symbol>(</symbol><local>an_accelerator</local><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_accelerator</quoted><comment> to </comment><feature><location>../interface/ev_application.xml#f_help_accelerator</location>help_accelerator</feature>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>an_accelerator_not_void</tag><symbol>:</symbol> <local>an_accelerator</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_set_help_accelerator</location>set_help_accelerator</feature><symbol> </symbol><symbol>(</symbol><local>an_accelerator</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>help_accelerator_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_help_accelerator</location>help_accelerator</feature> <symbol>=</symbol> <local>an_accelerator</local>
		<keyword>end</keyword>

	<anchor>f_set_contextual_help_accelerator</anchor><feature><location>../interface/ev_application.xml#f_set_contextual_help_accelerator</location>set_contextual_help_accelerator</feature> <symbol>(</symbol><local>an_accelerator</local><symbol>:</symbol> <class><location>../interface/ev_accelerator.xml</location>EV_ACCELERATOR</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_accelerator</quoted><comment> to </comment><feature><location>../interface/ev_application.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>an_accelerator_not_void</tag><symbol>:</symbol> <local>an_accelerator</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_set_contextual_help_accelerator</location>set_contextual_help_accelerator</feature><symbol> </symbol><symbol>(</symbol><local>an_accelerator</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>contextual_help_accelerator_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_contextual_help_accelerator</location>contextual_help_accelerator</feature> <symbol>=</symbol> <local>an_accelerator</local>
		<keyword>end</keyword>

	<anchor>f_set_help_engine</anchor><feature><location>../interface/ev_application.xml#f_set_help_engine</location>set_help_engine</feature> <symbol>(</symbol><local>an_engine</local><symbol>:</symbol> <class><location>../interface/ev_help_engine.xml</location>EV_HELP_ENGINE</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_engine</quoted><comment> to </comment><feature><location>../interface/ev_application.xml#f_help_engine</location>help_engine</feature>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>an_engine_not_void</tag><symbol>:</symbol> <local>an_engine</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_set_help_engine</location>set_help_engine</feature><symbol> </symbol><symbol>(</symbol><local>an_engine</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>help_engine_set</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_help_engine</location>help_engine</feature> <symbol>=</symbol> <local>an_engine</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Basic operation</comment>

	<anchor>f_launch</anchor><feature><location>../interface/ev_application.xml#f_launch</location>launch</feature>
			<comment>--</comment><comment> Start the application.</comment>
			<comment>--</comment><comment> This begins the event processing loop.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>not_already_launched</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature>
		<keyword>local</keyword>
			<local>l_handler</local><symbol>:</symbol> <keyword>like</keyword> <feature><location>../interface/ev_application.xml#f_application_handler</location>application_handler</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature> <symbol>:=</symbol> <keyword>True</keyword>
			<keyword>create</keyword> <local>l_handler</local><dot>.</dot><feature><location>../interface/ev_application_handler.xml#f_make</location>make</feature><symbol> </symbol><symbol>(</symbol><keyword>Current</keyword><symbol>)</symbol>
			<feature><location>../interface/ev_application.xml#f_application_handler</location>application_handler</feature> <symbol>:=</symbol> <local>l_handler</local>
			<feature><location>../interface/ev_application.xml#f_internal_launch_application</location>internal_launch_application</feature><symbol> </symbol><symbol>(</symbol><local>l_handler</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>is_launched</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature>
		<keyword>rescue</keyword>
			<feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature> <symbol>:=</symbol> <keyword>False</keyword>
		<keyword>end</keyword>

	<anchor>f_process_events</anchor><feature><location>../interface/ev_application.xml#f_process_events</location>process_events</feature>
			<comment>--</comment><comment> Process any pending events.</comment>
			<comment>--</comment><comment> Pass control to the underlying native toolkit so that it can</comment>
			<comment>--</comment><comment> handle any events that may be in its queue.</comment>
			<comment>--</comment><comment> (Should be called from time to time during extended computation.)</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>is_launched</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_process_events</location>process_events</feature>
		<keyword>end</keyword>

	<anchor>f_process_events_until_stopped</anchor><feature><location>../interface/ev_application.xml#f_process_events_until_stopped</location>process_events_until_stopped</feature>
			<comment>--</comment><comment> Process all events until 'stop_processing' is called.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>is_launched</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_process_events_until_stopped</location>process_events_until_stopped</feature>
		<keyword>end</keyword>

	<anchor>f_process_graphical_events</anchor><feature><location>../interface/ev_application.xml#f_process_graphical_events</location>process_graphical_events</feature>
			<comment>--</comment><comment> Process any pending paint events.</comment>
			<comment>--</comment><comment> Pass control to the GUI toolkit so that it can</comment>
			<comment>--</comment><comment> handle any paint events that may be in its queue.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>is_launched</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_process_graphical_events</location>process_graphical_events</feature>
		<keyword>end</keyword>

	<anchor>f_stop_processing</anchor><feature><location>../interface/ev_application.xml#f_stop_processing</location>stop_processing</feature>
			<comment>--</comment><comment>  Exit </comment><feature><location>../interface/ev_application.xml#f_process_events_until_stopped</location>process_events_until_stopped</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>is_launched</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_stop_processing</location>stop_processing</feature>
		<keyword>end</keyword>

	<anchor>f_sleep</anchor><feature><location>../interface/ev_application.xml#f_sleep</location>sleep</feature> <symbol>(</symbol><local>msec</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Wait for </comment><quoted>msec</quoted><comment> milliseconds and return.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>msec_non_negative</tag><symbol>:</symbol> <local>msec</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_sleep</location>sleep</feature><symbol> </symbol><symbol>(</symbol><local>msec</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_enable_contextual_help</anchor><feature><location>../interface/ev_application.xml#f_enable_contextual_help</location>enable_contextual_help</feature>
			<comment>--</comment><comment> Change mouse cursor to help cursor.</comment>
			<comment>--</comment><comment> Capture mouse input.</comment>
			<comment>--</comment><comment> Send help context of widget being clicked to help engine for</comment>
			<comment>--</comment><comment> processing.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_enable_contextual_help</location>enable_contextual_help</feature>
		<keyword>end</keyword>

	<anchor>f_display_help_for_widget</anchor><feature><location>../interface/ev_application.xml#f_display_help_for_widget</location>display_help_for_widget</feature> <symbol>(</symbol><local>a_widget</local><symbol>:</symbol> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class><symbol>)</symbol>
			<comment>--</comment><comment> Display contextual help for </comment><quoted>a_widget</quoted><comment>, if any.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>a_widget_not_void</tag><symbol>:</symbol> <local>a_widget</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_display_help_for_widget</location>display_help_for_widget</feature><symbol> </symbol><symbol>(</symbol><local>a_widget</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_is_launched</anchor><feature><location>../interface/ev_application.xml#f_is_launched</location>is_launched</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Has </comment><feature><location>../interface/ev_application.xml#f_launch</location>launch</feature><comment> been called?</comment>

	<anchor>f_tooltip_delay</anchor><feature><location>../interface/ev_application.xml#f_tooltip_delay</location>tooltip_delay</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Time in milliseconds which the pointer must be stationary over</comment>
			<comment>--</comment><comment> a widget before a tooltip appears.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_tooltip_delay</location>tooltip_delay</feature>
		<keyword>ensure</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_tooltip_delay</location>tooltip_delay</feature>
		<keyword>end</keyword>

	<anchor>f_default_tooltip_delay</anchor><feature><location>../interface/ev_application.xml#f_default_tooltip_delay</location>Default_tooltip_delay</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class> <symbol>=</symbol> <number>500</number>
			<comment>--</comment><comment> Default delay in milleseconds for tooltips.</comment>

	<anchor>f_focused_widget</anchor><feature><location>../interface/ev_application.xml#f_focused_widget</location>focused_widget</feature><symbol>:</symbol> <keyword>detachable</keyword> <class><location>../interface/ev_widget.xml</location>EV_WIDGET</class>
			<comment>--</comment><comment> Widget that has keyboard focus.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget</location>focused_widget</feature>
		<keyword>ensure</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_focused_widget</location>focused_widget</feature>
		<keyword>end</keyword>

	<anchor>f_transport_in_progress</anchor><feature><location>../interface/ev_application.xml#f_transport_in_progress</location>transport_in_progress</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is a Pick and Drop transport currently in progress?</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_transport_in_progress</location>transport_in_progress</feature>
		<keyword>end</keyword>

	<anchor>f_ctrl_pressed</anchor><feature><location>../interface/ev_application.xml#f_ctrl_pressed</location>ctrl_pressed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is ctrl key currently pressed?</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_ctrl_pressed</location>ctrl_pressed</feature>
		<keyword>end</keyword>

	<anchor>f_alt_pressed</anchor><feature><location>../interface/ev_application.xml#f_alt_pressed</location>alt_pressed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is alt key currently pressed?</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_alt_pressed</location>alt_pressed</feature>
		<keyword>end</keyword>

	<anchor>f_shift_pressed</anchor><feature><location>../interface/ev_application.xml#f_shift_pressed</location>shift_pressed</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is shift key currently pressed?</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_shift_pressed</location>shift_pressed</feature>
		<keyword>end</keyword>

	<anchor>f_caps_lock_on</anchor><feature><location>../interface/ev_application.xml#f_caps_lock_on</location>caps_lock_on</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is caps lock key currently on?</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_caps_lock_on</location>caps_lock_on</feature>
		<keyword>end</keyword>

	<anchor>f_is_display_remote</anchor><feature><location>../interface/ev_application.xml#f_is_display_remote</location>is_display_remote</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is application display remote?</comment>
			<comment>--</comment><comment> This function is primarily to determine if drawing to the display is optimal.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_is_display_remote</location>is_display_remote</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status setting</comment>

	<anchor>f_set_tooltip_delay</anchor><feature><location>../interface/ev_application.xml#f_set_tooltip_delay</location>set_tooltip_delay</feature> <symbol>(</symbol><local>a_delay</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>a_delay</quoted><comment> to </comment><feature><location>../interface/ev_application.xml#f_tooltip_delay</location>tooltip_delay</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>a_delay_non_negative</tag><symbol>:</symbol> <local>a_delay</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_set_tooltip_delay</location>set_tooltip_delay</feature><symbol> </symbol><symbol>(</symbol><local>a_delay</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_tooltip_delay</location>tooltip_delay</feature> <symbol>=</symbol> <local>a_delay</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Event handling</comment>

	<anchor>f_add_idle_action_kamikaze</anchor><feature><location>../interface/ev_application.xml#f_add_idle_action_kamikaze</location>add_idle_action_kamikaze</feature> <symbol>(</symbol><local>an_action</local><symbol>:</symbol> <keyword>separate</keyword> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Perform </comment><quoted>an_action</quoted><comment> one time when the application is next idle.</comment>
			<comment>--</comment><comment> Thread safe</comment>
			<comment>--</comment><comment> Was declared in </comment><class><location>../interface/ev_application.xml</location>EV_APPLICATION</class><comment> as synonym of </comment><feature><location>../interface/ev_application.xml#f_do_once_on_idle</location>do_once_on_idle</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_do_once_on_idle</location>do_once_on_idle</feature><symbol> </symbol><symbol>(</symbol><local>an_action</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_do_once_on_idle</anchor><feature><location>../interface/ev_application.xml#f_do_once_on_idle</location>do_once_on_idle</feature> <symbol>(</symbol><local>an_action</local><symbol>:</symbol> <keyword>separate</keyword> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Perform </comment><quoted>an_action</quoted><comment> one time when the application is next idle.</comment>
			<comment>--</comment><comment> Thread safe</comment>
			<comment>--</comment><comment> Was declared in </comment><class><location>../interface/ev_application.xml</location>EV_APPLICATION</class><comment> as synonym of </comment><feature><location>../interface/ev_application.xml#f_add_idle_action_kamikaze</location>add_idle_action_kamikaze</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_do_once_on_idle</location>do_once_on_idle</feature><symbol> </symbol><symbol>(</symbol><local>an_action</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_add_idle_action</anchor><feature><location>../interface/ev_application.xml#f_add_idle_action</location>add_idle_action</feature> <symbol>(</symbol><local>a_idle_action</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Add </comment><quoted>a_idle_actions</quoted><comment> to </comment><feature><location>../interface/ev_application_action_sequences.xml#f_idle_actions</location>idle_actions</feature><comment> if not already present.</comment>
			<comment>--</comment><comment> Thread safe</comment>
		<keyword>require</keyword>
			<tag>a_idle_action_not_void</tag><symbol>:</symbol> <local>a_idle_action</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_add_idle_action</location>add_idle_action</feature><symbol> </symbol><symbol>(</symbol><local>a_idle_action</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_remove_idle_action</anchor><feature><location>../interface/ev_application.xml#f_remove_idle_action</location>remove_idle_action</feature> <symbol>(</symbol><local>a_idle_action</local><symbol>:</symbol> <class><include>False</include>PROCEDURE</class><symbol>)</symbol>
			<comment>--</comment><comment> Remove </comment><quoted>a_idle_action</quoted><comment> from </comment><feature><location>../interface/ev_application_action_sequences.xml#f_idle_actions</location>idle_actions</feature><comment>.</comment>
			<comment>--</comment><comment> Thread safe.</comment>
		<keyword>require</keyword>
			<tag>a_idle_action_not_void</tag><symbol>:</symbol> <local>a_idle_action</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_remove_idle_action</location>remove_idle_action</feature><symbol> </symbol><symbol>(</symbol><local>a_idle_action</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>}</symbol> <comment>--</comment><comment> Window registry</comment>

	<anchor>f_register_window</anchor><feature><location>../interface/ev_application.xml#f_register_window</location>register_window</feature> <symbol>(</symbol><local>w</local><symbol>:</symbol> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>)</symbol>
			<comment>--</comment><comment> Register a window </comment><quoted>w</quoted><comment> to prevent it from being garbage-collected</comment>
			<comment>--</comment><comment> in case there is no reference to it in the system</comment>
			<comment>--</comment><comment> but the associated window is visible.</comment>
			<comment>--</comment><comment> Because of the last condition the recommended way to use the feature is</comment>
			<comment>--</comment><comment> to call it after the window is shown using </comment><quoted>show</quoted><comment> or similar feature</comment>
			<comment>--</comment><comment> to make sure after the call to it the window is still open.</comment>
			<comment>--</comment><comment> (The window may become closed as a result of processing of user interaction,</comment>
			<comment>--</comment><comment> e.g. this may happen with dialogs).</comment>
			<comment>--</comment><comment> See also: </comment><feature><location>../interface/ev_application.xml#f_unregister_window</location>unregister_window</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <keyword>not</keyword> <feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol> <keyword>and then</keyword> <keyword>not</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_is_show_requested</location>is_show_requested</feature> <keyword>then</keyword>
				<feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>extend</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>is_registered</tag><symbol>:</symbol> <symbol>(</symbol><keyword>not</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>and then</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_is_show_requested</location>is_show_requested</feature><symbol>)</symbol> <keyword>implies</keyword> <feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_unregister_window</anchor><feature><location>../interface/ev_application.xml#f_unregister_window</location>unregister_window</feature> <symbol>(</symbol><local>w</local><symbol>:</symbol> <class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>)</symbol>
			<comment>--</comment><comment> Unregister a window </comment><quoted>w</quoted><comment> to allow it for being garbage-collected</comment>
			<comment>--</comment><comment> if the corresponding window is hidden.</comment>
			<comment>--</comment><comment> Because of the last condition the recommended way to use the feature is</comment>
			<comment>--</comment><comment> to call it after the window is hidden using </comment><quoted>hide</quoted><comment> or similar feature</comment>
			<comment>--</comment><comment> to make sure after the call to it the window is closed.</comment>
			<comment>--</comment><comment> (The window may stay open as a result of processing of user interaction.)</comment>
			<comment>--</comment><comment> See also: </comment><feature><location>../interface/ev_application.xml#f_register_window</location>register_window</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>if</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>or else</keyword> <keyword>not</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_is_show_requested</location>is_show_requested</feature> <keyword>then</keyword>
				<feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>start</feature>
				<feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>prune</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol>
			<keyword>end</keyword>
		<keyword>ensure</keyword>
			<tag>is_unregistered</tag><symbol>:</symbol> <symbol>(</symbol><local>w</local><dot>.</dot><feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature> <keyword>or else</keyword> <keyword>not</keyword> <local>w</local><dot>.</dot><feature><location>../interface/ev_widget.xml#f_is_show_requested</location>is_show_requested</feature><symbol>)</symbol> <keyword>implies</keyword> <keyword>not</keyword> <feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>has</feature><symbol> </symbol><symbol>(</symbol><local>w</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Window registry</comment>

	<anchor>f_registered_windows</anchor><feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><symbol>:</symbol> <class><include>False</include>ARRAYED_LIST</class> <symbol>[</symbol><class><location>../interface/ev_window.xml</location>EV_WINDOW</class><symbol>]</symbol>
			<comment>--</comment><comment> A list of registered windows.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>,</symbol> <class><location>../interface/ev_abstract_pick_and_dropable.xml</location>EV_ABSTRACT_PICK_AND_DROPABLE</class><symbol>,</symbol> <class><location>../implementation_interface/ev_shared_transport_i.xml</location>EV_SHARED_TRANSPORT_I</class><symbol>,</symbol> <class><include>False</include>EXCEPTIONS</class><symbol>,</symbol> <class><location>../interface/ev_any_handler.xml</location>EV_ANY_HANDLER</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_implementation</anchor><feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><symbol>:</symbol> <class><location>../implementation_interface/ev_application_i.xml</location>EV_APPLICATION_I</class>
			<comment>--</comment><comment> Responsible for interaction with native graphics toolkit.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_create_interface_objects</anchor><feature><location>../interface/ev_application.xml#f_create_interface_objects</location>create_interface_objects</feature>
			<comment>--</comment><comment> Create objects to be used by </comment><quoted>Current</quoted><comment> in </comment><feature><location>../interface/ev_application.xml#f_initialize</location>initialize</feature>
			<comment>--</comment><comment> Implemented by descendants to create attached objects</comment>
			<comment>--</comment><comment> in order to adhere to void-safety due to the implementation bridge pattern.</comment>
		<keyword>do</keyword>
		<keyword>end</keyword>

	<anchor>f_create_implementation</anchor><feature><location>../interface/ev_application.xml#f_create_implementation</location>create_implementation</feature>
			<comment>--</comment><comment> See </comment><quoted>{EV_ANY}.create_implementation</quoted><comment>.</comment>
		<keyword>local</keyword>
			<local>l_environment</local><symbol>:</symbol> <class><location>../interface/ev_environment.xml</location>EV_ENVIRONMENT</class>
		<keyword>do</keyword>
			<keyword>create</keyword> <local>l_environment</local>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature> <symbol>:=</symbol> <local>l_environment</local><dot>.</dot><feature><location>../interface/ev_environment.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_environment_i.xml#f_application_i</location>application_i</feature>
			<keyword>create</keyword> <feature><location>../interface/ev_application.xml#f_registered_windows</location>registered_windows</feature><dot>.</dot><feature><include>False</include>make</feature><symbol> </symbol><symbol>(</symbol><number>1</number><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_internal_launch_application</anchor><feature><location>../interface/ev_application.xml#f_internal_launch_application</location>internal_launch_application</feature> <symbol>(</symbol><local>a_handler</local><symbol>:</symbol> <keyword>separate</keyword> <class><location>../interface/ev_application_handler.xml</location>EV_APPLICATION_HANDLER</class><symbol>)</symbol>
			<comment>--</comment><comment> Call launch on </comment><quoted>a_handler</quoted>
		<keyword>do</keyword>
			<feature><location>../interface/ev_application.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_application_i.xml#f_call_post_launch_actions</location>call_post_launch_actions</feature>
			<local>a_handler</local><dot>.</dot><feature><location>../interface/ev_application_handler.xml#f_launch</location>launch</feature>
		<keyword>end</keyword>

	<anchor>f_application_handler</anchor><feature><location>../interface/ev_application.xml#f_application_handler</location>application_handler</feature><symbol>:</symbol> <keyword>detachable</keyword> <keyword>separate</keyword> <class><location>../interface/ev_application_handler.xml</location>EV_APPLICATION_HANDLER</class>
			<comment>--</comment><comment> A processor that will log calls to the current processor to process graphical events.</comment>
			<comment>--</comment><comment> This is required so that the main GUI processor can logged calls (i.e. its main creation</comment>
			<comment>--</comment><comment> procedure has exited).</comment>
	
<keyword>invariant</keyword>
	<tag>tooltip_delay_not_negative</tag><symbol>:</symbol> <feature><location>../interface/ev_application.xml#f_tooltip_delay</location>tooltip_delay</feature> <symbol>&gt;=</symbol> <number>0</number>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2016, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../interface/ev_application.xml</location>EV_APPLICATION</class></system>

