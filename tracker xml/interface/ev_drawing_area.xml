<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Widget onto which graphical primatives may be drawn.</string>
		<string>Primitives are drawn directly onto the screen without buffering.</string>
		<string>(When buffering is required use EV_PIXMAP.)</string>
	<string>]</string><string>&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;drawable, expose, primitive, figure, draw, paint, image&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2016-09-27 08:50:48 -0700 (Tue, 27 Sep 2016) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 99192 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../interface/ev_drawing_area.xml</location>EV_DRAWING_AREA</class>

<keyword>inherit</keyword>
	<class><location>../interface/ev_drawable.xml</location>EV_DRAWABLE</class>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><symbol>,</symbol>
			<feature><location>../interface/ev_drawing_area.xml#f_is_in_default_state</location>is_in_default_state</feature>
		<keyword>end</keyword>

	<class><location>../interface/ev_primitive.xml</location>EV_PRIMITIVE</class>
		<keyword>undefine</keyword>
			<feature><location>../interface/ev_colorizable.xml#f_set_background_color</location>set_background_color</feature><symbol>,</symbol>
			<feature><location>../interface/ev_colorizable.xml#f_background_color</location>background_color</feature><symbol>,</symbol>
			<feature><location>../interface/ev_colorizable.xml#f_set_foreground_color</location>set_foreground_color</feature><symbol>,</symbol>
			<feature><location>../interface/ev_colorizable.xml#f_foreground_color</location>foreground_color</feature>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><symbol>,</symbol>
			<feature><location>../interface/ev_drawing_area.xml#f_is_in_default_state</location>is_in_default_state</feature><symbol>,</symbol>
			<feature><location>../interface/ev_drawing_area.xml#f_is_in_default_state_for_tabs</location>is_in_default_state_for_tabs</feature>
		<keyword>end</keyword>

	<class><location>../interface/ev_drawable_action_sequences.xml</location>EV_DRAWABLE_ACTION_SEQUENCES</class>

<keyword>create</keyword> 
	<feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature>

<keyword>feature</keyword> <comment>--</comment><comment> Basic operations</comment>

	<anchor>f_redraw</anchor><feature><location>../interface/ev_drawing_area.xml#f_redraw</location>redraw</feature>
			<comment>--</comment><comment> Call </comment><feature><location>../interface/ev_drawable_action_sequences.xml#f_expose_actions</location>expose_actions</feature><comment> for </comment><quoted>Current</quoted><comment> when next idle.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_redraw</location>redraw</feature>
		<keyword>end</keyword>

	<anchor>f_clear_and_redraw</anchor><feature><location>../interface/ev_drawing_area.xml#f_clear_and_redraw</location>clear_and_redraw</feature>
			<comment>--</comment><comment> Clear the window.</comment>
			<comment>--</comment><comment> Call </comment><feature><location>../interface/ev_drawable_action_sequences.xml#f_expose_actions</location>expose_actions</feature><comment> for </comment><quoted>Current</quoted><comment> when next idle.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_clear_and_redraw</location>clear_and_redraw</feature>
		<keyword>end</keyword>

	<anchor>f_redraw_rectangle</anchor><feature><location>../interface/ev_drawing_area.xml#f_redraw_rectangle</location>redraw_rectangle</feature> <symbol>(</symbol><local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_width</local><symbol>,</symbol> <local>a_height</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Call </comment><feature><location>../interface/ev_drawable_action_sequences.xml#f_expose_actions</location>expose_actions</feature><comment> for rectangle described with upper-left</comment>
			<comment>--</comment><comment> corner on (</comment><quoted>a_x</quoted><comment>, </comment><quoted>a_y</quoted><comment>) with size </comment><quoted>a_width</quoted><comment> and </comment><quoted>a_height</quoted><comment> when next idle.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_redraw_rectangle</location>redraw_rectangle</feature><symbol> </symbol><symbol>(</symbol><local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_width</local><symbol>,</symbol> <local>a_height</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_clear_and_redraw_rectangle</anchor><feature><location>../interface/ev_drawing_area.xml#f_clear_and_redraw_rectangle</location>clear_and_redraw_rectangle</feature> <symbol>(</symbol><local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_width</local><symbol>,</symbol> <local>a_height</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Clear rectangle described with upper-left corner on (</comment><quoted>a_x</quoted><comment>, </comment><quoted>a_y</quoted><comment>)</comment>
			<comment>--</comment><comment> with size </comment><quoted>a_width</quoted><comment> and </comment><quoted>a_height</quoted><comment>.</comment>
			<comment>--</comment><comment> Call </comment><feature><location>../interface/ev_drawable_action_sequences.xml#f_expose_actions</location>expose_actions</feature><comment> for rectangle when next idle.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_clear_and_redraw_rectangle</location>clear_and_redraw_rectangle</feature><symbol> </symbol><symbol>(</symbol><local>a_x</local><symbol>,</symbol> <local>a_y</local><symbol>,</symbol> <local>a_width</local><symbol>,</symbol> <local>a_height</local><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_flush</anchor><feature><location>../interface/ev_drawing_area.xml#f_flush</location>flush</feature>
			<comment>--</comment><comment> Execute any delayed calls to </comment><feature><location>../interface/ev_drawable_action_sequences.xml#f_expose_actions</location>expose_actions</feature><comment> without waiting</comment>
			<comment>--</comment><comment> for next idle. Delayed calls to </comment><feature><location>../interface/ev_drawable_action_sequences.xml#f_expose_actions</location>expose_actions</feature><comment> happen as a</comment>
			<comment>--</comment><comment> result of calling on of </comment><feature><location>../interface/ev_drawing_area.xml#f_redraw</location>redraw</feature><comment>, </comment><feature><location>../interface/ev_drawing_area.xml#f_clear_and_redraw</location>clear_and_redraw</feature><comment>,</comment>
			<comment>--</comment><comment> </comment><feature><location>../interface/ev_drawing_area.xml#f_redraw_rectangle</location>redraw_rectangle</feature><comment> or </comment><quoted>clear_and_redraw_rectngle</quoted><comment>.</comment>
			<comment>--</comment><comment> Call this feature to make the effects of one or more previous</comment>
			<comment>--</comment><comment> calls to these features immediately visible.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_flush</location>flush</feature>
		<keyword>end</keyword>

	<anchor>f_enable_focus_on_press</anchor><feature><location>../interface/ev_drawing_area.xml#f_enable_focus_on_press</location>enable_focus_on_press</feature>
			<comment>--</comment><comment> Enable focus on press handling.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_enable_focus_on_press</location>enable_focus_on_press</feature>
		<keyword>end</keyword>

	<anchor>f_disable_focus_on_press</anchor><feature><location>../interface/ev_drawing_area.xml#f_disable_focus_on_press</location>disable_focus_on_press</feature>
			<comment>--</comment><comment> Disable default focus handling when mouse button is pressed on drawing area.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_drawing_area_i.xml#f_disable_focus_on_press</location>disable_focus_on_press</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol> <comment>--</comment><comment> Contract support</comment>

	<anchor>f_is_in_default_state</anchor><feature><location>../interface/ev_drawing_area.xml#f_is_in_default_state</location>is_in_default_state</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> in its default state?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword><location>../interface/ev_primitive.xml#f_is_in_default_state</location>Precursor</keyword> <symbol>{</symbol><class><location>../interface/ev_primitive.xml</location>EV_PRIMITIVE</class><symbol>}</symbol> <keyword>and then</keyword> <keyword><location>../interface/ev_drawable.xml#f_is_in_default_state</location>Precursor</keyword> <symbol>{</symbol><class><location>../interface/ev_drawable.xml</location>EV_DRAWABLE</class><symbol>}</symbol>
		<keyword>end</keyword>

	<anchor>f_is_in_default_state_for_tabs</anchor><feature><location>../interface/ev_drawing_area.xml#f_is_in_default_state_for_tabs</location>is_in_default_state_for_tabs</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> in its default state with regards to tabs?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword>not</keyword> <feature><location>../interface/ev_tab_controlable.xml#f_is_tabable_to</location>is_tabable_to</feature> <keyword>and</keyword> <keyword>not</keyword> <feature><location>../interface/ev_tab_controlable.xml#f_is_tabable_from</location>is_tabable_from</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>,</symbol> <class><location>../interface/ev_any_handler.xml</location>EV_ANY_HANDLER</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_implementation</anchor><feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><symbol>:</symbol> <class><location>../implementation_interface/ev_drawing_area_i.xml</location>EV_DRAWING_AREA_I</class>
			<comment>--</comment><comment> Responsible for interaction with native graphics toolkit.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_create_implementation</anchor><feature><location>../interface/ev_drawing_area.xml#f_create_implementation</location>create_implementation</feature>
			<comment>--</comment><comment> See </comment><quoted>{EV_ANY}.create_implementation</quoted><comment>.</comment>
		<keyword>do</keyword>
			<keyword>create</keyword> <symbol>{</symbol><class><location>../implementation_gtk/ev_drawing_area_imp.xml</location>EV_DRAWING_AREA_IMP</class><symbol>}</symbol> <feature><location>../interface/ev_drawing_area.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_gtk/ev_drawing_area_imp.xml#f_make</location>make</feature>
		<keyword>end</keyword>
	
<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2014, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../interface/ev_drawing_area.xml</location>EV_DRAWING_AREA</class></system>

