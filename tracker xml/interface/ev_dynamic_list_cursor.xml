<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Cursor for Eiffel Vision dynamic lists.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;container, list, cursor&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2013-05-20 16:15:17 -0700 (Mon, 20 May 2013) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 92557 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../interface/ev_dynamic_list_cursor.xml</location>EV_DYNAMIC_LIST_CURSOR</class> <symbol>[</symbol><generic>G</generic><symbol>]</symbol>

<keyword>inherit</keyword>
	<class><include>False</include>CURSOR</class>

<keyword>create</keyword> 
	<feature><location>../interface/ev_dynamic_list_cursor.xml#f_make</location>make</feature><symbol>,</symbol>
	<feature><location>../interface/ev_dynamic_list_cursor.xml#f_make_with_item</location>make_with_item</feature>

<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment>EV_DYNAMIC_LIST_I} -- Initialization</comment>

	<anchor>f_make</anchor><feature><location>../interface/ev_dynamic_list_cursor.xml#f_make</location>make</feature> <symbol>(</symbol><local>current_item</local><symbol>:</symbol> <keyword>detachable</keyword> <generic>G</generic><symbol>;</symbol> <local>before_state</local><symbol>,</symbol> <local>after_state</local><symbol>:</symbol> <class><include>False</include>BOOLEAN</class><symbol>)</symbol>
			<comment>--</comment><comment> Create a cursor pointing to </comment><quoted>current_item</quoted><comment>.</comment>
			<comment>--</comment><comment> When </comment><quoted>current_item</quoted><comment> Void, must be before or after.</comment>
		<keyword>require</keyword>
			<tag>item_void_equals_before_or_after</tag><symbol>:</symbol> <symbol>(</symbol><local>current_item</local> <symbol>=</symbol> <keyword>Void</keyword><symbol>)</symbol> <symbol>=</symbol> <symbol>(</symbol><local>before_state</local> <keyword>or</keyword> <local>after_state</local><symbol>)</symbol>
		<keyword>do</keyword>
			<feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature> <symbol>:=</symbol> <local>current_item</local>
			<feature><location>../interface/ev_dynamic_list_cursor.xml#f_after</location>after</feature> <symbol>:=</symbol> <local>after_state</local>
			<feature><location>../interface/ev_dynamic_list_cursor.xml#f_before</location>before</feature> <symbol>:=</symbol> <local>before_state</local>
		<keyword>ensure</keyword>
			<tag>item_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature> <symbol>=</symbol> <local>current_item</local>
			<tag>after_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_after</location>after</feature> <symbol>=</symbol> <local>after_state</local>
			<tag>before_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_before</location>before</feature> <symbol>=</symbol> <local>before_state</local>
		<keyword>end</keyword>

	<anchor>f_make_with_item</anchor><feature><location>../interface/ev_dynamic_list_cursor.xml#f_make_with_item</location>make_with_item</feature> <symbol>(</symbol><local>an_item</local><symbol>:</symbol> <generic>G</generic><symbol>)</symbol>
			<comment>--</comment><comment> Create a cursor pointing to </comment><quoted>an_item</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>an_item_not_void</tag><symbol>:</symbol> <local>an_item</local> <symbol>/=</symbol> <keyword>Void</keyword>
		<keyword>do</keyword>
			<feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature> <symbol>:=</symbol> <local>an_item</local>
		<keyword>ensure</keyword>
			<tag>item_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature> <symbol>=</symbol> <local>an_item</local>
			<tag>not_after</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_after</location>after</feature>
			<tag>not_before</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_before</location>before</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../implementation_interface/ev_dynamic_list_i.xml</location>EV_DYNAMIC_LIST_I</class><symbol>,</symbol> <class><include>False</include>EV_TABLE_I</class><symbol>}</symbol> <comment>--</comment><comment> Access</comment>

	<anchor>f_item</anchor><feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature><symbol>:</symbol> <keyword>detachable</keyword> <generic>G</generic>
			<comment>--</comment><comment> Item </comment><quoted>Current</quoted><comment> points to.</comment>

	<anchor>f_after</anchor><feature><location>../interface/ev_dynamic_list_cursor.xml#f_after</location>after</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> When </comment><feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature><comment> Void, is list </comment><feature><location>../interface/ev_dynamic_list_cursor.xml#f_after</location>after</feature><comment>?</comment>

	<anchor>f_before</anchor><feature><location>../interface/ev_dynamic_list_cursor.xml#f_before</location>before</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> When </comment><feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature><comment> Void, is list </comment><feature><location>../interface/ev_dynamic_list_cursor.xml#f_before</location>before</feature><comment>?</comment>
	
<keyword>invariant</keyword>
	<tag>item_void_equals_before_or_after</tag><symbol>:</symbol> <symbol>(</symbol><feature><location>../interface/ev_dynamic_list_cursor.xml#f_item</location>item</feature> <symbol>=</symbol> <keyword>Void</keyword><symbol>)</symbol> <symbol>=</symbol> <symbol>(</symbol><feature><location>../interface/ev_dynamic_list_cursor.xml#f_before</location>before</feature> <keyword>or</keyword> <feature><location>../interface/ev_dynamic_list_cursor.xml#f_after</location>after</feature><symbol>)</symbol>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2006, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>356 Storke Road, Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../interface/ev_dynamic_list_cursor.xml</location>EV_DYNAMIC_LIST_CURSOR</class></system>

