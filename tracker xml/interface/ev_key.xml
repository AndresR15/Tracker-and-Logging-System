<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Vision key. Represents a virtual key code. </string><feature><location>../interface/ev_key.xml#f_code</location>code</feature><string> can be any%Nof the constant values defined in EV_KEY_CONSTANTS.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2017-05-03 08:56:14 -0700 (Wed, 03 May 2017) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 100317 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../interface/ev_key.xml</location>EV_KEY</class>

<keyword>inherit</keyword>
	<class><location>../interface/ev_key_constants.xml</location>EV_KEY_CONSTANTS</class>
		<keyword>export</keyword>
			<symbol>{</symbol>NONE<symbol>}</symbol> <keyword>all</keyword>
			<symbol>{</symbol><class><include>False</include>ANY</class><symbol>}</symbol> <feature><location>../interface/ev_key_constants.xml#f_valid_key_code</location>valid_key_code</feature>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_key.xml#f_default_create</location>default_create</feature><symbol>,</symbol>
			<feature><location>../interface/ev_key.xml#f_out</location>out</feature>
		<keyword>end</keyword>

	<class><include>False</include>ANY</class>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_key.xml#f_default_create</location>default_create</feature><symbol>,</symbol>
			<feature><location>../interface/ev_key.xml#f_out</location>out</feature>
		<keyword>end</keyword>

<keyword>create</keyword> 
	<feature><location>../interface/ev_key.xml#f_default_create</location>default_create</feature><symbol>,</symbol>
	<feature><location>../interface/ev_key.xml#f_make_with_code</location>make_with_code</feature>

<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Initialization</comment>

	<anchor>f_default_create</anchor><feature><location>../interface/ev_key.xml#f_default_create</location>default_create</feature>
			<comment>--</comment><comment> Initialize with </comment><feature><location>../interface/ev_key_constants.xml#f_key_enter</location>Key_enter</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword><location>file#f_feature</location>Precursor</keyword>
			<feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>:=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_enter</location>Key_enter</feature>
		<keyword>end</keyword>

	<anchor>f_make_with_code</anchor><feature><location>../interface/ev_key.xml#f_make_with_code</location>make_with_code</feature> <symbol>(</symbol><local>a_code</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Initialize with </comment><quoted>a_code</quoted><comment>.</comment>
		<keyword>require</keyword>
			<tag>a_code_valid</tag><symbol>:</symbol> <feature><location>../interface/ev_key_constants.xml#f_valid_key_code</location>valid_key_code</feature><symbol> </symbol><symbol>(</symbol><local>a_code</local><symbol>)</symbol>
		<keyword>do</keyword>
			<feature><location>../interface/ev_key.xml#f_default_create</location>default_create</feature>
			<feature><location>../interface/ev_key.xml#f_set_code</location>set_code</feature><symbol> </symbol><symbol>(</symbol><local>a_code</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Access</comment>

	<anchor>f_code</anchor><feature><location>../interface/ev_key.xml#f_code</location>code</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Code representing some key.</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Element change</comment>

	<anchor>f_set_code</anchor><feature><location>../interface/ev_key.xml#f_set_code</location>set_code</feature> <symbol>(</symbol><local>a_code</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>a_code</quoted><comment> to </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>a_code_valid</tag><symbol>:</symbol> <feature><location>../interface/ev_key_constants.xml#f_valid_key_code</location>valid_key_code</feature><symbol> </symbol><symbol>(</symbol><local>a_code</local><symbol>)</symbol>
		<keyword>do</keyword>
			<feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>:=</symbol> <local>a_code</local>
		<keyword>ensure</keyword>
			<tag>code_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>=</symbol> <local>a_code</local>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_is_alpha</anchor><feature><location>../interface/ev_key.xml#f_is_alpha</location>is_alpha</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment> in </comment><comment>[&quot;a&quot;-&quot;z&quot;]</comment><comment>?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&gt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_a</location>Key_a</feature> <keyword>and then</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&lt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_z</location>Key_z</feature>
		<keyword>end</keyword>

	<anchor>f_is_numpad</anchor><feature><location>../interface/ev_key.xml#f_is_numpad</location>is_numpad</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment> a key on the numpad?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&gt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_numpad_0</location>Key_numpad_0</feature> <keyword>and then</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&lt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_numpad_decimal</location>Key_numpad_decimal</feature>
		<keyword>end</keyword>

	<anchor>f_is_number</anchor><feature><location>../interface/ev_key.xml#f_is_number</location>is_number</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment> in </comment><comment>[&quot;0&quot;-&quot;9&quot;]</comment><comment>?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&gt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_0</location>Key_0</feature> <keyword>and then</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&lt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_9</location>Key_9</feature>
		<keyword>end</keyword>

	<anchor>f_is_function</anchor><feature><location>../interface/ev_key.xml#f_is_function</location>is_function</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment> a function key?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&gt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_f1</location>Key_f1</feature> <keyword>and then</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&lt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_f12</location>Key_f12</feature>
		<keyword>end</keyword>

	<anchor>f_is_arrow</anchor><feature><location>../interface/ev_key.xml#f_is_arrow</location>is_arrow</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment> an arrow key?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&gt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_up</location>Key_up</feature> <keyword>and then</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&lt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_right</location>Key_right</feature>
		<keyword>end</keyword>

	<anchor>f_is_printable</anchor><feature><location>../interface/ev_key.xml#f_is_printable</location>is_printable</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment> a printable key?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_key.xml#f_is_alpha</location>is_alpha</feature> <keyword>or</keyword> <feature><location>../interface/ev_key.xml#f_is_number</location>is_number</feature> <keyword>or</keyword> <feature><location>../interface/ev_key.xml#f_is_numpad</location>is_numpad</feature> <keyword>or</keyword> <symbol>(</symbol><feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_space</location>Key_space</feature><symbol>)</symbol> <keyword>or</keyword> <symbol>(</symbol><feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&gt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_comma</location>Key_comma</feature> <keyword>and then</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>&lt;=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_dash</location>Key_dash</feature><symbol>)</symbol>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword>Result</keyword> <keyword>and</keyword> <feature><location>../interface/ev_key.xml#f_code</location>code</feature> <symbol>/=</symbol> <feature><location>../interface/ev_key_constants.xml#f_key_num_lock</location>Key_num_lock</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Standard output</comment>

	<anchor>f_text</anchor><feature><location>../interface/ev_key.xml#f_text</location>text</feature><symbol>:</symbol> <class><include>False</include>STRING_32</class>
			<comment>--</comment><comment> Readable representation of </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <symbol>(</symbol><feature><location>../interface/ev_key_constants.xml#f_key_strings</location>Key_strings</feature> <symbol>@</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature><symbol>)</symbol>
		<keyword>end</keyword>

	<anchor>f_out</anchor><feature><location>../interface/ev_key.xml#f_out</location>out</feature><symbol>:</symbol> <class><include>False</include>STRING_8</class>
		<keyword>obsolete</keyword> &quot;Use `text' instead. [2017-05-31]&quot;
			<comment>--</comment><comment> Readable representation of </comment><feature><location>../interface/ev_key.xml#f_code</location>code</feature><comment>.</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <symbol>(</symbol><feature><location>../interface/ev_key_constants.xml#f_key_strings</location>Key_strings</feature> <symbol>@</symbol> <feature><location>../interface/ev_key.xml#f_code</location>code</feature><symbol>)</symbol><dot>.</dot><feature><include>False</include>as_string_8_conversion</feature>
		<keyword>end</keyword>
	
<keyword>invariant</keyword>
	<tag>code_valid</tag><symbol>:</symbol> <feature><location>../interface/ev_key_constants.xml#f_valid_key_code</location>valid_key_code</feature><symbol> </symbol><symbol>(</symbol><feature><location>../interface/ev_key.xml#f_code</location>code</feature><symbol>)</symbol>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2012, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>5949 Hollister Ave., Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../interface/ev_key.xml</location>EV_KEY</class></system>

