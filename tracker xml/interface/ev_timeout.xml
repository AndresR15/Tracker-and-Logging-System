<system>
<keyword>note</keyword>
	<indexing_tag>description</indexing_tag><symbol>:</symbol> <string>&quot;Repeatedly executes a sequence of </string><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><string> at a regular </string><feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature><string>.&quot;</string>
	<indexing_tag>legal</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>status</indexing_tag><symbol>:</symbol> <string>&quot;See notice at end of class.&quot;</string>
	<indexing_tag>keywords</indexing_tag><symbol>:</symbol> <string>&quot;timout, delay, timer, background&quot;</string>
	<indexing_tag>date</indexing_tag><symbol>:</symbol> <string>&quot;$Date: 2009-06-03 17:11:49 -0700 (Wed, 03 Jun 2009) $&quot;</string>
	<indexing_tag>revision</indexing_tag><symbol>:</symbol> <string>&quot;$Revision: 79073 $&quot;</string>

<keyword>class</keyword> 
	<class><location>../interface/ev_timeout.xml</location>EV_TIMEOUT</class>

<keyword>inherit</keyword>
	<class><location>../interface/ev_any.xml</location>EV_ANY</class>
		<keyword>redefine</keyword>
			<feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><symbol>,</symbol>
			<feature><location>../interface/ev_timeout.xml#f_is_in_default_state</location>is_in_default_state</feature>
		<keyword>end</keyword>

<keyword>create</keyword> 
	<feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature><symbol>,</symbol>
	<feature><location>../interface/ev_timeout.xml#f_make_with_interval</location>make_with_interval</feature>

<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Initialization</comment>

	<anchor>f_make_with_interval</anchor><feature><location>../interface/ev_timeout.xml#f_make_with_interval</location>make_with_interval</feature> <symbol>(</symbol><local>an_interval</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Create with </comment><quoted>an_interval</quoted><comment> in milliseconds.</comment>
		<keyword>require</keyword>
			<tag>an_interval_not_negative</tag><symbol>:</symbol> <local>an_interval</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>do</keyword>
			<feature><location>../interface/ev_any.xml#f_default_create</location>default_create</feature>
			<feature><location>../interface/ev_timeout.xml#f_set_interval</location>set_interval</feature><symbol> </symbol><symbol>(</symbol><local>an_interval</local><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Access</comment>

	<anchor>f_interval</anchor><feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Time between calls to </comment><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><comment> in milliseconds.</comment>
			<comment>--</comment><comment> If 0, then </comment><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><comment> are disabled.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature>
		<keyword>ensure</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>=</symbol> <feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_timeout_i.xml#f_interval</location>interval</feature>
		<keyword>end</keyword>

	<anchor>f_actions</anchor><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><symbol>:</symbol> <class><location>../interface/ev_notify_action_sequence.xml</location>EV_NOTIFY_ACTION_SEQUENCE</class>
			<comment>--</comment><comment> Actions to be performed at a regular </comment><feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature><comment>.</comment>
			<comment>--</comment><comment> Only called when </comment><feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature><comment> is greater than 0.</comment>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status report</comment>

	<anchor>f_count</anchor><feature><location>../interface/ev_timeout.xml#f_count</location>count</feature><symbol>:</symbol> <class><include>False</include>INTEGER_32</class>
			<comment>--</comment><comment> Number of times </comment><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><comment> have been called since last</comment>
			<comment>--</comment><comment> call to </comment><feature><location>../interface/ev_timeout.xml#f_reset_count</location>reset_count</feature><comment>.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature>
		<keyword>ensure</keyword>
			<tag>bridge_ok</tag><symbol>:</symbol> <keyword>Result</keyword> <symbol>=</symbol> <feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_timeout_i.xml#f_count</location>count</feature>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <comment>--</comment><comment> Status setting</comment>

	<anchor>f_set_interval</anchor><feature><location>../interface/ev_timeout.xml#f_set_interval</location>set_interval</feature> <symbol>(</symbol><local>an_interval</local><symbol>:</symbol> <class><include>False</include>INTEGER_32</class><symbol>)</symbol>
			<comment>--</comment><comment> Assign </comment><quoted>an_interval</quoted><comment> in milliseconds to </comment><feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature><comment>.</comment>
			<comment>--</comment><comment> If </comment><quoted>an_interval</quoted><comment> is 0, </comment><feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature><comment> are disabled.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
			<tag>an_interval_not_negative</tag><symbol>:</symbol> <local>an_interval</local> <symbol>&gt;=</symbol> <number>0</number>
		<keyword>do</keyword>
			<feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_timeout_i.xml#f_set_interval</location>set_interval</feature><symbol> </symbol><symbol>(</symbol><local>an_interval</local><symbol>)</symbol>
		<keyword>ensure</keyword>
			<tag>interval_assigned</tag><symbol>:</symbol> <feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature> <symbol>=</symbol> <local>an_interval</local>
			<tag>count_not_changed</tag><symbol>:</symbol> <feature><location>../interface/ev_timeout.xml#f_count</location>count</feature> <symbol>=</symbol> <keyword>old</keyword> <feature><location>../interface/ev_timeout.xml#f_count</location>count</feature>
		<keyword>end</keyword>

	<anchor>f_reset_count</anchor><feature><location>../interface/ev_timeout.xml#f_reset_count</location>reset_count</feature>
			<comment>--</comment><comment> Set </comment><feature><location>../interface/ev_timeout.xml#f_count</location>count</feature><comment> to 0.</comment>
		<keyword>require</keyword>
			<tag>not_destroyed</tag><symbol>:</symbol> <keyword>not</keyword> <feature><location>../interface/ev_any.xml#f_is_destroyed</location>is_destroyed</feature>
		<keyword>do</keyword>
			<feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_interface/ev_timeout_i.xml#f_reset_count</location>reset_count</feature>
		<keyword>ensure</keyword>
			<tag>count_is_zero</tag><symbol>:</symbol> <feature><location>../interface/ev_timeout.xml#f_count</location>count</feature> <symbol>=</symbol> <number>0</number>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Contract support</comment>

	<anchor>f_is_in_default_state</anchor><feature><location>../interface/ev_timeout.xml#f_is_in_default_state</location>is_in_default_state</feature><symbol>:</symbol> <class><include>False</include>BOOLEAN</class>
			<comment>--</comment><comment> Is </comment><quoted>Current</quoted><comment> in its default state?</comment>
		<keyword>do</keyword>
			<keyword>Result</keyword> <symbol>:=</symbol> <keyword><location>../interface/ev_any.xml#f_is_in_default_state</location>Precursor</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>}</symbol> <keyword>and</keyword> <symbol>(</symbol><feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature> <symbol>=</symbol> <number>0</number> <keyword>and</keyword> <feature><location>../interface/ev_timeout.xml#f_count</location>count</feature> <symbol>=</symbol> <number>0</number><symbol>)</symbol>
		<keyword>end</keyword>
	
<keyword>feature</keyword> <symbol>{</symbol><class><location>../interface/ev_any.xml</location>EV_ANY</class><symbol>,</symbol> <class><location>../implementation_interface/ev_any_i.xml</location>EV_ANY_I</class><symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_implementation</anchor><feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><symbol>:</symbol> <class><location>../implementation_interface/ev_timeout_i.xml</location>EV_TIMEOUT_I</class>
			<comment>--</comment><comment> Responsible for interaction with native graphics toolkit.</comment>
	
<keyword>feature</keyword> <symbol>{</symbol>NONE<symbol>}</symbol> <comment>--</comment><comment> Implementation</comment>

	<anchor>f_create_interface_objects</anchor><feature><location>../interface/ev_timeout.xml#f_create_interface_objects</location>create_interface_objects</feature>
			<comment>--</comment><comment> Create objects to be used by </comment><quoted>Current</quoted><comment> in </comment><feature><location>../interface/ev_any.xml#f_initialize</location>initialize</feature>
			<comment>--</comment><comment> Implemented by descendants to create attached objects</comment>
			<comment>--</comment><comment> in order to adhere to void-safety due to the implementation bridge pattern.</comment>
		<keyword>do</keyword>
			<keyword>create</keyword> <feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature>
		<keyword>end</keyword>

	<anchor>f_create_implementation</anchor><feature><location>../interface/ev_timeout.xml#f_create_implementation</location>create_implementation</feature>
			<comment>--</comment><comment> Create implementation of button.</comment>
		<keyword>do</keyword>
			<keyword>create</keyword> <symbol>{</symbol><class><location>../implementation_gtk/ev_timeout_imp.xml</location>EV_TIMEOUT_IMP</class><symbol>}</symbol> <feature><location>../interface/ev_timeout.xml#f_implementation</location>implementation</feature><dot>.</dot><feature><location>../implementation_gtk/ev_timeout_imp.xml#f_make</location>make</feature>
		<keyword>end</keyword>
	
<keyword>invariant</keyword>
	<tag>interval_not_negative</tag><symbol>:</symbol> <feature><location>../interface/ev_timeout.xml#f_interval</location>interval</feature> <symbol>&gt;=</symbol> <number>0</number>
	<tag>count_not_negative</tag><symbol>:</symbol> <feature><location>../interface/ev_timeout.xml#f_count</location>count</feature> <symbol>&gt;=</symbol> <number>0</number>
	<tag>actions_not_void</tag><symbol>:</symbol> <feature><location>../interface/ev_timeout.xml#f_actions</location>actions</feature> <symbol>/=</symbol> <keyword>Void</keyword>

<keyword>note</keyword>
	<indexing_tag>copyright</indexing_tag><symbol>:</symbol> <string>&quot;Copyright (c) 1984-2006, Eiffel Software and others&quot;</string>
	<indexing_tag>license</indexing_tag><symbol>:</symbol> <string>&quot;Eiffel Forum License v2 (see </string><string><location>http://www.eiffel.com/licensing/forum.txt</location>http://www.eiffel.com/licensing/forum.txt</string><string>)&quot;</string>
	<indexing_tag>source</indexing_tag><symbol>:</symbol> <string>&quot;</string><string>[</string>
		<string>Eiffel Software</string>
		<string>356 Storke Road, Goleta, CA 93117 USA</string>
		<string>Telephone 805-685-1006, Fax 805-685-6869</string>
		<string>Website </string><string><location>http://www.eiffel.com</location>http://www.eiffel.com</string>
		<string>Customer support </string><string><location>http://support.eiffel.com</location>http://support.eiffel.com</string>
	<string>]</string><string>&quot;</string>

<keyword>end</keyword> <comment>--</comment> <comment>class </comment><class><location>../interface/ev_timeout.xml</location>EV_TIMEOUT</class></system>

